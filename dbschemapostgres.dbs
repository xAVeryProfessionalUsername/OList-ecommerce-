<?xml version="1.0" encoding="UTF-8" ?>
<project name="PostgreSQL" database="PostgreSQL" id="c9d80351-0b53-4218-8114-85de00b0e85d" >
	<schema name="information_schema" catalogname="postgrespractice" >
		<udt name="cardinal_number" udt_value_type="VARCHAR" udt_precision="NONE" sync_priority="900" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} integer CONSTRAINT cardinal_number_domain_check CHECK (VALUE >= 0)]]></udt_script>
		</udt>
		<udt name="character_data" udt_value_type="VARCHAR" udt_precision="NONE" sync_priority="900" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} character varying ]]></udt_script>
		</udt>
		<udt name="sql_identifier" udt_value_type="VARCHAR" udt_precision="NONE" sync_priority="900" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} name ]]></udt_script>
		</udt>
		<udt name="time_stamp" udt_value_type="VARCHAR" udt_precision="NONE" sync_priority="900" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} timestamp(2) with time zone DEFAULT CURRENT_TIMESTAMP(2) ]]></udt_script>
		</udt>
		<udt name="yes_or_no" udt_value_type="VARCHAR" udt_precision="NONE" sync_priority="900" >
			<udt_script><![CDATA[CREATE DOMAIN ${name} character varying(3) CONSTRAINT yes_or_no_check CHECK (VALUE::text = ANY (ARRAY['YES'::character varying, 'NO'::character varying]::text[]))]]></udt_script>
		</udt>
		<table name="sql_features" spec="" >
			<column name="feature_id" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="feature_name" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sub_feature_id" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="sub_feature_name" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_supported" type="yes_or_no" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_verified_by" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="comments" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_implementation_info" spec="" >
			<column name="implementation_info_id" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="implementation_info_name" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="integer_value" type="cardinal_number" />
			<column name="character_value" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="comments" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_parts" spec="" >
			<column name="feature_id" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="feature_name" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_supported" type="yes_or_no" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="is_verified_by" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="comments" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="sql_sizing" spec="" >
			<column name="sizing_id" type="cardinal_number" />
			<column name="sizing_name" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="supported_value" type="cardinal_number" />
			<column name="comments" type="character_data" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
		</table>
		<table name="state_pop_n_gdp_customers" prior="state_pop_n_gdp_sellers_0" >
			<column name="state" prior="initials" type="varchar" length="2" mandatory="y" />
			<column name="population_2015" type="integer" length="32" />
			<column name="gdp_2015_r" type="numeric" />
			<column name="gdp_per_capita_r" type="numeric" />
			<index name="state_pop_n_gdp_pkey_0" unique="PRIMARY_KEY" >
				<column name="state" />
			</index>
		</table>
		<table name="state_pop_n_gdp_sellers" >
			<column name="state" prior="initials" type="varchar" length="2" mandatory="y" />
			<column name="population_2015" type="integer" length="32" />
			<column name="gdp_2015_r" type="numeric" />
			<column name="gdp_per_capita_r" type="numeric" />
			<index name="state_pop_n_gdp_pkey" unique="PRIMARY_KEY" >
				<column name="state" />
			</index>
		</table>
		<view name="_pg_foreign_data_wrappers" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT w.oid,
    w.fdwowner,
    w.fdwoptions,
    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,
    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,
    (u.rolname)::information_schema.sql_identifier AS authorization_identifier,
    ('c'::character varying)::information_schema.character_data AS foreign_data_wrapper_language
   FROM pg_foreign_data_wrapper w,
    pg_authid u
  WHERE ((u.oid = w.fdwowner) AND (pg_has_role(w.fdwowner, 'USAGE'::text) OR has_foreign_data_wrapper_privilege(w.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="_pg_foreign_servers" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.oid,
    s.srvoptions,
    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,
    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,
    (current_database())::information_schema.sql_identifier AS foreign_data_wrapper_catalog,
    (w.fdwname)::information_schema.sql_identifier AS foreign_data_wrapper_name,
    (s.srvtype)::information_schema.character_data AS foreign_server_type,
    (s.srvversion)::information_schema.character_data AS foreign_server_version,
    (u.rolname)::information_schema.sql_identifier AS authorization_identifier
   FROM pg_foreign_server s,
    pg_foreign_data_wrapper w,
    pg_authid u
  WHERE ((w.oid = s.srvfdw) AND (u.oid = s.srvowner) AND (pg_has_role(s.srvowner, 'USAGE'::text) OR has_server_privilege(s.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="_pg_foreign_table_columns" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname,
    c.relname,
    a.attname,
    a.attfdwoptions
   FROM pg_foreign_table t,
    pg_authid u,
    pg_namespace n,
    pg_class c,
    pg_attribute a
  WHERE ((u.oid = c.relowner) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = 'f'::"char") AND (a.attrelid = c.oid) AND (a.attnum > 0))]]></view_script>
		</view>
		<view name="_pg_foreign_tables" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS foreign_table_catalog,
    (n.nspname)::information_schema.sql_identifier AS foreign_table_schema,
    (c.relname)::information_schema.sql_identifier AS foreign_table_name,
    t.ftoptions,
    (current_database())::information_schema.sql_identifier AS foreign_server_catalog,
    (s.srvname)::information_schema.sql_identifier AS foreign_server_name,
    (u.rolname)::information_schema.sql_identifier AS authorization_identifier
   FROM pg_foreign_table t,
    pg_foreign_server s,
    pg_foreign_data_wrapper w,
    pg_authid u,
    pg_namespace n,
    pg_class c
  WHERE ((w.oid = s.srvfdw) AND (u.oid = c.relowner) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)) AND (n.oid = c.relnamespace) AND (c.oid = t.ftrelid) AND (c.relkind = 'f'::"char") AND (s.oid = t.ftserver))]]></view_script>
		</view>
		<view name="_pg_user_mappings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT um.oid,
    um.umoptions,
    um.umuser,
    (COALESCE(u.rolname, 'PUBLIC'::name))::information_schema.sql_identifier AS authorization_identifier,
    s.foreign_server_catalog,
    s.foreign_server_name,
    s.authorization_identifier AS srvowner
   FROM (pg_user_mapping um
     LEFT JOIN pg_authid u ON ((u.oid = um.umuser))),
    information_schema._pg_foreign_servers s
  WHERE (s.oid = um.umserver)
 SELECT um.oid,
    um.umoptions,
    um.umuser,
    (COALESCE(u.rolname, 'PUBLIC'::name))::information_schema.sql_identifier AS authorization_identifier,
    s.foreign_server_catalog,
    s.foreign_server_name,
    s.authorization_identifier AS srvowner
   FROM (pg_user_mapping um
     LEFT JOIN pg_authid u ON ((u.oid = um.umuser))),
    information_schema._pg_foreign_servers s
  WHERE (s.oid = um.umserver)]]></view_script>
		</view>
		<view name="administrable_role_authorizations" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT grantee,
    role_name,
    is_grantable
   FROM information_schema.applicable_roles
  WHERE ((is_grantable)::text = 'YES'::text)
 SELECT grantee,
    role_name,
    is_grantable
   FROM information_schema.applicable_roles
  WHERE ((is_grantable)::text = 'YES'::text)]]></view_script>
		</view>
		<view name="applicable_roles" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (a.rolname)::information_schema.sql_identifier AS grantee,
    (b.rolname)::information_schema.sql_identifier AS role_name,
    (
        CASE
            WHEN m.admin_option THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ((( SELECT pg_auth_members.member,
            pg_auth_members.roleid,
            pg_auth_members.admin_option
           FROM pg_auth_members
        UNION
         SELECT pg_database.datdba,
            pg_authid.oid,
            false
           FROM pg_database,
            pg_authid
          WHERE ((pg_database.datname = current_database()) AND (pg_authid.rolname = 'pg_database_owner'::name))) m
     JOIN pg_authid a ON ((m.member = a.oid)))
     JOIN pg_authid b ON ((m.roleid = b.oid)))
  WHERE pg_has_role(a.oid, 'USAGE'::text)]]></view_script>
		</view>
		<view name="attributes" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nc.nspname)::information_schema.sql_identifier AS udt_schema,
    (c.relname)::information_schema.sql_identifier AS udt_name,
    (a.attname)::information_schema.sql_identifier AS attribute_name,
    (a.attnum)::information_schema.cardinal_number AS ordinal_position,
    (pg_get_expr(ad.adbin, ad.adrelid))::information_schema.character_data AS attribute_default,
    (
        CASE
            WHEN (a.attnotnull OR ((t.typtype = 'd'::"char") AND t.typnotnull)) THEN 'NO'::text
            ELSE 'YES'::text
        END)::information_schema.yes_or_no AS is_nullable,
    (
        CASE
            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text
            WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer)
            ELSE 'USER-DEFINED'::text
        END)::information_schema.character_data AS data_type,
    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,
    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (
        CASE
            WHEN (nco.nspname IS NOT NULL) THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS collation_catalog,
    (nco.nspname)::information_schema.sql_identifier AS collation_schema,
    (co.collname)::information_schema.sql_identifier AS collation_name,
    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,
    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,
    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,
    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,
    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (current_database())::information_schema.sql_identifier AS attribute_udt_catalog,
    (nt.nspname)::information_schema.sql_identifier AS attribute_udt_schema,
    (t.typname)::information_schema.sql_identifier AS attribute_udt_name,
    (NULL::name)::information_schema.sql_identifier AS scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS scope_schema,
    (NULL::name)::information_schema.sql_identifier AS scope_name,
    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,
    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,
    ('NO'::character varying)::information_schema.yes_or_no AS is_derived_reference_attribute
   FROM ((((pg_attribute a
     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))
     JOIN (pg_class c
     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))
     JOIN (pg_type t
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))
     LEFT JOIN (pg_collation co
     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))
  WHERE ((a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = 'c'::"char") AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_type_privilege(c.reltype, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="character_sets" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name,
    (
        CASE
            WHEN (getdatabaseencoding() = 'UTF8'::name) THEN 'UCS'::name
            ELSE getdatabaseencoding()
        END)::information_schema.sql_identifier AS character_repertoire,
    (getdatabaseencoding())::information_schema.sql_identifier AS form_of_use,
    (current_database())::information_schema.sql_identifier AS default_collate_catalog,
    (nc.nspname)::information_schema.sql_identifier AS default_collate_schema,
    (c.collname)::information_schema.sql_identifier AS default_collate_name
   FROM (pg_database d
     LEFT JOIN (pg_collation c
     JOIN pg_namespace nc ON ((c.collnamespace = nc.oid))) ON (((d.datcollate = c.collcollate) AND (d.datctype = c.collctype))))
  WHERE (d.datname = current_database())
  ORDER BY (char_length((c.collname)::text)) DESC, c.collname
 LIMIT 1]]></view_script>
		</view>
		<view name="check_constraint_routine_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,
    (c.conname)::information_schema.sql_identifier AS constraint_name,
    (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name
   FROM pg_namespace nc,
    pg_constraint c,
    pg_depend d,
    pg_proc p,
    pg_namespace np
  WHERE ((nc.oid = c.connamespace) AND (c.contype = 'c'::"char") AND (c.oid = d.objid) AND (d.classid = ('pg_constraint'::regclass)::oid) AND (d.refobjid = p.oid) AND (d.refclassid = ('pg_proc'::regclass)::oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="check_constraints" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,
    (con.conname)::information_schema.sql_identifier AS constraint_name,
    (pg_get_expr(con.conbin, COALESCE(c.oid, (0)::oid)))::information_schema.character_data AS check_clause
   FROM (((pg_constraint con
     LEFT JOIN pg_namespace rs ON ((rs.oid = con.connamespace)))
     LEFT JOIN pg_class c ON ((c.oid = con.conrelid)))
     LEFT JOIN pg_type t ON ((t.oid = con.contypid)))
  WHERE (pg_has_role(COALESCE(c.relowner, t.typowner), 'USAGE'::text) AND (con.contype = 'c'::"char"))
UNION
 SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,
    (con.conname)::information_schema.sql_identifier AS constraint_name,
    (format('%s IS NOT NULL'::text, COALESCE(at.attname, 'VALUE'::name)))::information_schema.character_data AS check_clause
   FROM ((((pg_constraint con
     LEFT JOIN pg_namespace rs ON ((rs.oid = con.connamespace)))
     LEFT JOIN pg_class c ON ((c.oid = con.conrelid)))
     LEFT JOIN pg_type t ON ((t.oid = con.contypid)))
     LEFT JOIN pg_attribute at ON (((con.conrelid = at.attrelid) AND (con.conkey[1] = at.attnum))))
  WHERE (pg_has_role(COALESCE(c.relowner, t.typowner), 'USAGE'::text) AND (con.contype = 'n'::"char"))
UNION
 SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (n.nspname)::information_schema.sql_identifier AS constraint_schema,
    (((((((n.oid)::text || '_'::text) || (r.oid)::text) || '_'::text) || (a.attnum)::text) || '_not_null'::text))::information_schema.sql_identifier AS constraint_name,
    (((a.attname)::text || ' IS NOT NULL'::text))::information_schema.character_data AS check_clause
   FROM pg_namespace n,
    pg_class r,
    pg_attribute a
  WHERE ((n.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (a.attnum > 0) AND (NOT a.attisdropped) AND a.attnotnull AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND pg_has_role(r.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="collation_character_set_applicability" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,
    (nc.nspname)::information_schema.sql_identifier AS collation_schema,
    (c.collname)::information_schema.sql_identifier AS collation_name,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (getdatabaseencoding())::information_schema.sql_identifier AS character_set_name
   FROM pg_collation c,
    pg_namespace nc
  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding
           FROM pg_database
          WHERE (pg_database.datname = current_database()))])))]]></view_script>
		</view>
		<view name="collations" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS collation_catalog,
    (nc.nspname)::information_schema.sql_identifier AS collation_schema,
    (c.collname)::information_schema.sql_identifier AS collation_name,
    ('NO PAD'::character varying)::information_schema.character_data AS pad_attribute
   FROM pg_collation c,
    pg_namespace nc
  WHERE ((c.collnamespace = nc.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding
           FROM pg_database
          WHERE (pg_database.datname = current_database()))])))]]></view_script>
		</view>
		<view name="column_column_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS table_catalog,
    (n.nspname)::information_schema.sql_identifier AS table_schema,
    (c.relname)::information_schema.sql_identifier AS table_name,
    (ac.attname)::information_schema.sql_identifier AS column_name,
    (ad.attname)::information_schema.sql_identifier AS dependent_column
   FROM pg_namespace n,
    pg_class c,
    pg_depend d,
    pg_attribute ac,
    pg_attribute ad,
    pg_attrdef atd
  WHERE ((n.oid = c.relnamespace) AND (c.oid = ac.attrelid) AND (c.oid = ad.attrelid) AND (ac.attnum <> ad.attnum) AND (ad.attrelid = atd.adrelid) AND (ad.attnum = atd.adnum) AND (d.classid = ('pg_attrdef'::regclass)::oid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (d.objid = atd.oid) AND (d.refobjid = ac.attrelid) AND (d.refobjsubid = ac.attnum) AND (ad.attgenerated <> ''::"char") AND pg_has_role(c.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="column_domain_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,
    (nt.nspname)::information_schema.sql_identifier AS domain_schema,
    (t.typname)::information_schema.sql_identifier AS domain_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nc.nspname)::information_schema.sql_identifier AS table_schema,
    (c.relname)::information_schema.sql_identifier AS table_name,
    (a.attname)::information_schema.sql_identifier AS column_name
   FROM pg_type t,
    pg_namespace nt,
    pg_class c,
    pg_namespace nc,
    pg_attribute a
  WHERE ((t.typnamespace = nt.oid) AND (c.relnamespace = nc.oid) AND (a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (t.typtype = 'd'::"char") AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (a.attnum > 0) AND (NOT a.attisdropped) AND pg_has_role(t.typowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="column_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT (current_database())::information_schema.sql_identifier AS table_catalog,
    (nspname)::information_schema.sql_identifier AS table_schema,
    (relname)::information_schema.sql_identifier AS table_name,
    (attname)::information_schema.sql_identifier AS column_name,
    ((pg_options_to_table(attfdwoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(attfdwoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_table_columns c
 SELECT (current_database())::information_schema.sql_identifier AS table_catalog,
    (nspname)::information_schema.sql_identifier AS table_schema,
    (relname)::information_schema.sql_identifier AS table_name,
    (attname)::information_schema.sql_identifier AS column_name,
    ((pg_options_to_table(attfdwoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(attfdwoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_table_columns c]]></view_script>
		</view>
		<view name="column_privileges" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nc.nspname)::information_schema.sql_identifier AS table_schema,
    (x.relname)::information_schema.sql_identifier AS table_name,
    (x.attname)::information_schema.sql_identifier AS column_name,
    (x.prtype)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(x.grantee, x.relowner, 'USAGE'::text) OR x.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ( SELECT pr_c.grantor,
            pr_c.grantee,
            a.attname,
            pr_c.relname,
            pr_c.relnamespace,
            pr_c.prtype,
            pr_c.grantable,
            pr_c.relowner
           FROM ( SELECT pg_class.oid,
                    pg_class.relname,
                    pg_class.relnamespace,
                    pg_class.relowner,
                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantor AS grantor,
                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantee AS grantee,
                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).privilege_type AS privilege_type,
                    (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).is_grantable AS is_grantable
                   FROM pg_class
                  WHERE (pg_class.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"]))) pr_c(oid, relname, relnamespace, relowner, grantor, grantee, prtype, grantable),
            pg_attribute a
          WHERE ((a.attrelid = pr_c.oid) AND (a.attnum > 0) AND (NOT a.attisdropped))
        UNION
         SELECT pr_a.grantor,
            pr_a.grantee,
            pr_a.attname,
            c.relname,
            c.relnamespace,
            pr_a.prtype,
            pr_a.grantable,
            c.relowner
           FROM ( SELECT a.attrelid,
                    a.attname,
                    (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).grantor AS grantor,
                    (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).grantee AS grantee,
                    (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).privilege_type AS privilege_type,
                    (aclexplode(COALESCE(a.attacl, acldefault('c'::"char", cc.relowner)))).is_grantable AS is_grantable
                   FROM (pg_attribute a
                     JOIN pg_class cc ON ((a.attrelid = cc.oid)))
                  WHERE ((a.attnum > 0) AND (NOT a.attisdropped))) pr_a(attrelid, attname, grantor, grantee, prtype, grantable),
            pg_class c
          WHERE ((pr_a.attrelid = c.oid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])))) x,
    pg_namespace nc,
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((x.relnamespace = nc.oid) AND (x.grantee = grantee.oid) AND (x.grantor = u_grantor.oid) AND (x.prtype = ANY (ARRAY['INSERT'::text, 'SELECT'::text, 'UPDATE'::text, 'REFERENCES'::text])) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="column_udt_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,
    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,
    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nc.nspname)::information_schema.sql_identifier AS table_schema,
    (c.relname)::information_schema.sql_identifier AS table_name,
    (a.attname)::information_schema.sql_identifier AS column_name
   FROM pg_attribute a,
    pg_class c,
    pg_namespace nc,
    ((pg_type t
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))
     LEFT JOIN (pg_type bt
     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = 'd'::"char") AND (t.typbasetype = bt.oid))))
  WHERE ((a.attrelid = c.oid) AND (a.atttypid = t.oid) AND (nc.oid = c.relnamespace) AND (a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND pg_has_role(COALESCE(bt.typowner, t.typowner), 'USAGE'::text))]]></view_script>
		</view>
		<view name="columns" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS table_catalog,
    (nc.nspname)::information_schema.sql_identifier AS table_schema,
    (c.relname)::information_schema.sql_identifier AS table_name,
    (a.attname)::information_schema.sql_identifier AS column_name,
    (a.attnum)::information_schema.cardinal_number AS ordinal_position,
    (
        CASE
            WHEN (a.attgenerated = ''::"char") THEN pg_get_expr(ad.adbin, ad.adrelid)
            ELSE NULL::text
        END)::information_schema.character_data AS column_default,
    (
        CASE
            WHEN (a.attnotnull OR ((t.typtype = 'd'::"char") AND t.typnotnull)) THEN 'NO'::text
            ELSE 'YES'::text
        END)::information_schema.yes_or_no AS is_nullable,
    (
        CASE
            WHEN (t.typtype = 'd'::"char") THEN
            CASE
                WHEN ((bt.typelem <> (0)::oid) AND (bt.typlen = '-1'::integer)) THEN 'ARRAY'::text
                WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer)
                ELSE 'USER-DEFINED'::text
            END
            ELSE
            CASE
                WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text
                WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(a.atttypid, NULL::integer)
                ELSE 'USER-DEFINED'::text
            END
        END)::information_schema.character_data AS data_type,
    (information_schema._pg_char_max_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_maximum_length,
    (information_schema._pg_char_octet_length(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS character_octet_length,
    (information_schema._pg_numeric_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision,
    (information_schema._pg_numeric_precision_radix(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_precision_radix,
    (information_schema._pg_numeric_scale(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS numeric_scale,
    (information_schema._pg_datetime_precision(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.cardinal_number AS datetime_precision,
    (information_schema._pg_interval_type(information_schema._pg_truetypid(a.*, t.*), information_schema._pg_truetypmod(a.*, t.*)))::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (
        CASE
            WHEN (nco.nspname IS NOT NULL) THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS collation_catalog,
    (nco.nspname)::information_schema.sql_identifier AS collation_schema,
    (co.collname)::information_schema.sql_identifier AS collation_name,
    (
        CASE
            WHEN (t.typtype = 'd'::"char") THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS domain_catalog,
    (
        CASE
            WHEN (t.typtype = 'd'::"char") THEN nt.nspname
            ELSE NULL::name
        END)::information_schema.sql_identifier AS domain_schema,
    (
        CASE
            WHEN (t.typtype = 'd'::"char") THEN t.typname
            ELSE NULL::name
        END)::information_schema.sql_identifier AS domain_name,
    (current_database())::information_schema.sql_identifier AS udt_catalog,
    (COALESCE(nbt.nspname, nt.nspname))::information_schema.sql_identifier AS udt_schema,
    (COALESCE(bt.typname, t.typname))::information_schema.sql_identifier AS udt_name,
    (NULL::name)::information_schema.sql_identifier AS scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS scope_schema,
    (NULL::name)::information_schema.sql_identifier AS scope_name,
    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,
    (a.attnum)::information_schema.sql_identifier AS dtd_identifier,
    ('NO'::character varying)::information_schema.yes_or_no AS is_self_referencing,
    (
        CASE
            WHEN (a.attidentity = ANY (ARRAY['a'::"char", 'd'::"char"])) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_identity,
    (
        CASE a.attidentity
            WHEN 'a'::"char" THEN 'ALWAYS'::text
            WHEN 'd'::"char" THEN 'BY DEFAULT'::text
            ELSE NULL::text
        END)::information_schema.character_data AS identity_generation,
    (seq.seqstart)::information_schema.character_data AS identity_start,
    (seq.seqincrement)::information_schema.character_data AS identity_increment,
    (seq.seqmax)::information_schema.character_data AS identity_maximum,
    (seq.seqmin)::information_schema.character_data AS identity_minimum,
    (
        CASE
            WHEN seq.seqcycle THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS identity_cycle,
    (
        CASE
            WHEN (a.attgenerated <> ''::"char") THEN 'ALWAYS'::text
            ELSE 'NEVER'::text
        END)::information_schema.character_data AS is_generated,
    (
        CASE
            WHEN (a.attgenerated <> ''::"char") THEN pg_get_expr(ad.adbin, ad.adrelid)
            ELSE NULL::text
        END)::information_schema.character_data AS generation_expression,
    (
        CASE
            WHEN ((c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) OR ((c.relkind = ANY (ARRAY['v'::"char", 'f'::"char"])) AND pg_column_is_updatable((c.oid)::regclass, a.attnum, false))) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_updatable
   FROM ((((((pg_attribute a
     LEFT JOIN pg_attrdef ad ON (((a.attrelid = ad.adrelid) AND (a.attnum = ad.adnum))))
     JOIN (pg_class c
     JOIN pg_namespace nc ON ((c.relnamespace = nc.oid))) ON ((a.attrelid = c.oid)))
     JOIN (pg_type t
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((a.atttypid = t.oid)))
     LEFT JOIN (pg_type bt
     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typtype = 'd'::"char") AND (t.typbasetype = bt.oid))))
     LEFT JOIN (pg_collation co
     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((a.attcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))
     LEFT JOIN (pg_depend dep
     JOIN pg_sequence seq ON (((dep.classid = ('pg_class'::regclass)::oid) AND (dep.objid = seq.seqrelid) AND (dep.deptype = 'i'::"char")))) ON (((dep.refclassid = ('pg_class'::regclass)::oid) AND (dep.refobjid = c.oid) AND (dep.refobjsubid = a.attnum))))
  WHERE ((NOT pg_is_other_temp_schema(nc.oid)) AND (a.attnum > 0) AND (NOT a.attisdropped) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="constraint_column_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS table_catalog,
    (tblschema)::information_schema.sql_identifier AS table_schema,
    (tblname)::information_schema.sql_identifier AS table_name,
    (colname)::information_schema.sql_identifier AS column_name,
    (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (cstrschema)::information_schema.sql_identifier AS constraint_schema,
    (cstrname)::information_schema.sql_identifier AS constraint_name
   FROM ( SELECT DISTINCT nr.nspname,
            r.relname,
            r.relowner,
            a.attname,
            nc.nspname,
            c.conname
           FROM pg_namespace nr,
            pg_class r,
            pg_attribute a,
            pg_depend d,
            pg_namespace nc,
            pg_constraint c
          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (d.refobjid = r.oid) AND (d.refobjsubid = a.attnum) AND (d.classid = ('pg_constraint'::regclass)::oid) AND (d.objid = c.oid) AND (c.connamespace = nc.oid) AND (c.contype = 'c'::"char") AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT a.attisdropped))
        UNION ALL
         SELECT nr.nspname,
            r.relname,
            r.relowner,
            a.attname,
            nc.nspname,
            c.conname
           FROM pg_namespace nr,
            pg_class r,
            pg_attribute a,
            pg_namespace nc,
            pg_constraint c
          WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND (nc.oid = c.connamespace) AND (r.oid =
                CASE c.contype
                    WHEN 'f'::"char" THEN c.confrelid
                    ELSE c.conrelid
                END) AND (a.attnum = ANY (
                CASE c.contype
                    WHEN 'f'::"char" THEN c.confkey
                    ELSE c.conkey
                END)) AND (NOT a.attisdropped) AND (c.contype = ANY (ARRAY['p'::"char", 'u'::"char", 'f'::"char"])) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])))) x(tblschema, tblname, tblowner, colname, cstrschema, cstrname)
  WHERE pg_has_role(tblowner, 'USAGE'::text)]]></view_script>
		</view>
		<view name="constraint_table_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS table_catalog,
    (nr.nspname)::information_schema.sql_identifier AS table_schema,
    (r.relname)::information_schema.sql_identifier AS table_name,
    (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,
    (c.conname)::information_schema.sql_identifier AS constraint_name
   FROM pg_constraint c,
    pg_namespace nc,
    pg_class r,
    pg_namespace nr
  WHERE ((c.connamespace = nc.oid) AND (r.relnamespace = nr.oid) AND (((c.contype = 'f'::"char") AND (c.confrelid = r.oid)) OR ((c.contype = ANY (ARRAY['p'::"char", 'u'::"char"])) AND (c.conrelid = r.oid))) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND pg_has_role(r.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="data_type_privileges" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT (current_database())::information_schema.sql_identifier AS object_catalog,
    objschema AS object_schema,
    objname AS object_name,
    (objtype)::information_schema.character_data AS object_type,
    objdtdid AS dtd_identifier
   FROM ( SELECT attributes.udt_schema,
            attributes.udt_name,
            'USER-DEFINED TYPE'::text AS text,
            attributes.dtd_identifier
           FROM information_schema.attributes
        UNION ALL
         SELECT columns.table_schema,
            columns.table_name,
            'TABLE'::text AS text,
            columns.dtd_identifier
           FROM information_schema.columns
        UNION ALL
         SELECT domains.domain_schema,
            domains.domain_name,
            'DOMAIN'::text AS text,
            domains.dtd_identifier
           FROM information_schema.domains
        UNION ALL
         SELECT parameters.specific_schema,
            parameters.specific_name,
            'ROUTINE'::text AS text,
            parameters.dtd_identifier
           FROM information_schema.parameters
        UNION ALL
         SELECT routines.specific_schema,
            routines.specific_name,
            'ROUTINE'::text AS text,
            routines.dtd_identifier
           FROM information_schema.routines) x(objschema, objname, objtype, objdtdid)
 SELECT (current_database())::information_schema.sql_identifier AS object_catalog,
    objschema AS object_schema,
    objname AS object_name,
    (objtype)::information_schema.character_data AS object_type,
    objdtdid AS dtd_identifier
   FROM ( SELECT attributes.udt_schema,
            attributes.udt_name,
            'USER-DEFINED TYPE'::text AS text,
            attributes.dtd_identifier
           FROM information_schema.attributes
        UNION ALL
         SELECT columns.table_schema,
            columns.table_name,
            'TABLE'::text AS text,
            columns.dtd_identifier
           FROM information_schema.columns
        UNION ALL
         SELECT domains.domain_schema,
            domains.domain_name,
            'DOMAIN'::text AS text,
            domains.dtd_identifier
           FROM information_schema.domains
        UNION ALL
         SELECT parameters.specific_schema,
            parameters.specific_name,
            'ROUTINE'::text AS text,
            parameters.dtd_identifier
           FROM information_schema.parameters
        UNION ALL
         SELECT routines.specific_schema,
            routines.specific_name,
            'ROUTINE'::text AS text,
            routines.dtd_identifier
           FROM information_schema.routines) x(objschema, objname, objtype, objdtdid)]]></view_script>
		</view>
		<view name="domain_constraints" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (rs.nspname)::information_schema.sql_identifier AS constraint_schema,
    (con.conname)::information_schema.sql_identifier AS constraint_name,
    (current_database())::information_schema.sql_identifier AS domain_catalog,
    (n.nspname)::information_schema.sql_identifier AS domain_schema,
    (t.typname)::information_schema.sql_identifier AS domain_name,
    (
        CASE
            WHEN con.condeferrable THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_deferrable,
    (
        CASE
            WHEN con.condeferred THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS initially_deferred
   FROM pg_namespace rs,
    pg_namespace n,
    pg_constraint con,
    pg_type t
  WHERE ((rs.oid = con.connamespace) AND (n.oid = t.typnamespace) AND (t.oid = con.contypid) AND (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="domain_udt_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,
    (bt.typname)::information_schema.sql_identifier AS udt_name,
    (current_database())::information_schema.sql_identifier AS domain_catalog,
    (nt.nspname)::information_schema.sql_identifier AS domain_schema,
    (t.typname)::information_schema.sql_identifier AS domain_name
   FROM pg_type t,
    pg_namespace nt,
    pg_type bt,
    pg_namespace nbt
  WHERE ((t.typnamespace = nt.oid) AND (t.typbasetype = bt.oid) AND (bt.typnamespace = nbt.oid) AND (t.typtype = 'd'::"char") AND pg_has_role(bt.typowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="domains" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS domain_catalog,
    (nt.nspname)::information_schema.sql_identifier AS domain_schema,
    (t.typname)::information_schema.sql_identifier AS domain_name,
    (
        CASE
            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text
            WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(t.typbasetype, NULL::integer)
            ELSE 'USER-DEFINED'::text
        END)::information_schema.character_data AS data_type,
    (information_schema._pg_char_max_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_maximum_length,
    (information_schema._pg_char_octet_length(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS character_octet_length,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (
        CASE
            WHEN (nco.nspname IS NOT NULL) THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS collation_catalog,
    (nco.nspname)::information_schema.sql_identifier AS collation_schema,
    (co.collname)::information_schema.sql_identifier AS collation_name,
    (information_schema._pg_numeric_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision,
    (information_schema._pg_numeric_precision_radix(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_precision_radix,
    (information_schema._pg_numeric_scale(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS numeric_scale,
    (information_schema._pg_datetime_precision(t.typbasetype, t.typtypmod))::information_schema.cardinal_number AS datetime_precision,
    (information_schema._pg_interval_type(t.typbasetype, t.typtypmod))::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (t.typdefault)::information_schema.character_data AS domain_default,
    (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,
    (bt.typname)::information_schema.sql_identifier AS udt_name,
    (NULL::name)::information_schema.sql_identifier AS scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS scope_schema,
    (NULL::name)::information_schema.sql_identifier AS scope_name,
    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,
    (1)::information_schema.sql_identifier AS dtd_identifier
   FROM (((pg_type t
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))
     JOIN (pg_type bt
     JOIN pg_namespace nbt ON ((bt.typnamespace = nbt.oid))) ON (((t.typbasetype = bt.oid) AND (t.typtype = 'd'::"char"))))
     LEFT JOIN (pg_collation co
     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((t.typcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))
  WHERE (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text))]]></view_script>
		</view>
		<view name="element_types" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT (current_database())::information_schema.sql_identifier AS object_catalog,
    (n.nspname)::information_schema.sql_identifier AS object_schema,
    x.objname AS object_name,
    (x.objtype)::information_schema.character_data AS object_type,
    (x.objdtdid)::information_schema.sql_identifier AS collection_type_identifier,
    (
        CASE
            WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(bt.oid, NULL::integer)
            ELSE 'USER-DEFINED'::text
        END)::information_schema.character_data AS data_type,
    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,
    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (
        CASE
            WHEN (nco.nspname IS NOT NULL) THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS collation_catalog,
    (nco.nspname)::information_schema.sql_identifier AS collation_schema,
    (co.collname)::information_schema.sql_identifier AS collation_name,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,
    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,
    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,
    (NULL::character varying)::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,
    (bt.typname)::information_schema.sql_identifier AS udt_name,
    (NULL::name)::information_schema.sql_identifier AS scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS scope_schema,
    (NULL::name)::information_schema.sql_identifier AS scope_name,
    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,
    (('a'::text || (x.objdtdid)::text))::information_schema.sql_identifier AS dtd_identifier
   FROM pg_namespace n,
    pg_type at,
    pg_namespace nbt,
    pg_type bt,
    (( SELECT c.relnamespace,
            (c.relname)::information_schema.sql_identifier AS relname,
                CASE
                    WHEN (c.relkind = 'c'::"char") THEN 'USER-DEFINED TYPE'::text
                    ELSE 'TABLE'::text
                END AS "case",
            a.attnum,
            a.atttypid,
            a.attcollation
           FROM pg_class c,
            pg_attribute a
          WHERE ((c.oid = a.attrelid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'c'::"char", 'p'::"char"])) AND (a.attnum > 0) AND (NOT a.attisdropped))
        UNION ALL
         SELECT t.typnamespace,
            (t.typname)::information_schema.sql_identifier AS typname,
            'DOMAIN'::text AS text,
            1,
            t.typbasetype,
            t.typcollation
           FROM pg_type t
          WHERE (t.typtype = 'd'::"char")
        UNION ALL
         SELECT ss.pronamespace,
            (nameconcatoid(ss.proname, ss.oid))::information_schema.sql_identifier AS nameconcatoid,
            'ROUTINE'::text AS text,
            (ss.x).n AS n,
            (ss.x).x AS x,
            0
           FROM ( SELECT p.pronamespace,
                    p.proname,
                    p.oid,
                    information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x
                   FROM pg_proc p) ss
        UNION ALL
         SELECT p.pronamespace,
            (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS nameconcatoid,
            'ROUTINE'::text AS text,
            0,
            p.prorettype,
            0
           FROM pg_proc p) x(objschema, objname, objtype, objdtdid, objtypeid, objcollation)
     LEFT JOIN (pg_collation co
     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((x.objcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))
  WHERE ((n.oid = x.objschema) AND (at.oid = x.objtypeid) AND ((at.typelem <> (0)::oid) AND (at.typlen = '-1'::integer)) AND (at.typelem = bt.oid) AND (nbt.oid = bt.typnamespace) AND ((n.nspname, (x.objname)::name, x.objtype, ((x.objdtdid)::information_schema.sql_identifier)::name) IN ( SELECT data_type_privileges.object_schema,
            data_type_privileges.object_name,
            data_type_privileges.object_type,
            data_type_privileges.dtd_identifier
           FROM information_schema.data_type_privileges)))
 SELECT (current_database())::information_schema.sql_identifier AS object_catalog,
    (n.nspname)::information_schema.sql_identifier AS object_schema,
    x.objname AS object_name,
    (x.objtype)::information_schema.character_data AS object_type,
    (x.objdtdid)::information_schema.sql_identifier AS collection_type_identifier,
    (
        CASE
            WHEN (nbt.nspname = 'pg_catalog'::name) THEN format_type(bt.oid, NULL::integer)
            ELSE 'USER-DEFINED'::text
        END)::information_schema.character_data AS data_type,
    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,
    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (
        CASE
            WHEN (nco.nspname IS NOT NULL) THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS collation_catalog,
    (nco.nspname)::information_schema.sql_identifier AS collation_schema,
    (co.collname)::information_schema.sql_identifier AS collation_name,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,
    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,
    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,
    (NULL::character varying)::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nbt.nspname)::information_schema.sql_identifier AS udt_schema,
    (bt.typname)::information_schema.sql_identifier AS udt_name,
    (NULL::name)::information_schema.sql_identifier AS scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS scope_schema,
    (NULL::name)::information_schema.sql_identifier AS scope_name,
    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,
    (('a'::text || (x.objdtdid)::text))::information_schema.sql_identifier AS dtd_identifier
   FROM pg_namespace n,
    pg_type at,
    pg_namespace nbt,
    pg_type bt,
    (( SELECT c.relnamespace,
            (c.relname)::information_schema.sql_identifier AS relname,
                CASE
                    WHEN (c.relkind = 'c'::"char") THEN 'USER-DEFINED TYPE'::text
                    ELSE 'TABLE'::text
                END AS "case",
            a.attnum,
            a.atttypid,
            a.attcollation
           FROM pg_class c,
            pg_attribute a
          WHERE ((c.oid = a.attrelid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'c'::"char", 'p'::"char"])) AND (a.attnum > 0) AND (NOT a.attisdropped))
        UNION ALL
         SELECT t.typnamespace,
            (t.typname)::information_schema.sql_identifier AS typname,
            'DOMAIN'::text AS text,
            1,
            t.typbasetype,
            t.typcollation
           FROM pg_type t
          WHERE (t.typtype = 'd'::"char")
        UNION ALL
         SELECT ss.pronamespace,
            (nameconcatoid(ss.proname, ss.oid))::information_schema.sql_identifier AS nameconcatoid,
            'ROUTINE'::text AS text,
            (ss.x).n AS n,
            (ss.x).x AS x,
            0
           FROM ( SELECT p.pronamespace,
                    p.proname,
                    p.oid,
                    information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x
                   FROM pg_proc p) ss
        UNION ALL
         SELECT p.pronamespace,
            (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS nameconcatoid,
            'ROUTINE'::text AS text,
            0,
            p.prorettype,
            0
           FROM pg_proc p) x(objschema, objname, objtype, objdtdid, objtypeid, objcollation)
     LEFT JOIN (pg_collation co
     JOIN pg_namespace nco ON ((co.collnamespace = nco.oid))) ON (((x.objcollation = co.oid) AND ((nco.nspname <> 'pg_catalog'::name) OR (co.collname <> 'default'::name)))))
  WHERE ((n.oid = x.objschema) AND (at.oid = x.objtypeid) AND ((at.typelem <> (0)::oid) AND (at.typlen = '-1'::integer)) AND (at.typelem = bt.oid) AND (nbt.oid = bt.typnamespace) AND ((n.nspname, (x.objname)::name, x.objtype, ((x.objdtdid)::information_schema.sql_identifier)::name) IN ( SELECT data_type_privileges.object_schema,
            data_type_privileges.object_name,
            data_type_privileges.object_type,
            data_type_privileges.dtd_identifier
           FROM information_schema.data_type_privileges)))]]></view_script>
		</view>
		<view name="enabled_roles" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (rolname)::information_schema.sql_identifier AS role_name
   FROM pg_authid a
  WHERE pg_has_role(oid, 'USAGE'::text)]]></view_script>
		</view>
		<view name="foreign_data_wrapper_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT foreign_data_wrapper_catalog,
    foreign_data_wrapper_name,
    ((pg_options_to_table(fdwoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(fdwoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_data_wrappers w
 SELECT foreign_data_wrapper_catalog,
    foreign_data_wrapper_name,
    ((pg_options_to_table(fdwoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(fdwoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_data_wrappers w]]></view_script>
		</view>
		<view name="foreign_data_wrappers" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT foreign_data_wrapper_catalog,
    foreign_data_wrapper_name,
    authorization_identifier,
    (NULL::character varying)::information_schema.character_data AS library_name,
    foreign_data_wrapper_language
   FROM information_schema._pg_foreign_data_wrappers w
 SELECT foreign_data_wrapper_catalog,
    foreign_data_wrapper_name,
    authorization_identifier,
    (NULL::character varying)::information_schema.character_data AS library_name,
    foreign_data_wrapper_language
   FROM information_schema._pg_foreign_data_wrappers w]]></view_script>
		</view>
		<view name="foreign_server_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT foreign_server_catalog,
    foreign_server_name,
    ((pg_options_to_table(srvoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(srvoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_servers s
 SELECT foreign_server_catalog,
    foreign_server_name,
    ((pg_options_to_table(srvoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(srvoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_servers s]]></view_script>
		</view>
		<view name="foreign_servers" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT foreign_server_catalog,
    foreign_server_name,
    foreign_data_wrapper_catalog,
    foreign_data_wrapper_name,
    foreign_server_type,
    foreign_server_version,
    authorization_identifier
   FROM information_schema._pg_foreign_servers
 SELECT foreign_server_catalog,
    foreign_server_name,
    foreign_data_wrapper_catalog,
    foreign_data_wrapper_name,
    foreign_server_type,
    foreign_server_version,
    authorization_identifier
   FROM information_schema._pg_foreign_servers]]></view_script>
		</view>
		<view name="foreign_table_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT foreign_table_catalog,
    foreign_table_schema,
    foreign_table_name,
    ((pg_options_to_table(ftoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(ftoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_tables t
 SELECT foreign_table_catalog,
    foreign_table_schema,
    foreign_table_name,
    ((pg_options_to_table(ftoptions)).option_name)::information_schema.sql_identifier AS option_name,
    ((pg_options_to_table(ftoptions)).option_value)::information_schema.character_data AS option_value
   FROM information_schema._pg_foreign_tables t]]></view_script>
		</view>
		<view name="foreign_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT foreign_table_catalog,
    foreign_table_schema,
    foreign_table_name,
    foreign_server_catalog,
    foreign_server_name
   FROM information_schema._pg_foreign_tables
 SELECT foreign_table_catalog,
    foreign_table_schema,
    foreign_table_name,
    foreign_server_catalog,
    foreign_server_name
   FROM information_schema._pg_foreign_tables]]></view_script>
		</view>
		<view name="information_schema_catalog_name" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS catalog_name]]></view_script>
		</view>
		<view name="key_column_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (ss.nc_nspname)::information_schema.sql_identifier AS constraint_schema,
    (ss.conname)::information_schema.sql_identifier AS constraint_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (ss.nr_nspname)::information_schema.sql_identifier AS table_schema,
    (ss.relname)::information_schema.sql_identifier AS table_name,
    (a.attname)::information_schema.sql_identifier AS column_name,
    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,
    (
        CASE
            WHEN (ss.contype = 'f'::"char") THEN information_schema._pg_index_position(ss.conindid, ss.confkey[(ss.x).n])
            ELSE NULL::integer
        END)::information_schema.cardinal_number AS position_in_unique_constraint
   FROM pg_attribute a,
    ( SELECT r.oid AS roid,
            r.relname,
            r.relowner,
            nc.nspname AS nc_nspname,
            nr.nspname AS nr_nspname,
            c.oid AS coid,
            c.conname,
            c.contype,
            c.conindid,
            c.confkey,
            c.confrelid,
            information_schema._pg_expandarray(c.conkey) AS x
           FROM pg_namespace nr,
            pg_class r,
            pg_namespace nc,
            pg_constraint c
          WHERE ((nr.oid = r.relnamespace) AND (r.oid = c.conrelid) AND (nc.oid = c.connamespace) AND (c.contype = ANY (ARRAY['p'::"char", 'u'::"char", 'f'::"char"])) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nr.oid)))) ss
  WHERE ((ss.roid = a.attrelid) AND (a.attnum = (ss.x).x) AND (NOT a.attisdropped) AND (pg_has_role(ss.relowner, 'USAGE'::text) OR has_column_privilege(ss.roid, a.attnum, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="parameters" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,
    (ss.n_nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(ss.proname, ss.p_oid))::information_schema.sql_identifier AS specific_name,
    ((ss.x).n)::information_schema.cardinal_number AS ordinal_position,
    (
        CASE
            WHEN (ss.proargmodes IS NULL) THEN 'IN'::text
            WHEN (ss.proargmodes[(ss.x).n] = 'i'::"char") THEN 'IN'::text
            WHEN (ss.proargmodes[(ss.x).n] = 'o'::"char") THEN 'OUT'::text
            WHEN (ss.proargmodes[(ss.x).n] = 'b'::"char") THEN 'INOUT'::text
            WHEN (ss.proargmodes[(ss.x).n] = 'v'::"char") THEN 'IN'::text
            WHEN (ss.proargmodes[(ss.x).n] = 't'::"char") THEN 'OUT'::text
            ELSE NULL::text
        END)::information_schema.character_data AS parameter_mode,
    ('NO'::character varying)::information_schema.yes_or_no AS is_result,
    ('NO'::character varying)::information_schema.yes_or_no AS as_locator,
    (NULLIF(ss.proargnames[(ss.x).n], ''::text))::information_schema.sql_identifier AS parameter_name,
    (
        CASE
            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text
            WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer)
            ELSE 'USER-DEFINED'::text
        END)::information_schema.character_data AS data_type,
    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,
    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (NULL::name)::information_schema.sql_identifier AS collation_catalog,
    (NULL::name)::information_schema.sql_identifier AS collation_schema,
    (NULL::name)::information_schema.sql_identifier AS collation_name,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,
    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,
    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,
    (NULL::character varying)::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nt.nspname)::information_schema.sql_identifier AS udt_schema,
    (t.typname)::information_schema.sql_identifier AS udt_name,
    (NULL::name)::information_schema.sql_identifier AS scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS scope_schema,
    (NULL::name)::information_schema.sql_identifier AS scope_name,
    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,
    ((ss.x).n)::information_schema.sql_identifier AS dtd_identifier,
    (
        CASE
            WHEN pg_has_role(ss.proowner, 'USAGE'::text) THEN pg_get_function_arg_default(ss.p_oid, (ss.x).n)
            ELSE NULL::text
        END)::information_schema.character_data AS parameter_default
   FROM pg_type t,
    pg_namespace nt,
    ( SELECT n.nspname AS n_nspname,
            p.proname,
            p.oid AS p_oid,
            p.proowner,
            p.proargnames,
            p.proargmodes,
            information_schema._pg_expandarray(COALESCE(p.proallargtypes, (p.proargtypes)::oid[])) AS x
           FROM pg_namespace n,
            pg_proc p
          WHERE ((n.oid = p.pronamespace) AND (pg_has_role(p.proowner, 'USAGE'::text) OR has_function_privilege(p.oid, 'EXECUTE'::text)))) ss
  WHERE ((t.oid = (ss.x).x) AND (t.typnamespace = nt.oid))]]></view_script>
		</view>
		<view name="referential_constraints" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (ncon.nspname)::information_schema.sql_identifier AS constraint_schema,
    (con.conname)::information_schema.sql_identifier AS constraint_name,
    (
        CASE
            WHEN (npkc.nspname IS NULL) THEN NULL::name
            ELSE current_database()
        END)::information_schema.sql_identifier AS unique_constraint_catalog,
    (npkc.nspname)::information_schema.sql_identifier AS unique_constraint_schema,
    (pkc.conname)::information_schema.sql_identifier AS unique_constraint_name,
    (
        CASE con.confmatchtype
            WHEN 'f'::"char" THEN 'FULL'::text
            WHEN 'p'::"char" THEN 'PARTIAL'::text
            WHEN 's'::"char" THEN 'NONE'::text
            ELSE NULL::text
        END)::information_schema.character_data AS match_option,
    (
        CASE con.confupdtype
            WHEN 'c'::"char" THEN 'CASCADE'::text
            WHEN 'n'::"char" THEN 'SET NULL'::text
            WHEN 'd'::"char" THEN 'SET DEFAULT'::text
            WHEN 'r'::"char" THEN 'RESTRICT'::text
            WHEN 'a'::"char" THEN 'NO ACTION'::text
            ELSE NULL::text
        END)::information_schema.character_data AS update_rule,
    (
        CASE con.confdeltype
            WHEN 'c'::"char" THEN 'CASCADE'::text
            WHEN 'n'::"char" THEN 'SET NULL'::text
            WHEN 'd'::"char" THEN 'SET DEFAULT'::text
            WHEN 'r'::"char" THEN 'RESTRICT'::text
            WHEN 'a'::"char" THEN 'NO ACTION'::text
            ELSE NULL::text
        END)::information_schema.character_data AS delete_rule
   FROM ((((((pg_namespace ncon
     JOIN pg_constraint con ON ((ncon.oid = con.connamespace)))
     JOIN pg_class c ON (((con.conrelid = c.oid) AND (con.contype = 'f'::"char"))))
     LEFT JOIN pg_depend d1 ON (((d1.objid = con.oid) AND (d1.classid = ('pg_constraint'::regclass)::oid) AND (d1.refclassid = ('pg_class'::regclass)::oid) AND (d1.refobjsubid = 0))))
     LEFT JOIN pg_depend d2 ON (((d2.refclassid = ('pg_constraint'::regclass)::oid) AND (d2.classid = ('pg_class'::regclass)::oid) AND (d2.objid = d1.refobjid) AND (d2.objsubid = 0) AND (d2.deptype = 'i'::"char"))))
     LEFT JOIN pg_constraint pkc ON (((pkc.oid = d2.refobjid) AND (pkc.contype = ANY (ARRAY['p'::"char", 'u'::"char"])) AND (pkc.conrelid = con.confrelid))))
     LEFT JOIN pg_namespace npkc ON ((pkc.connamespace = npkc.oid)))
  WHERE (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'INSERT, UPDATE, REFERENCES'::text))]]></view_script>
		</view>
		<view name="role_column_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT grantor,
    grantee,
    table_catalog,
    table_schema,
    table_name,
    column_name,
    privilege_type,
    is_grantable
   FROM information_schema.column_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))
 SELECT grantor,
    grantee,
    table_catalog,
    table_schema,
    table_name,
    column_name,
    privilege_type,
    is_grantable
   FROM information_schema.column_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_routine_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT grantor,
    grantee,
    specific_catalog,
    specific_schema,
    specific_name,
    routine_catalog,
    routine_schema,
    routine_name,
    privilege_type,
    is_grantable
   FROM information_schema.routine_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))
 SELECT grantor,
    grantee,
    specific_catalog,
    specific_schema,
    specific_name,
    routine_catalog,
    routine_schema,
    routine_name,
    privilege_type,
    is_grantable
   FROM information_schema.routine_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_table_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT grantor,
    grantee,
    table_catalog,
    table_schema,
    table_name,
    privilege_type,
    is_grantable,
    with_hierarchy
   FROM information_schema.table_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))
 SELECT grantor,
    grantee,
    table_catalog,
    table_schema,
    table_name,
    privilege_type,
    is_grantable,
    with_hierarchy
   FROM information_schema.table_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_udt_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT grantor,
    grantee,
    udt_catalog,
    udt_schema,
    udt_name,
    privilege_type,
    is_grantable
   FROM information_schema.udt_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))
 SELECT grantor,
    grantee,
    udt_catalog,
    udt_schema,
    udt_name,
    privilege_type,
    is_grantable
   FROM information_schema.udt_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="role_usage_grants" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT grantor,
    grantee,
    object_catalog,
    object_schema,
    object_name,
    object_type,
    privilege_type,
    is_grantable
   FROM information_schema.usage_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))
 SELECT grantor,
    grantee,
    object_catalog,
    object_schema,
    object_name,
    object_type,
    privilege_type,
    is_grantable
   FROM information_schema.usage_privileges
  WHERE (((grantor)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)) OR ((grantee)::name IN ( SELECT enabled_roles.role_name
           FROM information_schema.enabled_roles)))]]></view_script>
		</view>
		<view name="routine_column_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (current_database())::information_schema.sql_identifier AS routine_catalog,
    (np.nspname)::information_schema.sql_identifier AS routine_schema,
    (p.proname)::information_schema.sql_identifier AS routine_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nt.nspname)::information_schema.sql_identifier AS table_schema,
    (t.relname)::information_schema.sql_identifier AS table_name,
    (a.attname)::information_schema.sql_identifier AS column_name
   FROM pg_namespace np,
    pg_proc p,
    pg_depend d,
    pg_class t,
    pg_namespace nt,
    pg_attribute a
  WHERE ((np.oid = p.pronamespace) AND (p.oid = d.objid) AND (d.classid = ('pg_proc'::regclass)::oid) AND (d.refobjid = t.oid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (t.oid = a.attrelid) AND (d.refobjsubid = a.attnum) AND pg_has_role(t.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="routine_privileges" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS specific_catalog,
    (n.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (current_database())::information_schema.sql_identifier AS routine_catalog,
    (n.nspname)::information_schema.sql_identifier AS routine_schema,
    (p.proname)::information_schema.sql_identifier AS routine_name,
    ('EXECUTE'::character varying)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(grantee.oid, p.proowner, 'USAGE'::text) OR p.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ( SELECT pg_proc.oid,
            pg_proc.proname,
            pg_proc.proowner,
            pg_proc.pronamespace,
            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).grantor AS grantor,
            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).grantee AS grantee,
            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).privilege_type AS privilege_type,
            (aclexplode(COALESCE(pg_proc.proacl, acldefault('f'::"char", pg_proc.proowner)))).is_grantable AS is_grantable
           FROM pg_proc) p(oid, proname, proowner, pronamespace, grantor, grantee, prtype, grantable),
    pg_namespace n,
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((p.pronamespace = n.oid) AND (grantee.oid = p.grantee) AND (u_grantor.oid = p.grantor) AND (p.prtype = 'EXECUTE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="routine_routine_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (current_database())::information_schema.sql_identifier AS routine_catalog,
    (np1.nspname)::information_schema.sql_identifier AS routine_schema,
    (nameconcatoid(p1.proname, p1.oid))::information_schema.sql_identifier AS routine_name
   FROM pg_namespace np,
    pg_proc p,
    pg_depend d,
    pg_proc p1,
    pg_namespace np1
  WHERE ((np.oid = p.pronamespace) AND (p.oid = d.objid) AND (d.classid = ('pg_proc'::regclass)::oid) AND (d.refobjid = p1.oid) AND (d.refclassid = ('pg_proc'::regclass)::oid) AND (p1.pronamespace = np1.oid) AND (p.prokind = ANY (ARRAY['f'::"char", 'p'::"char"])) AND (p1.prokind = ANY (ARRAY['f'::"char", 'p'::"char"])) AND pg_has_role(p1.proowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="routine_sequence_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (current_database())::information_schema.sql_identifier AS routine_catalog,
    (np.nspname)::information_schema.sql_identifier AS routine_schema,
    (p.proname)::information_schema.sql_identifier AS routine_name,
    (current_database())::information_schema.sql_identifier AS sequence_catalog,
    (ns.nspname)::information_schema.sql_identifier AS sequence_schema,
    (s.relname)::information_schema.sql_identifier AS sequence_name
   FROM pg_namespace np,
    pg_proc p,
    pg_depend d,
    pg_class s,
    pg_namespace ns
  WHERE ((np.oid = p.pronamespace) AND (p.oid = d.objid) AND (d.classid = ('pg_proc'::regclass)::oid) AND (d.refobjid = s.oid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (s.relnamespace = ns.oid) AND (s.relkind = 'S'::"char") AND pg_has_role(s.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="routine_table_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (current_database())::information_schema.sql_identifier AS routine_catalog,
    (np.nspname)::information_schema.sql_identifier AS routine_schema,
    (p.proname)::information_schema.sql_identifier AS routine_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nt.nspname)::information_schema.sql_identifier AS table_schema,
    (t.relname)::information_schema.sql_identifier AS table_name
   FROM pg_namespace np,
    pg_proc p,
    pg_depend d,
    pg_class t,
    pg_namespace nt
  WHERE ((np.oid = p.pronamespace) AND (p.oid = d.objid) AND (d.classid = ('pg_proc'::regclass)::oid) AND (d.refobjid = t.oid) AND (d.refclassid = ('pg_class'::regclass)::oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND pg_has_role(t.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="routines" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS specific_catalog,
    (n.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (current_database())::information_schema.sql_identifier AS routine_catalog,
    (n.nspname)::information_schema.sql_identifier AS routine_schema,
    (p.proname)::information_schema.sql_identifier AS routine_name,
    (
        CASE p.prokind
            WHEN 'f'::"char" THEN 'FUNCTION'::text
            WHEN 'p'::"char" THEN 'PROCEDURE'::text
            ELSE NULL::text
        END)::information_schema.character_data AS routine_type,
    (NULL::name)::information_schema.sql_identifier AS module_catalog,
    (NULL::name)::information_schema.sql_identifier AS module_schema,
    (NULL::name)::information_schema.sql_identifier AS module_name,
    (NULL::name)::information_schema.sql_identifier AS udt_catalog,
    (NULL::name)::information_schema.sql_identifier AS udt_schema,
    (NULL::name)::information_schema.sql_identifier AS udt_name,
    (
        CASE
            WHEN (p.prokind = 'p'::"char") THEN NULL::text
            WHEN ((t.typelem <> (0)::oid) AND (t.typlen = '-1'::integer)) THEN 'ARRAY'::text
            WHEN (nt.nspname = 'pg_catalog'::name) THEN format_type(t.oid, NULL::integer)
            ELSE 'USER-DEFINED'::text
        END)::information_schema.character_data AS data_type,
    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,
    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (NULL::name)::information_schema.sql_identifier AS collation_catalog,
    (NULL::name)::information_schema.sql_identifier AS collation_schema,
    (NULL::name)::information_schema.sql_identifier AS collation_name,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,
    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,
    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,
    (NULL::character varying)::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (
        CASE
            WHEN (nt.nspname IS NOT NULL) THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS type_udt_catalog,
    (nt.nspname)::information_schema.sql_identifier AS type_udt_schema,
    (t.typname)::information_schema.sql_identifier AS type_udt_name,
    (NULL::name)::information_schema.sql_identifier AS scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS scope_schema,
    (NULL::name)::information_schema.sql_identifier AS scope_name,
    (NULL::integer)::information_schema.cardinal_number AS maximum_cardinality,
    (
        CASE
            WHEN (p.prokind <> 'p'::"char") THEN 0
            ELSE NULL::integer
        END)::information_schema.sql_identifier AS dtd_identifier,
    (
        CASE
            WHEN (l.lanname = 'sql'::name) THEN 'SQL'::text
            ELSE 'EXTERNAL'::text
        END)::information_schema.character_data AS routine_body,
    (
        CASE
            WHEN pg_has_role(p.proowner, 'USAGE'::text) THEN p.prosrc
            ELSE NULL::text
        END)::information_schema.character_data AS routine_definition,
    (
        CASE
            WHEN (l.lanname = 'c'::name) THEN p.prosrc
            ELSE NULL::text
        END)::information_schema.character_data AS external_name,
    (upper((l.lanname)::text))::information_schema.character_data AS external_language,
    ('GENERAL'::character varying)::information_schema.character_data AS parameter_style,
    (
        CASE
            WHEN (p.provolatile = 'i'::"char") THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_deterministic,
    ('MODIFIES'::character varying)::information_schema.character_data AS sql_data_access,
    (
        CASE
            WHEN (p.prokind <> 'p'::"char") THEN
            CASE
                WHEN p.proisstrict THEN 'YES'::text
                ELSE 'NO'::text
            END
            ELSE NULL::text
        END)::information_schema.yes_or_no AS is_null_call,
    (NULL::character varying)::information_schema.character_data AS sql_path,
    ('YES'::character varying)::information_schema.yes_or_no AS schema_level_routine,
    (0)::information_schema.cardinal_number AS max_dynamic_result_sets,
    (NULL::character varying)::information_schema.yes_or_no AS is_user_defined_cast,
    (NULL::character varying)::information_schema.yes_or_no AS is_implicitly_invocable,
    (
        CASE
            WHEN p.prosecdef THEN 'DEFINER'::text
            ELSE 'INVOKER'::text
        END)::information_schema.character_data AS security_type,
    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_catalog,
    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_schema,
    (NULL::name)::information_schema.sql_identifier AS to_sql_specific_name,
    ('NO'::character varying)::information_schema.yes_or_no AS as_locator,
    (NULL::timestamp with time zone)::information_schema.time_stamp AS created,
    (NULL::timestamp with time zone)::information_schema.time_stamp AS last_altered,
    (NULL::character varying)::information_schema.yes_or_no AS new_savepoint_level,
    ('NO'::character varying)::information_schema.yes_or_no AS is_udt_dependent,
    (NULL::character varying)::information_schema.character_data AS result_cast_from_data_type,
    (NULL::character varying)::information_schema.yes_or_no AS result_cast_as_locator,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_max_length,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_char_octet_length,
    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_schema,
    (NULL::name)::information_schema.sql_identifier AS result_cast_char_set_name,
    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_catalog,
    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_schema,
    (NULL::name)::information_schema.sql_identifier AS result_cast_collation_name,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_precision_radix,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_numeric_scale,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_datetime_precision,
    (NULL::character varying)::information_schema.character_data AS result_cast_interval_type,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_interval_precision,
    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_catalog,
    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_schema,
    (NULL::name)::information_schema.sql_identifier AS result_cast_type_udt_name,
    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_catalog,
    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_schema,
    (NULL::name)::information_schema.sql_identifier AS result_cast_scope_name,
    (NULL::integer)::information_schema.cardinal_number AS result_cast_maximum_cardinality,
    (NULL::name)::information_schema.sql_identifier AS result_cast_dtd_identifier
   FROM (((pg_namespace n
     JOIN pg_proc p ON ((n.oid = p.pronamespace)))
     JOIN pg_language l ON ((p.prolang = l.oid)))
     LEFT JOIN (pg_type t
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON (((p.prorettype = t.oid) AND (p.prokind <> 'p'::"char"))))
  WHERE (pg_has_role(p.proowner, 'USAGE'::text) OR has_function_privilege(p.oid, 'EXECUTE'::text))]]></view_script>
		</view>
		<view name="schemata" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS catalog_name,
    (n.nspname)::information_schema.sql_identifier AS schema_name,
    (u.rolname)::information_schema.sql_identifier AS schema_owner,
    (NULL::name)::information_schema.sql_identifier AS default_character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS default_character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS default_character_set_name,
    (NULL::character varying)::information_schema.character_data AS sql_path
   FROM pg_namespace n,
    pg_authid u
  WHERE ((n.nspowner = u.oid) AND (pg_has_role(n.nspowner, 'USAGE'::text) OR has_schema_privilege(n.oid, 'CREATE, USAGE'::text)))]]></view_script>
		</view>
		<view name="sequences" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS sequence_catalog,
    (nc.nspname)::information_schema.sql_identifier AS sequence_schema,
    (c.relname)::information_schema.sql_identifier AS sequence_name,
    (format_type(s.seqtypid, NULL::integer))::information_schema.character_data AS data_type,
    (information_schema._pg_numeric_precision(s.seqtypid, '-1'::integer))::information_schema.cardinal_number AS numeric_precision,
    (2)::information_schema.cardinal_number AS numeric_precision_radix,
    (0)::information_schema.cardinal_number AS numeric_scale,
    (s.seqstart)::information_schema.character_data AS start_value,
    (s.seqmin)::information_schema.character_data AS minimum_value,
    (s.seqmax)::information_schema.character_data AS maximum_value,
    (s.seqincrement)::information_schema.character_data AS increment,
    (
        CASE
            WHEN s.seqcycle THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS cycle_option
   FROM pg_namespace nc,
    pg_class c,
    pg_sequence s
  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = 'S'::"char") AND (NOT (EXISTS ( SELECT 1
           FROM pg_depend
          WHERE ((pg_depend.classid = ('pg_class'::regclass)::oid) AND (pg_depend.objid = c.oid) AND (pg_depend.deptype = 'i'::"char"))))) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (c.oid = s.seqrelid) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_sequence_privilege(c.oid, 'SELECT, UPDATE, USAGE'::text)))]]></view_script>
		</view>
		<view name="table_constraints" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (nc.nspname)::information_schema.sql_identifier AS constraint_schema,
    (c.conname)::information_schema.sql_identifier AS constraint_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nr.nspname)::information_schema.sql_identifier AS table_schema,
    (r.relname)::information_schema.sql_identifier AS table_name,
    (
        CASE c.contype
            WHEN 'c'::"char" THEN 'CHECK'::text
            WHEN 'f'::"char" THEN 'FOREIGN KEY'::text
            WHEN 'p'::"char" THEN 'PRIMARY KEY'::text
            WHEN 'u'::"char" THEN 'UNIQUE'::text
            ELSE NULL::text
        END)::information_schema.character_data AS constraint_type,
    (
        CASE
            WHEN c.condeferrable THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_deferrable,
    (
        CASE
            WHEN c.condeferred THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS initially_deferred,
    ('YES'::character varying)::information_schema.yes_or_no AS enforced,
    (
        CASE
            WHEN (c.contype = 'u'::"char") THEN
            CASE
                WHEN ( SELECT (NOT pg_index.indnullsnotdistinct)
                   FROM pg_index
                  WHERE (pg_index.indexrelid = c.conindid)) THEN 'YES'::text
                ELSE 'NO'::text
            END
            ELSE NULL::text
        END)::information_schema.yes_or_no AS nulls_distinct
   FROM pg_namespace nc,
    pg_namespace nr,
    pg_constraint c,
    pg_class r
  WHERE ((nc.oid = c.connamespace) AND (nr.oid = r.relnamespace) AND (c.conrelid = r.oid) AND (c.contype <> ALL (ARRAY['t'::"char", 'x'::"char"])) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, 'USAGE'::text) OR has_table_privilege(r.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(r.oid, 'INSERT, UPDATE, REFERENCES'::text)))
UNION ALL
 SELECT (current_database())::information_schema.sql_identifier AS constraint_catalog,
    (nr.nspname)::information_schema.sql_identifier AS constraint_schema,
    (((((((nr.oid)::text || '_'::text) || (r.oid)::text) || '_'::text) || (a.attnum)::text) || '_not_null'::text))::information_schema.sql_identifier AS constraint_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nr.nspname)::information_schema.sql_identifier AS table_schema,
    (r.relname)::information_schema.sql_identifier AS table_name,
    ('CHECK'::character varying)::information_schema.character_data AS constraint_type,
    ('NO'::character varying)::information_schema.yes_or_no AS is_deferrable,
    ('NO'::character varying)::information_schema.yes_or_no AS initially_deferred,
    ('YES'::character varying)::information_schema.yes_or_no AS enforced,
    (NULL::character varying)::information_schema.yes_or_no AS nulls_distinct
   FROM pg_namespace nr,
    pg_class r,
    pg_attribute a
  WHERE ((nr.oid = r.relnamespace) AND (r.oid = a.attrelid) AND a.attnotnull AND (a.attnum > 0) AND (NOT a.attisdropped) AND (r.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nr.oid)) AND (pg_has_role(r.relowner, 'USAGE'::text) OR has_table_privilege(r.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(r.oid, 'INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="table_privileges" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nc.nspname)::information_schema.sql_identifier AS table_schema,
    (c.relname)::information_schema.sql_identifier AS table_name,
    (c.prtype)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(grantee.oid, c.relowner, 'USAGE'::text) OR c.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable,
    (
        CASE
            WHEN (c.prtype = 'SELECT'::text) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS with_hierarchy
   FROM ( SELECT pg_class.oid,
            pg_class.relname,
            pg_class.relnamespace,
            pg_class.relkind,
            pg_class.relowner,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantor AS grantor,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantee AS grantee,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).privilege_type AS privilege_type,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).is_grantable AS is_grantable
           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),
    pg_namespace nc,
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = ANY (ARRAY['INSERT'::text, 'SELECT'::text, 'UPDATE'::text, 'DELETE'::text, 'TRUNCATE'::text, 'REFERENCES'::text, 'TRIGGER'::text])) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="tables" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS table_catalog,
    (nc.nspname)::information_schema.sql_identifier AS table_schema,
    (c.relname)::information_schema.sql_identifier AS table_name,
    (
        CASE
            WHEN (nc.oid = pg_my_temp_schema()) THEN 'LOCAL TEMPORARY'::text
            WHEN (c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) THEN 'BASE TABLE'::text
            WHEN (c.relkind = 'v'::"char") THEN 'VIEW'::text
            WHEN (c.relkind = 'f'::"char") THEN 'FOREIGN'::text
            ELSE NULL::text
        END)::information_schema.character_data AS table_type,
    (NULL::name)::information_schema.sql_identifier AS self_referencing_column_name,
    (NULL::character varying)::information_schema.character_data AS reference_generation,
    (
        CASE
            WHEN (t.typname IS NOT NULL) THEN current_database()
            ELSE NULL::name
        END)::information_schema.sql_identifier AS user_defined_type_catalog,
    (nt.nspname)::information_schema.sql_identifier AS user_defined_type_schema,
    (t.typname)::information_schema.sql_identifier AS user_defined_type_name,
    (
        CASE
            WHEN ((c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) OR ((c.relkind = ANY (ARRAY['v'::"char", 'f'::"char"])) AND ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8))) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_insertable_into,
    (
        CASE
            WHEN (t.typname IS NOT NULL) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_typed,
    (NULL::character varying)::information_schema.character_data AS commit_action
   FROM ((pg_namespace nc
     JOIN pg_class c ON ((nc.oid = c.relnamespace)))
     LEFT JOIN (pg_type t
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid))) ON ((c.reloftype = t.oid)))
  WHERE ((c.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="transforms" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nt.nspname)::information_schema.sql_identifier AS udt_schema,
    (t.typname)::information_schema.sql_identifier AS udt_name,
    (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (l.lanname)::information_schema.sql_identifier AS group_name,
    ('FROM SQL'::character varying)::information_schema.character_data AS transform_type
   FROM (((((pg_type t
     JOIN pg_transform x ON ((t.oid = x.trftype)))
     JOIN pg_language l ON ((x.trflang = l.oid)))
     JOIN pg_proc p ON (((x.trffromsql)::oid = p.oid)))
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))
     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))
UNION
 SELECT (current_database())::information_schema.sql_identifier AS udt_catalog,
    (nt.nspname)::information_schema.sql_identifier AS udt_schema,
    (t.typname)::information_schema.sql_identifier AS udt_name,
    (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name,
    (l.lanname)::information_schema.sql_identifier AS group_name,
    ('TO SQL'::character varying)::information_schema.character_data AS transform_type
   FROM (((((pg_type t
     JOIN pg_transform x ON ((t.oid = x.trftype)))
     JOIN pg_language l ON ((x.trflang = l.oid)))
     JOIN pg_proc p ON (((x.trftosql)::oid = p.oid)))
     JOIN pg_namespace nt ON ((t.typnamespace = nt.oid)))
     JOIN pg_namespace np ON ((p.pronamespace = np.oid)))
  ORDER BY 1, 2, 3, 7, 8]]></view_script>
		</view>
		<view name="triggered_update_columns" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,
    (n.nspname)::information_schema.sql_identifier AS trigger_schema,
    (t.tgname)::information_schema.sql_identifier AS trigger_name,
    (current_database())::information_schema.sql_identifier AS event_object_catalog,
    (n.nspname)::information_schema.sql_identifier AS event_object_schema,
    (c.relname)::information_schema.sql_identifier AS event_object_table,
    (a.attname)::information_schema.sql_identifier AS event_object_column
   FROM pg_namespace n,
    pg_class c,
    pg_trigger t,
    ( SELECT ta0.tgoid,
            (ta0.tgat).x AS tgattnum,
            (ta0.tgat).n AS tgattpos
           FROM ( SELECT pg_trigger.oid AS tgoid,
                    information_schema._pg_expandarray(pg_trigger.tgattr) AS tgat
                   FROM pg_trigger) ta0) ta,
    pg_attribute a
  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (t.oid = ta.tgoid) AND ((a.attrelid = t.tgrelid) AND (a.attnum = ta.tgattnum)) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_column_privilege(c.oid, a.attnum, 'INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="triggers" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS trigger_catalog,
    (n.nspname)::information_schema.sql_identifier AS trigger_schema,
    (t.tgname)::information_schema.sql_identifier AS trigger_name,
    (em.text)::information_schema.character_data AS event_manipulation,
    (current_database())::information_schema.sql_identifier AS event_object_catalog,
    (n.nspname)::information_schema.sql_identifier AS event_object_schema,
    (c.relname)::information_schema.sql_identifier AS event_object_table,
    (rank() OVER (PARTITION BY (n.nspname)::information_schema.sql_identifier, (c.relname)::information_schema.sql_identifier, em.num, ((t.tgtype)::integer & 1), ((t.tgtype)::integer & 66) ORDER BY t.tgname))::information_schema.cardinal_number AS action_order,
    (
        CASE
            WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN (regexp_match(pg_get_triggerdef(t.oid), '.{35,} WHEN \((.+)\) EXECUTE FUNCTION'::text))[1]
            ELSE NULL::text
        END)::information_schema.character_data AS action_condition,
    (SUBSTRING(pg_get_triggerdef(t.oid) FROM (POSITION(('EXECUTE FUNCTION'::text) IN (SUBSTRING(pg_get_triggerdef(t.oid) FROM 48))) + 47)))::information_schema.character_data AS action_statement,
    (
        CASE ((t.tgtype)::integer & 1)
            WHEN 1 THEN 'ROW'::text
            ELSE 'STATEMENT'::text
        END)::information_schema.character_data AS action_orientation,
    (
        CASE ((t.tgtype)::integer & 66)
            WHEN 2 THEN 'BEFORE'::text
            WHEN 64 THEN 'INSTEAD OF'::text
            ELSE 'AFTER'::text
        END)::information_schema.character_data AS action_timing,
    (t.tgoldtable)::information_schema.sql_identifier AS action_reference_old_table,
    (t.tgnewtable)::information_schema.sql_identifier AS action_reference_new_table,
    (NULL::name)::information_schema.sql_identifier AS action_reference_old_row,
    (NULL::name)::information_schema.sql_identifier AS action_reference_new_row,
    (NULL::timestamp with time zone)::information_schema.time_stamp AS created
   FROM pg_namespace n,
    pg_class c,
    pg_trigger t,
    ( VALUES (4,'INSERT'::text), (8,'DELETE'::text), (16,'UPDATE'::text)) em(num, text)
  WHERE ((n.oid = c.relnamespace) AND (c.oid = t.tgrelid) AND (((t.tgtype)::integer & em.num) <> 0) AND (NOT t.tgisinternal) AND (NOT pg_is_other_temp_schema(n.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<view name="udt_privileges" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS udt_catalog,
    (n.nspname)::information_schema.sql_identifier AS udt_schema,
    (t.typname)::information_schema.sql_identifier AS udt_name,
    ('TYPE USAGE'::character varying)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(grantee.oid, t.typowner, 'USAGE'::text) OR t.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ( SELECT pg_type.oid,
            pg_type.typname,
            pg_type.typnamespace,
            pg_type.typtype,
            pg_type.typowner,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantor AS grantor,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantee AS grantee,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).privilege_type AS privilege_type,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).is_grantable AS is_grantable
           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),
    pg_namespace n,
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((t.typnamespace = n.oid) AND (t.typtype = 'c'::"char") AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="usage_privileges" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (u.rolname)::information_schema.sql_identifier AS grantor,
    ('PUBLIC'::name)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS object_catalog,
    (n.nspname)::information_schema.sql_identifier AS object_schema,
    (c.collname)::information_schema.sql_identifier AS object_name,
    ('COLLATION'::character varying)::information_schema.character_data AS object_type,
    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,
    ('NO'::character varying)::information_schema.yes_or_no AS is_grantable
   FROM pg_authid u,
    pg_namespace n,
    pg_collation c
  WHERE ((u.oid = c.collowner) AND (c.collnamespace = n.oid) AND (c.collencoding = ANY (ARRAY['-1'::integer, ( SELECT pg_database.encoding
           FROM pg_database
          WHERE (pg_database.datname = current_database()))])))
UNION ALL
 SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS object_catalog,
    (n.nspname)::information_schema.sql_identifier AS object_schema,
    (t.typname)::information_schema.sql_identifier AS object_name,
    ('DOMAIN'::character varying)::information_schema.character_data AS object_type,
    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(grantee.oid, t.typowner, 'USAGE'::text) OR t.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ( SELECT pg_type.oid,
            pg_type.typname,
            pg_type.typnamespace,
            pg_type.typtype,
            pg_type.typowner,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantor AS grantor,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).grantee AS grantee,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).privilege_type AS privilege_type,
            (aclexplode(COALESCE(pg_type.typacl, acldefault('T'::"char", pg_type.typowner)))).is_grantable AS is_grantable
           FROM pg_type) t(oid, typname, typnamespace, typtype, typowner, grantor, grantee, prtype, grantable),
    pg_namespace n,
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((t.typnamespace = n.oid) AND (t.typtype = 'd'::"char") AND (t.grantee = grantee.oid) AND (t.grantor = u_grantor.oid) AND (t.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))
UNION ALL
 SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS object_catalog,
    (''::name)::information_schema.sql_identifier AS object_schema,
    (fdw.fdwname)::information_schema.sql_identifier AS object_name,
    ('FOREIGN DATA WRAPPER'::character varying)::information_schema.character_data AS object_type,
    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(grantee.oid, fdw.fdwowner, 'USAGE'::text) OR fdw.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ( SELECT pg_foreign_data_wrapper.fdwname,
            pg_foreign_data_wrapper.fdwowner,
            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).grantor AS grantor,
            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).grantee AS grantee,
            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).privilege_type AS privilege_type,
            (aclexplode(COALESCE(pg_foreign_data_wrapper.fdwacl, acldefault('F'::"char", pg_foreign_data_wrapper.fdwowner)))).is_grantable AS is_grantable
           FROM pg_foreign_data_wrapper) fdw(fdwname, fdwowner, grantor, grantee, prtype, grantable),
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((u_grantor.oid = fdw.grantor) AND (grantee.oid = fdw.grantee) AND (fdw.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))
UNION ALL
 SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS object_catalog,
    (''::name)::information_schema.sql_identifier AS object_schema,
    (srv.srvname)::information_schema.sql_identifier AS object_name,
    ('FOREIGN SERVER'::character varying)::information_schema.character_data AS object_type,
    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(grantee.oid, srv.srvowner, 'USAGE'::text) OR srv.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ( SELECT pg_foreign_server.srvname,
            pg_foreign_server.srvowner,
            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).grantor AS grantor,
            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).grantee AS grantee,
            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).privilege_type AS privilege_type,
            (aclexplode(COALESCE(pg_foreign_server.srvacl, acldefault('S'::"char", pg_foreign_server.srvowner)))).is_grantable AS is_grantable
           FROM pg_foreign_server) srv(srvname, srvowner, grantor, grantee, prtype, grantable),
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((u_grantor.oid = srv.grantor) AND (grantee.oid = srv.grantee) AND (srv.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))
UNION ALL
 SELECT (u_grantor.rolname)::information_schema.sql_identifier AS grantor,
    (grantee.rolname)::information_schema.sql_identifier AS grantee,
    (current_database())::information_schema.sql_identifier AS object_catalog,
    (n.nspname)::information_schema.sql_identifier AS object_schema,
    (c.relname)::information_schema.sql_identifier AS object_name,
    ('SEQUENCE'::character varying)::information_schema.character_data AS object_type,
    ('USAGE'::character varying)::information_schema.character_data AS privilege_type,
    (
        CASE
            WHEN (pg_has_role(grantee.oid, c.relowner, 'USAGE'::text) OR c.grantable) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_grantable
   FROM ( SELECT pg_class.oid,
            pg_class.relname,
            pg_class.relnamespace,
            pg_class.relkind,
            pg_class.relowner,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantor AS grantor,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).grantee AS grantee,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).privilege_type AS privilege_type,
            (aclexplode(COALESCE(pg_class.relacl, acldefault('r'::"char", pg_class.relowner)))).is_grantable AS is_grantable
           FROM pg_class) c(oid, relname, relnamespace, relkind, relowner, grantor, grantee, prtype, grantable),
    pg_namespace n,
    pg_authid u_grantor,
    ( SELECT pg_authid.oid,
            pg_authid.rolname
           FROM pg_authid
        UNION ALL
         SELECT (0)::oid AS oid,
            'PUBLIC'::name) grantee(oid, rolname)
  WHERE ((c.relnamespace = n.oid) AND (c.relkind = 'S'::"char") AND (c.grantee = grantee.oid) AND (c.grantor = u_grantor.oid) AND (c.prtype = 'USAGE'::text) AND (pg_has_role(u_grantor.oid, 'USAGE'::text) OR pg_has_role(grantee.oid, 'USAGE'::text) OR (grantee.rolname = 'PUBLIC'::name)))]]></view_script>
		</view>
		<view name="user_defined_types" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS user_defined_type_catalog,
    (n.nspname)::information_schema.sql_identifier AS user_defined_type_schema,
    (c.relname)::information_schema.sql_identifier AS user_defined_type_name,
    ('STRUCTURED'::character varying)::information_schema.character_data AS user_defined_type_category,
    ('YES'::character varying)::information_schema.yes_or_no AS is_instantiable,
    (NULL::character varying)::information_schema.yes_or_no AS is_final,
    (NULL::character varying)::information_schema.character_data AS ordering_form,
    (NULL::character varying)::information_schema.character_data AS ordering_category,
    (NULL::name)::information_schema.sql_identifier AS ordering_routine_catalog,
    (NULL::name)::information_schema.sql_identifier AS ordering_routine_schema,
    (NULL::name)::information_schema.sql_identifier AS ordering_routine_name,
    (NULL::character varying)::information_schema.character_data AS reference_type,
    (NULL::character varying)::information_schema.character_data AS data_type,
    (NULL::integer)::information_schema.cardinal_number AS character_maximum_length,
    (NULL::integer)::information_schema.cardinal_number AS character_octet_length,
    (NULL::name)::information_schema.sql_identifier AS character_set_catalog,
    (NULL::name)::information_schema.sql_identifier AS character_set_schema,
    (NULL::name)::information_schema.sql_identifier AS character_set_name,
    (NULL::name)::information_schema.sql_identifier AS collation_catalog,
    (NULL::name)::information_schema.sql_identifier AS collation_schema,
    (NULL::name)::information_schema.sql_identifier AS collation_name,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision,
    (NULL::integer)::information_schema.cardinal_number AS numeric_precision_radix,
    (NULL::integer)::information_schema.cardinal_number AS numeric_scale,
    (NULL::integer)::information_schema.cardinal_number AS datetime_precision,
    (NULL::character varying)::information_schema.character_data AS interval_type,
    (NULL::integer)::information_schema.cardinal_number AS interval_precision,
    (NULL::name)::information_schema.sql_identifier AS source_dtd_identifier,
    (NULL::name)::information_schema.sql_identifier AS ref_dtd_identifier
   FROM pg_namespace n,
    pg_class c,
    pg_type t
  WHERE ((n.oid = c.relnamespace) AND (t.typrelid = c.oid) AND (c.relkind = 'c'::"char") AND (pg_has_role(t.typowner, 'USAGE'::text) OR has_type_privilege(t.oid, 'USAGE'::text)))]]></view_script>
		</view>
		<view name="user_mapping_options" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT um.authorization_identifier,
    um.foreign_server_catalog,
    um.foreign_server_name,
    (opts.option_name)::information_schema.sql_identifier AS option_name,
    (
        CASE
            WHEN (((um.umuser <> (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper
               FROM pg_authid
              WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value
            ELSE NULL::text
        END)::information_schema.character_data AS option_value
   FROM information_schema._pg_user_mappings um,
    LATERAL pg_options_to_table(um.umoptions) opts(option_name, option_value)
 SELECT um.authorization_identifier,
    um.foreign_server_catalog,
    um.foreign_server_name,
    (opts.option_name)::information_schema.sql_identifier AS option_name,
    (
        CASE
            WHEN (((um.umuser <> (0)::oid) AND ((um.authorization_identifier)::name = CURRENT_USER)) OR ((um.umuser = (0)::oid) AND pg_has_role((um.srvowner)::name, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper
               FROM pg_authid
              WHERE (pg_authid.rolname = CURRENT_USER))) THEN opts.option_value
            ELSE NULL::text
        END)::information_schema.character_data AS option_value
   FROM information_schema._pg_user_mappings um,
    LATERAL pg_options_to_table(um.umoptions) opts(option_name, option_value)]]></view_script>
		</view>
		<view name="user_mappings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT authorization_identifier,
    foreign_server_catalog,
    foreign_server_name
   FROM information_schema._pg_user_mappings
 SELECT authorization_identifier,
    foreign_server_catalog,
    foreign_server_name
   FROM information_schema._pg_user_mappings]]></view_script>
		</view>
		<view name="view_column_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,
    (nv.nspname)::information_schema.sql_identifier AS view_schema,
    (v.relname)::information_schema.sql_identifier AS view_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nt.nspname)::information_schema.sql_identifier AS table_schema,
    (t.relname)::information_schema.sql_identifier AS table_name,
    (a.attname)::information_schema.sql_identifier AS column_name
   FROM pg_namespace nv,
    pg_class v,
    pg_depend dv,
    pg_depend dt,
    pg_class t,
    pg_namespace nt,
    pg_attribute a
  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::"char") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::"char") AND (dv.objid = dt.objid) AND (dv.refobjid <> dt.refobjid) AND (dt.classid = ('pg_rewrite'::regclass)::oid) AND (dt.refclassid = ('pg_class'::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND (t.oid = a.attrelid) AND (dt.refobjsubid = a.attnum) AND pg_has_role(t.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="view_routine_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS table_catalog,
    (nv.nspname)::information_schema.sql_identifier AS table_schema,
    (v.relname)::information_schema.sql_identifier AS table_name,
    (current_database())::information_schema.sql_identifier AS specific_catalog,
    (np.nspname)::information_schema.sql_identifier AS specific_schema,
    (nameconcatoid(p.proname, p.oid))::information_schema.sql_identifier AS specific_name
   FROM pg_namespace nv,
    pg_class v,
    pg_depend dv,
    pg_depend dp,
    pg_proc p,
    pg_namespace np
  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::"char") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::"char") AND (dv.objid = dp.objid) AND (dp.classid = ('pg_rewrite'::regclass)::oid) AND (dp.refclassid = ('pg_proc'::regclass)::oid) AND (dp.refobjid = p.oid) AND (p.pronamespace = np.oid) AND pg_has_role(p.proowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="view_table_usage" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT DISTINCT (current_database())::information_schema.sql_identifier AS view_catalog,
    (nv.nspname)::information_schema.sql_identifier AS view_schema,
    (v.relname)::information_schema.sql_identifier AS view_name,
    (current_database())::information_schema.sql_identifier AS table_catalog,
    (nt.nspname)::information_schema.sql_identifier AS table_schema,
    (t.relname)::information_schema.sql_identifier AS table_name
   FROM pg_namespace nv,
    pg_class v,
    pg_depend dv,
    pg_depend dt,
    pg_class t,
    pg_namespace nt
  WHERE ((nv.oid = v.relnamespace) AND (v.relkind = 'v'::"char") AND (v.oid = dv.refobjid) AND (dv.refclassid = ('pg_class'::regclass)::oid) AND (dv.classid = ('pg_rewrite'::regclass)::oid) AND (dv.deptype = 'i'::"char") AND (dv.objid = dt.objid) AND (dv.refobjid <> dt.refobjid) AND (dt.classid = ('pg_rewrite'::regclass)::oid) AND (dt.refclassid = ('pg_class'::regclass)::oid) AND (dt.refobjid = t.oid) AND (t.relnamespace = nt.oid) AND (t.relkind = ANY (ARRAY['r'::"char", 'v'::"char", 'f'::"char", 'p'::"char"])) AND pg_has_role(t.relowner, 'USAGE'::text))]]></view_script>
		</view>
		<view name="views" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT (current_database())::information_schema.sql_identifier AS table_catalog,
    (nc.nspname)::information_schema.sql_identifier AS table_schema,
    (c.relname)::information_schema.sql_identifier AS table_name,
    (
        CASE
            WHEN pg_has_role(c.relowner, 'USAGE'::text) THEN pg_get_viewdef(c.oid)
            ELSE NULL::text
        END)::information_schema.character_data AS view_definition,
    (
        CASE
            WHEN ('check_option=cascaded'::text = ANY (c.reloptions)) THEN 'CASCADED'::text
            WHEN ('check_option=local'::text = ANY (c.reloptions)) THEN 'LOCAL'::text
            ELSE 'NONE'::text
        END)::information_schema.character_data AS check_option,
    (
        CASE
            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 20) = 20) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_updatable,
    (
        CASE
            WHEN ((pg_relation_is_updatable((c.oid)::regclass, false) & 8) = 8) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_insertable_into,
    (
        CASE
            WHEN (EXISTS ( SELECT 1
               FROM pg_trigger
              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 81) = 81)))) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_trigger_updatable,
    (
        CASE
            WHEN (EXISTS ( SELECT 1
               FROM pg_trigger
              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 73) = 73)))) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_trigger_deletable,
    (
        CASE
            WHEN (EXISTS ( SELECT 1
               FROM pg_trigger
              WHERE ((pg_trigger.tgrelid = c.oid) AND (((pg_trigger.tgtype)::integer & 69) = 69)))) THEN 'YES'::text
            ELSE 'NO'::text
        END)::information_schema.yes_or_no AS is_trigger_insertable_into
   FROM pg_namespace nc,
    pg_class c
  WHERE ((c.relnamespace = nc.oid) AND (c.relkind = 'v'::"char") AND (NOT pg_is_other_temp_schema(nc.oid)) AND (pg_has_role(c.relowner, 'USAGE'::text) OR has_table_privilege(c.oid, 'SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, TRIGGER'::text) OR has_any_column_privilege(c.oid, 'SELECT, INSERT, UPDATE, REFERENCES'::text)))]]></view_script>
		</view>
		<function name="_pg_char_max_length" id="b505917a-993d-47de-a384-68d44b518541" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_char_max_length(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (typmod = '-1'::integer) THEN NULL::integer WHEN (typid = ANY (ARRAY[(1042)::oid, (1043)::oid])) THEN (typmod - 4) WHEN (typid = ANY (ARRAY[(1560)::oid, (1562)::oid])) THEN typmod ELSE NULL::integer END
;]]></string>
		</function>
		<function name="_pg_char_octet_length" id="4928bfb3-b7c0-47ad-8ce4-c594cd74967d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_char_octet_length(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (typid = ANY (ARRAY[(25)::oid, (1042)::oid, (1043)::oid])) THEN CASE WHEN (typmod = '-1'::integer) THEN (((2)::double precision ^ (30)::double precision))::integer ELSE (information_schema._pg_char_max_length(typid, typmod) * pg_encoding_max_length((SELECT pg_database.encoding FROM pg_database WHERE (pg_database.datname = current_database())))) END ELSE NULL::integer END
;]]></string>
		</function>
		<function name="_pg_datetime_precision" id="79138665-65d6-44e9-a95f-4fd9f1a9b211" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_datetime_precision(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (typid = (1082)::oid) THEN 0 WHEN (typid = ANY (ARRAY[(1083)::oid, (1114)::oid, (1184)::oid, (1266)::oid])) THEN CASE WHEN (typmod < 0) THEN 6 ELSE typmod END WHEN (typid = (1186)::oid) THEN CASE WHEN ((typmod < 0) OR ((typmod & 65535) = 65535)) THEN 6 ELSE (typmod & 65535) END ELSE NULL::integer END
;]]></string>
		</function>
		<function name="_pg_expandarray" id="c73d527e-c023-4b8f-9d8b-26fe77568f77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_expandarray(anyarray, OUT x anyelement, OUT n integer)
 RETURNS SETOF record
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100 SUPPORT array_unnest_support
AS $function$SELECT * FROM pg_catalog.unnest($1) WITH ORDINALITY$function$
;]]></string>
		</function>
		<function name="_pg_index_position" id="e017ad1e-71c0-4e91-b796-bc995ecff4d1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_index_position(oid, smallint)
 RETURNS integer
 LANGUAGE sql
 STABLE STRICT
BEGIN ATOMIC
 SELECT (ss.a).n AS n
    FROM ( SELECT information_schema._pg_expandarray(pg_index.indkey) AS a
            FROM pg_index
           WHERE (pg_index.indexrelid = $1)) ss
   WHERE ((ss.a).x = $2);
END
;]]></string>
		</function>
		<function name="_pg_interval_type" id="813df246-8b5a-4b87-951b-7428e3e24612" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_interval_type(typid oid, mod integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (typid = (1186)::oid) THEN upper(SUBSTRING(format_type(typid, mod) SIMILAR 'interval[()0-9]* #"%#"'::text ESCAPE '#'::text)) ELSE NULL::text END
;]]></string>
		</function>
		<function name="_pg_numeric_precision" id="bb40e99d-20a3-4d33-a265-62c076e39644" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_numeric_precision(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE typid WHEN 21 THEN 16 WHEN 23 THEN 32 WHEN 20 THEN 64 WHEN 1700 THEN CASE WHEN (typmod = '-1'::integer) THEN NULL::integer ELSE (((typmod - 4) >> 16) & 65535) END WHEN 700 THEN 24 WHEN 701 THEN 53 ELSE NULL::integer END
;]]></string>
		</function>
		<function name="_pg_numeric_precision_radix" id="917e17d2-8715-4d09-8143-75c1957ad24f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_numeric_precision_radix(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (typid = ANY (ARRAY[(21)::oid, (23)::oid, (20)::oid, (700)::oid, (701)::oid])) THEN 2 WHEN (typid = (1700)::oid) THEN 10 ELSE NULL::integer END
;]]></string>
		</function>
		<function name="_pg_numeric_scale" id="f928bed3-acb1-47f4-a574-acdc4828fe5c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_numeric_scale(typid oid, typmod integer)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (typid = ANY (ARRAY[(21)::oid, (23)::oid, (20)::oid])) THEN 0 WHEN (typid = (1700)::oid) THEN CASE WHEN (typmod = '-1'::integer) THEN NULL::integer ELSE ((typmod - 4) & 65535) END ELSE NULL::integer END
;]]></string>
		</function>
		<function name="_pg_truetypid" id="065f0906-ba65-415f-90ce-490fd578ceae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_truetypid(pg_attribute, pg_type)
 RETURNS oid
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (($2).typtype = 'd'::"char") THEN ($2).typbasetype ELSE ($1).atttypid END
;]]></string>
		</function>
		<function name="_pg_truetypmod" id="f15b180e-767b-422e-82df-7d10cd052d15" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION information_schema._pg_truetypmod(pg_attribute, pg_type)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT
RETURN CASE WHEN (($2).typtype = 'd'::"char") THEN ($2).typtypmod ELSE ($1).atttypmod END
;]]></string>
		</function>
	</schema>
	<schema name="pg_catalog" catalogname="postgrespractice" >
		<comment><![CDATA[system catalog schema]]></comment>
		<table name="pg_aggregate" spec="" >
			<column name="aggfnoid" type="varchar" mandatory="y" />
			<column name="aggkind" type="char" mandatory="y" />
			<column name="aggnumdirectargs" type="smallint" length="16" mandatory="y" />
			<column name="aggtransfn" type="varchar" mandatory="y" />
			<column name="aggfinalfn" type="varchar" mandatory="y" />
			<column name="aggcombinefn" type="varchar" mandatory="y" />
			<column name="aggserialfn" type="varchar" mandatory="y" />
			<column name="aggdeserialfn" type="varchar" mandatory="y" />
			<column name="aggmtransfn" type="varchar" mandatory="y" />
			<column name="aggminvtransfn" type="varchar" mandatory="y" />
			<column name="aggmfinalfn" type="varchar" mandatory="y" />
			<column name="aggfinalextra" type="boolean" mandatory="y" />
			<column name="aggmfinalextra" type="boolean" mandatory="y" />
			<column name="aggfinalmodify" type="char" mandatory="y" />
			<column name="aggmfinalmodify" type="char" mandatory="y" />
			<column name="aggsortop" type="oid" mandatory="y" />
			<column name="aggtranstype" type="oid" mandatory="y" />
			<column name="aggtransspace" type="integer" length="32" mandatory="y" />
			<column name="aggmtranstype" type="oid" mandatory="y" />
			<column name="aggmtransspace" type="integer" length="32" mandatory="y" />
			<column name="agginitval" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="aggminitval" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_aggregate_fnoid_index" unique="PRIMARY_KEY" >
				<column name="aggfnoid" />
			</index>
		</table>
		<table name="pg_am" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="amname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="amhandler" type="varchar" mandatory="y" />
			<column name="amtype" type="char" mandatory="y" />
			<index name="pg_am_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_am_name_index" unique="UNIQUE_KEY" >
				<column name="amname" />
			</index>
		</table>
		<table name="pg_amop" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="amopfamily" type="oid" mandatory="y" />
			<column name="amoplefttype" type="oid" mandatory="y" />
			<column name="amoprighttype" type="oid" mandatory="y" />
			<column name="amopstrategy" type="smallint" length="16" mandatory="y" />
			<column name="amoppurpose" type="char" mandatory="y" />
			<column name="amopopr" type="oid" mandatory="y" />
			<column name="amopmethod" type="oid" mandatory="y" />
			<column name="amopsortfamily" type="oid" mandatory="y" />
			<index name="pg_amop_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_amop_fam_strat_index" unique="UNIQUE_KEY" >
				<column name="amopfamily" />
				<column name="amoplefttype" />
				<column name="amoprighttype" />
				<column name="amopstrategy" />
			</index>
			<index name="pg_amop_opr_fam_index" unique="UNIQUE_KEY" >
				<column name="amopopr" />
				<column name="amoppurpose" />
				<column name="amopfamily" />
			</index>
		</table>
		<table name="pg_amproc" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="amprocfamily" type="oid" mandatory="y" />
			<column name="amproclefttype" type="oid" mandatory="y" />
			<column name="amprocrighttype" type="oid" mandatory="y" />
			<column name="amprocnum" type="smallint" length="16" mandatory="y" />
			<column name="amproc" type="varchar" mandatory="y" />
			<index name="pg_amproc_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_amproc_fam_proc_index" unique="UNIQUE_KEY" >
				<column name="amprocfamily" />
				<column name="amproclefttype" />
				<column name="amprocrighttype" />
				<column name="amprocnum" />
			</index>
		</table>
		<table name="pg_attrdef" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="adrelid" type="oid" mandatory="y" />
			<column name="adnum" type="smallint" length="16" mandatory="y" />
			<column name="adbin" type="varchar" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_attrdef_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_attrdef_adrelid_adnum_index" unique="UNIQUE_KEY" >
				<column name="adrelid" />
				<column name="adnum" />
			</index>
		</table>
		<table name="pg_attribute" spec="" >
			<column name="attrelid" type="oid" mandatory="y" />
			<column name="attname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="atttypid" type="oid" mandatory="y" />
			<column name="attlen" type="smallint" length="16" mandatory="y" />
			<column name="attnum" type="smallint" length="16" mandatory="y" />
			<column name="attcacheoff" type="integer" length="32" mandatory="y" />
			<column name="atttypmod" type="integer" length="32" mandatory="y" />
			<column name="attndims" type="smallint" length="16" mandatory="y" />
			<column name="attbyval" type="boolean" mandatory="y" />
			<column name="attalign" type="char" mandatory="y" />
			<column name="attstorage" type="char" mandatory="y" />
			<column name="attcompression" type="char" mandatory="y" />
			<column name="attnotnull" type="boolean" mandatory="y" />
			<column name="atthasdef" type="boolean" mandatory="y" />
			<column name="atthasmissing" type="boolean" mandatory="y" />
			<column name="attidentity" type="char" mandatory="y" />
			<column name="attgenerated" type="char" mandatory="y" />
			<column name="attisdropped" type="boolean" mandatory="y" />
			<column name="attislocal" type="boolean" mandatory="y" />
			<column name="attinhcount" type="smallint" length="16" mandatory="y" />
			<column name="attcollation" type="oid" mandatory="y" />
			<column name="attstattarget" type="smallint" length="16" />
			<column name="attacl" type="varchar" />
			<column name="attoptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="attfdwoptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="attmissingval" type="anyarray" />
			<index name="pg_attribute_relid_attnum_index" unique="PRIMARY_KEY" >
				<column name="attrelid" />
				<column name="attnum" />
			</index>
			<index name="pg_attribute_relid_attnam_index" unique="UNIQUE_KEY" >
				<column name="attrelid" />
				<column name="attname" />
			</index>
		</table>
		<table name="pg_auth_members" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="roleid" type="oid" mandatory="y" />
			<column name="member" type="oid" mandatory="y" />
			<column name="grantor" type="oid" mandatory="y" />
			<column name="admin_option" type="boolean" mandatory="y" />
			<column name="inherit_option" type="boolean" mandatory="y" />
			<column name="set_option" type="boolean" mandatory="y" />
			<index name="pg_auth_members_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_auth_members_role_member_index" unique="UNIQUE_KEY" >
				<column name="roleid" />
				<column name="member" />
				<column name="grantor" />
			</index>
			<index name="pg_auth_members_member_role_index" unique="UNIQUE_KEY" >
				<column name="member" />
				<column name="roleid" />
				<column name="grantor" />
			</index>
			<index name="pg_auth_members_grantor_index" unique="NORMAL" spec="USING  btree" >
				<column name="grantor" />
			</index>
		</table>
		<table name="pg_authid" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="rolname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="rolsuper" type="boolean" mandatory="y" />
			<column name="rolinherit" type="boolean" mandatory="y" />
			<column name="rolcreaterole" type="boolean" mandatory="y" />
			<column name="rolcreatedb" type="boolean" mandatory="y" />
			<column name="rolcanlogin" type="boolean" mandatory="y" />
			<column name="rolreplication" type="boolean" mandatory="y" />
			<column name="rolbypassrls" type="boolean" mandatory="y" />
			<column name="rolconnlimit" type="integer" length="32" mandatory="y" />
			<column name="rolpassword" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="rolvaliduntil" type="timestamptz" />
			<index name="pg_authid_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_authid_rolname_index" unique="UNIQUE_KEY" >
				<column name="rolname" />
			</index>
		</table>
		<table name="pg_cast" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="castsource" type="oid" mandatory="y" />
			<column name="casttarget" type="oid" mandatory="y" />
			<column name="castfunc" type="oid" mandatory="y" />
			<column name="castcontext" type="char" mandatory="y" />
			<column name="castmethod" type="char" mandatory="y" />
			<index name="pg_cast_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_cast_source_target_index" unique="UNIQUE_KEY" >
				<column name="castsource" />
				<column name="casttarget" />
			</index>
		</table>
		<table name="pg_class" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="relname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="relnamespace" type="oid" mandatory="y" />
			<column name="reltype" type="oid" mandatory="y" />
			<column name="reloftype" type="oid" mandatory="y" />
			<column name="relowner" type="oid" mandatory="y" />
			<column name="relam" type="oid" mandatory="y" />
			<column name="relfilenode" type="oid" mandatory="y" />
			<column name="reltablespace" type="oid" mandatory="y" />
			<column name="relpages" type="integer" length="32" mandatory="y" />
			<column name="reltuples" type="real" mandatory="y" />
			<column name="relallvisible" type="integer" length="32" mandatory="y" />
			<column name="reltoastrelid" type="oid" mandatory="y" />
			<column name="relhasindex" type="boolean" mandatory="y" />
			<column name="relisshared" type="boolean" mandatory="y" />
			<column name="relpersistence" type="char" mandatory="y" />
			<column name="relkind" type="char" mandatory="y" />
			<column name="relnatts" type="smallint" length="16" mandatory="y" />
			<column name="relchecks" type="smallint" length="16" mandatory="y" />
			<column name="relhasrules" type="boolean" mandatory="y" />
			<column name="relhastriggers" type="boolean" mandatory="y" />
			<column name="relhassubclass" type="boolean" mandatory="y" />
			<column name="relrowsecurity" type="boolean" mandatory="y" />
			<column name="relforcerowsecurity" type="boolean" mandatory="y" />
			<column name="relispopulated" type="boolean" mandatory="y" />
			<column name="relreplident" type="char" mandatory="y" />
			<column name="relispartition" type="boolean" mandatory="y" />
			<column name="relrewrite" type="oid" mandatory="y" />
			<column name="relfrozenxid" type="xid" mandatory="y" />
			<column name="relminmxid" type="xid" mandatory="y" />
			<column name="relacl" type="varchar" />
			<column name="reloptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="relpartbound" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_class_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_class_relname_nsp_index" unique="UNIQUE_KEY" >
				<column name="relname" />
				<column name="relnamespace" />
			</index>
			<index name="pg_class_tblspc_relfilenode_index" unique="NORMAL" spec="USING  btree" >
				<column name="reltablespace" />
				<column name="relfilenode" />
			</index>
		</table>
		<table name="pg_collation" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="collname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="collnamespace" type="oid" mandatory="y" />
			<column name="collowner" type="oid" mandatory="y" />
			<column name="collprovider" type="char" mandatory="y" />
			<column name="collisdeterministic" type="boolean" mandatory="y" />
			<column name="collencoding" type="integer" length="32" mandatory="y" />
			<column name="collcollate" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="collctype" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="colllocale" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="collicurules" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="collversion" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_collation_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_collation_name_enc_nsp_index" unique="UNIQUE_KEY" >
				<column name="collname" />
				<column name="collencoding" />
				<column name="collnamespace" />
			</index>
		</table>
		<table name="pg_constraint" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="conname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="connamespace" type="oid" mandatory="y" />
			<column name="contype" type="char" mandatory="y" />
			<column name="condeferrable" type="boolean" mandatory="y" />
			<column name="condeferred" type="boolean" mandatory="y" />
			<column name="convalidated" type="boolean" mandatory="y" />
			<column name="conrelid" type="oid" mandatory="y" />
			<column name="contypid" type="oid" mandatory="y" />
			<column name="conindid" type="oid" mandatory="y" />
			<column name="conparentid" type="oid" mandatory="y" />
			<column name="confrelid" type="oid" mandatory="y" />
			<column name="confupdtype" type="char" mandatory="y" />
			<column name="confdeltype" type="char" mandatory="y" />
			<column name="confmatchtype" type="char" mandatory="y" />
			<column name="conislocal" type="boolean" mandatory="y" />
			<column name="coninhcount" type="smallint" length="16" mandatory="y" />
			<column name="connoinherit" type="boolean" mandatory="y" />
			<column name="conkey" type="smallint[]" />
			<column name="confkey" type="smallint[]" />
			<column name="conpfeqop" type="varchar" />
			<column name="conppeqop" type="varchar" />
			<column name="conffeqop" type="varchar" />
			<column name="confdelsetcols" type="smallint[]" />
			<column name="conexclop" type="varchar" />
			<column name="conbin" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_constraint_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_constraint_conrelid_contypid_conname_index" unique="UNIQUE_KEY" >
				<column name="conrelid" />
				<column name="contypid" />
				<column name="conname" />
			</index>
			<index name="pg_constraint_conname_nsp_index" unique="NORMAL" spec="USING  btree" >
				<column name="conname" />
				<column name="connamespace" />
			</index>
			<index name="pg_constraint_contypid_index" unique="NORMAL" spec="USING  btree" >
				<column name="contypid" />
			</index>
			<index name="pg_constraint_conparentid_index" unique="NORMAL" spec="USING  btree" >
				<column name="conparentid" />
			</index>
		</table>
		<table name="pg_conversion" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="conname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="connamespace" type="oid" mandatory="y" />
			<column name="conowner" type="oid" mandatory="y" />
			<column name="conforencoding" type="integer" length="32" mandatory="y" />
			<column name="contoencoding" type="integer" length="32" mandatory="y" />
			<column name="conproc" type="varchar" mandatory="y" />
			<column name="condefault" type="boolean" mandatory="y" />
			<index name="pg_conversion_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_conversion_default_index" unique="UNIQUE_KEY" >
				<column name="connamespace" />
				<column name="conforencoding" />
				<column name="contoencoding" />
				<column name="oid" />
			</index>
			<index name="pg_conversion_name_nsp_index" unique="UNIQUE_KEY" >
				<column name="conname" />
				<column name="connamespace" />
			</index>
		</table>
		<table name="pg_database" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="datname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datdba" type="oid" mandatory="y" />
			<column name="encoding" type="integer" length="32" mandatory="y" />
			<column name="datlocprovider" type="char" mandatory="y" />
			<column name="datistemplate" type="boolean" mandatory="y" />
			<column name="datallowconn" type="boolean" mandatory="y" />
			<column name="dathasloginevt" type="boolean" mandatory="y" />
			<column name="datconnlimit" type="integer" length="32" mandatory="y" />
			<column name="datfrozenxid" type="xid" mandatory="y" />
			<column name="datminmxid" type="xid" mandatory="y" />
			<column name="dattablespace" type="oid" mandatory="y" />
			<column name="datcollate" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datctype" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datlocale" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="daticurules" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datcollversion" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="datacl" type="varchar" />
			<index name="pg_database_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_database_datname_index" unique="UNIQUE_KEY" >
				<column name="datname" />
			</index>
		</table>
		<table name="pg_db_role_setting" spec="" >
			<column name="setdatabase" type="oid" mandatory="y" />
			<column name="setrole" type="oid" mandatory="y" />
			<column name="setconfig" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_db_role_setting_databaseid_rol_index" unique="PRIMARY_KEY" >
				<column name="setdatabase" />
				<column name="setrole" />
			</index>
		</table>
		<table name="pg_default_acl" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="defaclrole" type="oid" mandatory="y" />
			<column name="defaclnamespace" type="oid" mandatory="y" />
			<column name="defaclobjtype" type="char" mandatory="y" />
			<column name="defaclacl" type="varchar" mandatory="y" />
			<index name="pg_default_acl_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_default_acl_role_nsp_obj_index" unique="UNIQUE_KEY" >
				<column name="defaclrole" />
				<column name="defaclnamespace" />
				<column name="defaclobjtype" />
			</index>
		</table>
		<table name="pg_depend" spec="" >
			<column name="classid" type="oid" mandatory="y" />
			<column name="objid" type="oid" mandatory="y" />
			<column name="objsubid" type="integer" length="32" mandatory="y" />
			<column name="refclassid" type="oid" mandatory="y" />
			<column name="refobjid" type="oid" mandatory="y" />
			<column name="refobjsubid" type="integer" length="32" mandatory="y" />
			<column name="deptype" type="char" mandatory="y" />
			<index name="pg_depend_depender_index" unique="NORMAL" spec="USING  btree" >
				<column name="classid" />
				<column name="objid" />
				<column name="objsubid" />
			</index>
			<index name="pg_depend_reference_index" unique="NORMAL" spec="USING  btree" >
				<column name="refclassid" />
				<column name="refobjid" />
				<column name="refobjsubid" />
			</index>
		</table>
		<table name="pg_description" spec="" >
			<column name="objoid" type="oid" mandatory="y" />
			<column name="classoid" type="oid" mandatory="y" />
			<column name="objsubid" type="integer" length="32" mandatory="y" />
			<column name="description" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_description_o_c_o_index" unique="PRIMARY_KEY" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
			</index>
		</table>
		<table name="pg_enum" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="enumtypid" type="oid" mandatory="y" />
			<column name="enumsortorder" type="real" mandatory="y" />
			<column name="enumlabel" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_enum_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_enum_typid_label_index" unique="UNIQUE_KEY" >
				<column name="enumtypid" />
				<column name="enumlabel" />
			</index>
			<index name="pg_enum_typid_sortorder_index" unique="UNIQUE_KEY" >
				<column name="enumtypid" />
				<column name="enumsortorder" />
			</index>
		</table>
		<table name="pg_event_trigger" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="evtname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="evtevent" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="evtowner" type="oid" mandatory="y" />
			<column name="evtfoid" type="oid" mandatory="y" />
			<column name="evtenabled" type="char" mandatory="y" />
			<column name="evttags" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_event_trigger_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_event_trigger_evtname_index" unique="UNIQUE_KEY" >
				<column name="evtname" />
			</index>
		</table>
		<table name="pg_extension" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="extname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="extowner" type="oid" mandatory="y" />
			<column name="extnamespace" type="oid" mandatory="y" />
			<column name="extrelocatable" type="boolean" mandatory="y" />
			<column name="extversion" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="extconfig" type="varchar" />
			<column name="extcondition" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_extension_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_extension_name_index" unique="UNIQUE_KEY" >
				<column name="extname" />
			</index>
		</table>
		<table name="pg_foreign_data_wrapper" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="fdwname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="fdwowner" type="oid" mandatory="y" />
			<column name="fdwhandler" type="oid" mandatory="y" />
			<column name="fdwvalidator" type="oid" mandatory="y" />
			<column name="fdwacl" type="varchar" />
			<column name="fdwoptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_foreign_data_wrapper_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_foreign_data_wrapper_name_index" unique="UNIQUE_KEY" >
				<column name="fdwname" />
			</index>
		</table>
		<table name="pg_foreign_server" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="srvname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="srvowner" type="oid" mandatory="y" />
			<column name="srvfdw" type="oid" mandatory="y" />
			<column name="srvtype" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="srvversion" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="srvacl" type="varchar" />
			<column name="srvoptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_foreign_server_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_foreign_server_name_index" unique="UNIQUE_KEY" >
				<column name="srvname" />
			</index>
		</table>
		<table name="pg_foreign_table" spec="" >
			<column name="ftrelid" type="oid" mandatory="y" />
			<column name="ftserver" type="oid" mandatory="y" />
			<column name="ftoptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_foreign_table_relid_index" unique="PRIMARY_KEY" >
				<column name="ftrelid" />
			</index>
		</table>
		<table name="pg_index" spec="" >
			<column name="indexrelid" type="oid" mandatory="y" />
			<column name="indrelid" type="oid" mandatory="y" />
			<column name="indnatts" type="smallint" length="16" mandatory="y" />
			<column name="indnkeyatts" type="smallint" length="16" mandatory="y" />
			<column name="indisunique" type="boolean" mandatory="y" />
			<column name="indnullsnotdistinct" type="boolean" mandatory="y" />
			<column name="indisprimary" type="boolean" mandatory="y" />
			<column name="indisexclusion" type="boolean" mandatory="y" />
			<column name="indimmediate" type="boolean" mandatory="y" />
			<column name="indisclustered" type="boolean" mandatory="y" />
			<column name="indisvalid" type="boolean" mandatory="y" />
			<column name="indcheckxmin" type="boolean" mandatory="y" />
			<column name="indisready" type="boolean" mandatory="y" />
			<column name="indislive" type="boolean" mandatory="y" />
			<column name="indisreplident" type="boolean" mandatory="y" />
			<column name="indkey" type="varchar" mandatory="y" />
			<column name="indcollation" type="varchar" mandatory="y" />
			<column name="indclass" type="varchar" mandatory="y" />
			<column name="indoption" type="varchar" mandatory="y" />
			<column name="indexprs" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="indpred" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_index_indexrelid_index" unique="PRIMARY_KEY" >
				<column name="indexrelid" />
			</index>
			<index name="pg_index_indrelid_index" unique="NORMAL" spec="USING  btree" >
				<column name="indrelid" />
			</index>
		</table>
		<table name="pg_inherits" spec="" >
			<column name="inhrelid" type="oid" mandatory="y" />
			<column name="inhparent" type="oid" mandatory="y" />
			<column name="inhseqno" type="integer" length="32" mandatory="y" />
			<column name="inhdetachpending" type="boolean" mandatory="y" />
			<index name="pg_inherits_relid_seqno_index" unique="PRIMARY_KEY" >
				<column name="inhrelid" />
				<column name="inhseqno" />
			</index>
			<index name="pg_inherits_parent_index" unique="NORMAL" spec="USING  btree" >
				<column name="inhparent" />
			</index>
		</table>
		<table name="pg_init_privs" spec="" >
			<column name="objoid" type="oid" mandatory="y" />
			<column name="classoid" type="oid" mandatory="y" />
			<column name="objsubid" type="integer" length="32" mandatory="y" />
			<column name="privtype" type="char" mandatory="y" />
			<column name="initprivs" type="varchar" mandatory="y" />
			<index name="pg_init_privs_o_c_o_index" unique="PRIMARY_KEY" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
			</index>
		</table>
		<table name="pg_language" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="lanname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="lanowner" type="oid" mandatory="y" />
			<column name="lanispl" type="boolean" mandatory="y" />
			<column name="lanpltrusted" type="boolean" mandatory="y" />
			<column name="lanplcallfoid" type="oid" mandatory="y" />
			<column name="laninline" type="oid" mandatory="y" />
			<column name="lanvalidator" type="oid" mandatory="y" />
			<column name="lanacl" type="varchar" />
			<index name="pg_language_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_language_name_index" unique="UNIQUE_KEY" >
				<column name="lanname" />
			</index>
		</table>
		<table name="pg_largeobject" spec="" >
			<column name="loid" type="oid" mandatory="y" />
			<column name="pageno" type="integer" length="32" mandatory="y" />
			<column name="data" type="bytea" mandatory="y" />
			<index name="pg_largeobject_loid_pn_index" unique="PRIMARY_KEY" >
				<column name="loid" />
				<column name="pageno" />
			</index>
		</table>
		<table name="pg_largeobject_metadata" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="lomowner" type="oid" mandatory="y" />
			<column name="lomacl" type="varchar" />
			<index name="pg_largeobject_metadata_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
		</table>
		<table name="pg_namespace" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="nspname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="nspowner" type="oid" mandatory="y" />
			<column name="nspacl" type="varchar" />
			<index name="pg_namespace_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_namespace_nspname_index" unique="UNIQUE_KEY" >
				<column name="nspname" />
			</index>
		</table>
		<table name="pg_opclass" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="opcmethod" type="oid" mandatory="y" />
			<column name="opcname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="opcnamespace" type="oid" mandatory="y" />
			<column name="opcowner" type="oid" mandatory="y" />
			<column name="opcfamily" type="oid" mandatory="y" />
			<column name="opcintype" type="oid" mandatory="y" />
			<column name="opcdefault" type="boolean" mandatory="y" />
			<column name="opckeytype" type="oid" mandatory="y" />
			<index name="pg_opclass_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_opclass_am_name_nsp_index" unique="UNIQUE_KEY" >
				<column name="opcmethod" />
				<column name="opcname" />
				<column name="opcnamespace" />
			</index>
		</table>
		<table name="pg_operator" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="oprname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="oprnamespace" type="oid" mandatory="y" />
			<column name="oprowner" type="oid" mandatory="y" />
			<column name="oprkind" type="char" mandatory="y" />
			<column name="oprcanmerge" type="boolean" mandatory="y" />
			<column name="oprcanhash" type="boolean" mandatory="y" />
			<column name="oprleft" type="oid" mandatory="y" />
			<column name="oprright" type="oid" mandatory="y" />
			<column name="oprresult" type="oid" mandatory="y" />
			<column name="oprcom" type="oid" mandatory="y" />
			<column name="oprnegate" type="oid" mandatory="y" />
			<column name="oprcode" type="varchar" mandatory="y" />
			<column name="oprrest" type="varchar" mandatory="y" />
			<column name="oprjoin" type="varchar" mandatory="y" />
			<index name="pg_operator_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_operator_oprname_l_r_n_index" unique="UNIQUE_KEY" >
				<column name="oprname" />
				<column name="oprleft" />
				<column name="oprright" />
				<column name="oprnamespace" />
			</index>
		</table>
		<table name="pg_opfamily" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="opfmethod" type="oid" mandatory="y" />
			<column name="opfname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="opfnamespace" type="oid" mandatory="y" />
			<column name="opfowner" type="oid" mandatory="y" />
			<index name="pg_opfamily_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_opfamily_am_name_nsp_index" unique="UNIQUE_KEY" >
				<column name="opfmethod" />
				<column name="opfname" />
				<column name="opfnamespace" />
			</index>
		</table>
		<table name="pg_parameter_acl" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="parname" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="paracl" type="varchar" />
			<index name="pg_parameter_acl_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_parameter_acl_parname_index" unique="UNIQUE_KEY" >
				<column name="parname" />
			</index>
		</table>
		<table name="pg_partitioned_table" spec="" >
			<column name="partrelid" type="oid" mandatory="y" />
			<column name="partstrat" type="char" mandatory="y" />
			<column name="partnatts" type="smallint" length="16" mandatory="y" />
			<column name="partdefid" type="oid" mandatory="y" />
			<column name="partattrs" type="varchar" mandatory="y" />
			<column name="partclass" type="varchar" mandatory="y" />
			<column name="partcollation" type="varchar" mandatory="y" />
			<column name="partexprs" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_partitioned_table_partrelid_index" unique="PRIMARY_KEY" >
				<column name="partrelid" />
			</index>
		</table>
		<table name="pg_policy" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="polname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="polrelid" type="oid" mandatory="y" />
			<column name="polcmd" type="char" mandatory="y" />
			<column name="polpermissive" type="boolean" mandatory="y" />
			<column name="polroles" type="varchar" mandatory="y" />
			<column name="polqual" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="polwithcheck" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_policy_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_policy_polrelid_polname_index" unique="UNIQUE_KEY" >
				<column name="polrelid" />
				<column name="polname" />
			</index>
		</table>
		<table name="pg_proc" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="proname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="pronamespace" type="oid" mandatory="y" />
			<column name="proowner" type="oid" mandatory="y" />
			<column name="prolang" type="oid" mandatory="y" />
			<column name="procost" type="real" mandatory="y" />
			<column name="prorows" type="real" mandatory="y" />
			<column name="provariadic" type="oid" mandatory="y" />
			<column name="prosupport" type="varchar" mandatory="y" />
			<column name="prokind" type="char" mandatory="y" />
			<column name="prosecdef" type="boolean" mandatory="y" />
			<column name="proleakproof" type="boolean" mandatory="y" />
			<column name="proisstrict" type="boolean" mandatory="y" />
			<column name="proretset" type="boolean" mandatory="y" />
			<column name="provolatile" type="char" mandatory="y" />
			<column name="proparallel" type="char" mandatory="y" />
			<column name="pronargs" type="smallint" length="16" mandatory="y" />
			<column name="pronargdefaults" type="smallint" length="16" mandatory="y" />
			<column name="prorettype" type="oid" mandatory="y" />
			<column name="proargtypes" type="varchar" mandatory="y" />
			<column name="proallargtypes" type="varchar" />
			<column name="proargmodes" type="varchar" />
			<column name="proargnames" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="proargdefaults" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="protrftypes" type="varchar" />
			<column name="prosrc" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="probin" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="prosqlbody" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="proconfig" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="proacl" type="varchar" />
			<index name="pg_proc_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_proc_proname_args_nsp_index" unique="UNIQUE_KEY" >
				<column name="proname" />
				<column name="proargtypes" />
				<column name="pronamespace" />
			</index>
		</table>
		<table name="pg_publication" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="pubname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="pubowner" type="oid" mandatory="y" />
			<column name="puballtables" type="boolean" mandatory="y" />
			<column name="pubinsert" type="boolean" mandatory="y" />
			<column name="pubupdate" type="boolean" mandatory="y" />
			<column name="pubdelete" type="boolean" mandatory="y" />
			<column name="pubtruncate" type="boolean" mandatory="y" />
			<column name="pubviaroot" type="boolean" mandatory="y" />
			<index name="pg_publication_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_publication_pubname_index" unique="UNIQUE_KEY" >
				<column name="pubname" />
			</index>
		</table>
		<table name="pg_publication_namespace" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="pnpubid" type="oid" mandatory="y" />
			<column name="pnnspid" type="oid" mandatory="y" />
			<index name="pg_publication_namespace_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_publication_namespace_pnnspid_pnpubid_index" unique="UNIQUE_KEY" >
				<column name="pnnspid" />
				<column name="pnpubid" />
			</index>
		</table>
		<table name="pg_publication_rel" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="prpubid" type="oid" mandatory="y" />
			<column name="prrelid" type="oid" mandatory="y" />
			<column name="prqual" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="prattrs" type="varchar" />
			<index name="pg_publication_rel_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_publication_rel_prrelid_prpubid_index" unique="UNIQUE_KEY" >
				<column name="prrelid" />
				<column name="prpubid" />
			</index>
			<index name="pg_publication_rel_prpubid_index" unique="NORMAL" spec="USING  btree" >
				<column name="prpubid" />
			</index>
		</table>
		<table name="pg_range" spec="" >
			<column name="rngtypid" type="oid" mandatory="y" />
			<column name="rngsubtype" type="oid" mandatory="y" />
			<column name="rngmultitypid" type="oid" mandatory="y" />
			<column name="rngcollation" type="oid" mandatory="y" />
			<column name="rngsubopc" type="oid" mandatory="y" />
			<column name="rngcanonical" type="varchar" mandatory="y" />
			<column name="rngsubdiff" type="varchar" mandatory="y" />
			<index name="pg_range_rngtypid_index" unique="PRIMARY_KEY" >
				<column name="rngtypid" />
			</index>
			<index name="pg_range_rngmultitypid_index" unique="UNIQUE_KEY" >
				<column name="rngmultitypid" />
			</index>
		</table>
		<table name="pg_replication_origin" spec="" >
			<column name="roident" type="oid" mandatory="y" />
			<column name="roname" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_replication_origin_roiident_index" unique="PRIMARY_KEY" >
				<column name="roident" />
			</index>
			<index name="pg_replication_origin_roname_index" unique="UNIQUE_KEY" >
				<column name="roname" />
			</index>
		</table>
		<table name="pg_rewrite" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="rulename" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="ev_class" type="oid" mandatory="y" />
			<column name="ev_type" type="char" mandatory="y" />
			<column name="ev_enabled" type="char" mandatory="y" />
			<column name="is_instead" type="boolean" mandatory="y" />
			<column name="ev_qual" type="varchar" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="ev_action" type="varchar" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_rewrite_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_rewrite_rel_rulename_index" unique="UNIQUE_KEY" >
				<column name="ev_class" />
				<column name="rulename" />
			</index>
		</table>
		<table name="pg_seclabel" spec="" >
			<column name="objoid" type="oid" mandatory="y" />
			<column name="classoid" type="oid" mandatory="y" />
			<column name="objsubid" type="integer" length="32" mandatory="y" />
			<column name="provider" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="label" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_seclabel_object_index" unique="PRIMARY_KEY" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="objsubid" />
				<column name="provider" />
			</index>
		</table>
		<table name="pg_sequence" spec="" >
			<column name="seqrelid" type="oid" mandatory="y" />
			<column name="seqtypid" type="oid" mandatory="y" />
			<column name="seqstart" type="bigint" length="64" mandatory="y" />
			<column name="seqincrement" type="bigint" length="64" mandatory="y" />
			<column name="seqmax" type="bigint" length="64" mandatory="y" />
			<column name="seqmin" type="bigint" length="64" mandatory="y" />
			<column name="seqcache" type="bigint" length="64" mandatory="y" />
			<column name="seqcycle" type="boolean" mandatory="y" />
			<index name="pg_sequence_seqrelid_index" unique="PRIMARY_KEY" >
				<column name="seqrelid" />
			</index>
		</table>
		<table name="pg_shdepend" spec="" >
			<column name="dbid" type="oid" mandatory="y" />
			<column name="classid" type="oid" mandatory="y" />
			<column name="objid" type="oid" mandatory="y" />
			<column name="objsubid" type="integer" length="32" mandatory="y" />
			<column name="refclassid" type="oid" mandatory="y" />
			<column name="refobjid" type="oid" mandatory="y" />
			<column name="deptype" type="char" mandatory="y" />
			<index name="pg_shdepend_depender_index" unique="NORMAL" spec="USING  btree" >
				<column name="dbid" />
				<column name="classid" />
				<column name="objid" />
				<column name="objsubid" />
			</index>
			<index name="pg_shdepend_reference_index" unique="NORMAL" spec="USING  btree" >
				<column name="refclassid" />
				<column name="refobjid" />
			</index>
		</table>
		<table name="pg_shdescription" spec="" >
			<column name="objoid" type="oid" mandatory="y" />
			<column name="classoid" type="oid" mandatory="y" />
			<column name="description" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_shdescription_o_c_index" unique="PRIMARY_KEY" >
				<column name="objoid" />
				<column name="classoid" />
			</index>
		</table>
		<table name="pg_shseclabel" spec="" >
			<column name="objoid" type="oid" mandatory="y" />
			<column name="classoid" type="oid" mandatory="y" />
			<column name="provider" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="label" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_shseclabel_object_index" unique="PRIMARY_KEY" >
				<column name="objoid" />
				<column name="classoid" />
				<column name="provider" />
			</index>
		</table>
		<table name="pg_statistic" spec="" >
			<column name="starelid" type="oid" mandatory="y" />
			<column name="staattnum" type="smallint" length="16" mandatory="y" />
			<column name="stainherit" type="boolean" mandatory="y" />
			<column name="stanullfrac" type="real" mandatory="y" />
			<column name="stawidth" type="integer" length="32" mandatory="y" />
			<column name="stadistinct" type="real" mandatory="y" />
			<column name="stakind1" type="smallint" length="16" mandatory="y" />
			<column name="stakind2" type="smallint" length="16" mandatory="y" />
			<column name="stakind3" type="smallint" length="16" mandatory="y" />
			<column name="stakind4" type="smallint" length="16" mandatory="y" />
			<column name="stakind5" type="smallint" length="16" mandatory="y" />
			<column name="staop1" type="oid" mandatory="y" />
			<column name="staop2" type="oid" mandatory="y" />
			<column name="staop3" type="oid" mandatory="y" />
			<column name="staop4" type="oid" mandatory="y" />
			<column name="staop5" type="oid" mandatory="y" />
			<column name="stacoll1" type="oid" mandatory="y" />
			<column name="stacoll2" type="oid" mandatory="y" />
			<column name="stacoll3" type="oid" mandatory="y" />
			<column name="stacoll4" type="oid" mandatory="y" />
			<column name="stacoll5" type="oid" mandatory="y" />
			<column name="stanumbers1" type="varchar" />
			<column name="stanumbers2" type="varchar" />
			<column name="stanumbers3" type="varchar" />
			<column name="stanumbers4" type="varchar" />
			<column name="stanumbers5" type="varchar" />
			<column name="stavalues1" type="anyarray" />
			<column name="stavalues2" type="anyarray" />
			<column name="stavalues3" type="anyarray" />
			<column name="stavalues4" type="anyarray" />
			<column name="stavalues5" type="anyarray" />
			<index name="pg_statistic_relid_att_inh_index" unique="PRIMARY_KEY" >
				<column name="starelid" />
				<column name="staattnum" />
				<column name="stainherit" />
			</index>
		</table>
		<table name="pg_statistic_ext" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="stxrelid" type="oid" mandatory="y" />
			<column name="stxname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="stxnamespace" type="oid" mandatory="y" />
			<column name="stxowner" type="oid" mandatory="y" />
			<column name="stxkeys" type="varchar" mandatory="y" />
			<column name="stxstattarget" type="smallint" length="16" />
			<column name="stxkind" type="varchar" mandatory="y" />
			<column name="stxexprs" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_statistic_ext_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_statistic_ext_name_index" unique="UNIQUE_KEY" >
				<column name="stxname" />
				<column name="stxnamespace" />
			</index>
			<index name="pg_statistic_ext_relid_index" unique="NORMAL" spec="USING  btree" >
				<column name="stxrelid" />
			</index>
		</table>
		<table name="pg_statistic_ext_data" spec="" >
			<column name="stxoid" type="oid" mandatory="y" />
			<column name="stxdinherit" type="boolean" mandatory="y" />
			<column name="stxdndistinct" type="pg_ndistinct" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="stxddependencies" type="pg_dependencies" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="stxdmcv" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="stxdexpr" type="varchar" />
			<index name="pg_statistic_ext_data_stxoid_inh_index" unique="PRIMARY_KEY" >
				<column name="stxoid" />
				<column name="stxdinherit" />
			</index>
		</table>
		<table name="pg_subscription" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="subdbid" type="oid" mandatory="y" />
			<column name="subskiplsn" type="pg_lsn" mandatory="y" />
			<column name="subname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subowner" type="oid" mandatory="y" />
			<column name="subenabled" type="boolean" mandatory="y" />
			<column name="subbinary" type="boolean" mandatory="y" />
			<column name="substream" type="char" mandatory="y" />
			<column name="subtwophasestate" type="char" mandatory="y" />
			<column name="subdisableonerr" type="boolean" mandatory="y" />
			<column name="subpasswordrequired" type="boolean" mandatory="y" />
			<column name="subrunasowner" type="boolean" mandatory="y" />
			<column name="subfailover" type="boolean" mandatory="y" />
			<column name="subconninfo" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subslotname" type="name" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subsynccommit" type="text" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="subpublications" type="text[]" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="suborigin" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_subscription_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_subscription_subname_index" unique="UNIQUE_KEY" >
				<column name="subdbid" />
				<column name="subname" />
			</index>
		</table>
		<table name="pg_subscription_rel" spec="" >
			<column name="srsubid" type="oid" mandatory="y" />
			<column name="srrelid" type="oid" mandatory="y" />
			<column name="srsubstate" type="char" mandatory="y" />
			<column name="srsublsn" type="pg_lsn" />
			<index name="pg_subscription_rel_srrelid_srsubid_index" unique="PRIMARY_KEY" >
				<column name="srrelid" />
				<column name="srsubid" />
			</index>
		</table>
		<table name="pg_tablespace" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="spcname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="spcowner" type="oid" mandatory="y" />
			<column name="spcacl" type="varchar" />
			<column name="spcoptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_tablespace_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_tablespace_spcname_index" unique="UNIQUE_KEY" >
				<column name="spcname" />
			</index>
		</table>
		<table name="pg_transform" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="trftype" type="oid" mandatory="y" />
			<column name="trflang" type="oid" mandatory="y" />
			<column name="trffromsql" type="varchar" mandatory="y" />
			<column name="trftosql" type="varchar" mandatory="y" />
			<index name="pg_transform_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_transform_type_lang_index" unique="UNIQUE_KEY" >
				<column name="trftype" />
				<column name="trflang" />
			</index>
		</table>
		<table name="pg_trigger" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="tgrelid" type="oid" mandatory="y" />
			<column name="tgparentid" type="oid" mandatory="y" />
			<column name="tgname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tgfoid" type="oid" mandatory="y" />
			<column name="tgtype" type="smallint" length="16" mandatory="y" />
			<column name="tgenabled" type="char" mandatory="y" />
			<column name="tgisinternal" type="boolean" mandatory="y" />
			<column name="tgconstrrelid" type="oid" mandatory="y" />
			<column name="tgconstrindid" type="oid" mandatory="y" />
			<column name="tgconstraint" type="oid" mandatory="y" />
			<column name="tgdeferrable" type="boolean" mandatory="y" />
			<column name="tginitdeferred" type="boolean" mandatory="y" />
			<column name="tgnargs" type="smallint" length="16" mandatory="y" />
			<column name="tgattr" type="varchar" mandatory="y" />
			<column name="tgargs" type="bytea" mandatory="y" />
			<column name="tgqual" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tgoldtable" type="name" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tgnewtable" type="name" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_trigger_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_trigger_tgrelid_tgname_index" unique="UNIQUE_KEY" >
				<column name="tgrelid" />
				<column name="tgname" />
			</index>
			<index name="pg_trigger_tgconstraint_index" unique="NORMAL" spec="USING  btree" >
				<column name="tgconstraint" />
			</index>
		</table>
		<table name="pg_ts_config" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="cfgname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="cfgnamespace" type="oid" mandatory="y" />
			<column name="cfgowner" type="oid" mandatory="y" />
			<column name="cfgparser" type="oid" mandatory="y" />
			<index name="pg_ts_config_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_ts_config_cfgname_index" unique="UNIQUE_KEY" >
				<column name="cfgname" />
				<column name="cfgnamespace" />
			</index>
		</table>
		<table name="pg_ts_config_map" spec="" >
			<column name="mapcfg" type="oid" mandatory="y" />
			<column name="maptokentype" type="integer" length="32" mandatory="y" />
			<column name="mapseqno" type="integer" length="32" mandatory="y" />
			<column name="mapdict" type="oid" mandatory="y" />
			<index name="pg_ts_config_map_index" unique="PRIMARY_KEY" >
				<column name="mapcfg" />
				<column name="maptokentype" />
				<column name="mapseqno" />
			</index>
		</table>
		<table name="pg_ts_dict" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="dictname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="dictnamespace" type="oid" mandatory="y" />
			<column name="dictowner" type="oid" mandatory="y" />
			<column name="dicttemplate" type="oid" mandatory="y" />
			<column name="dictinitoption" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_ts_dict_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_ts_dict_dictname_index" unique="UNIQUE_KEY" >
				<column name="dictname" />
				<column name="dictnamespace" />
			</index>
		</table>
		<table name="pg_ts_parser" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="prsname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="prsnamespace" type="oid" mandatory="y" />
			<column name="prsstart" type="varchar" mandatory="y" />
			<column name="prstoken" type="varchar" mandatory="y" />
			<column name="prsend" type="varchar" mandatory="y" />
			<column name="prsheadline" type="varchar" mandatory="y" />
			<column name="prslextype" type="varchar" mandatory="y" />
			<index name="pg_ts_parser_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_ts_parser_prsname_index" unique="UNIQUE_KEY" >
				<column name="prsname" />
				<column name="prsnamespace" />
			</index>
		</table>
		<table name="pg_ts_template" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="tmplname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="tmplnamespace" type="oid" mandatory="y" />
			<column name="tmplinit" type="varchar" mandatory="y" />
			<column name="tmpllexize" type="varchar" mandatory="y" />
			<index name="pg_ts_template_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_ts_template_tmplname_index" unique="UNIQUE_KEY" >
				<column name="tmplname" />
				<column name="tmplnamespace" />
			</index>
		</table>
		<table name="pg_type" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="typname" type="name" mandatory="y" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="typnamespace" type="oid" mandatory="y" />
			<column name="typowner" type="oid" mandatory="y" />
			<column name="typlen" type="smallint" length="16" mandatory="y" />
			<column name="typbyval" type="boolean" mandatory="y" />
			<column name="typtype" type="char" mandatory="y" />
			<column name="typcategory" type="char" mandatory="y" />
			<column name="typispreferred" type="boolean" mandatory="y" />
			<column name="typisdefined" type="boolean" mandatory="y" />
			<column name="typdelim" type="char" mandatory="y" />
			<column name="typrelid" type="oid" mandatory="y" />
			<column name="typsubscript" type="varchar" mandatory="y" />
			<column name="typelem" type="oid" mandatory="y" />
			<column name="typarray" type="oid" mandatory="y" />
			<column name="typinput" type="varchar" mandatory="y" />
			<column name="typoutput" type="varchar" mandatory="y" />
			<column name="typreceive" type="varchar" mandatory="y" />
			<column name="typsend" type="varchar" mandatory="y" />
			<column name="typmodin" type="varchar" mandatory="y" />
			<column name="typmodout" type="varchar" mandatory="y" />
			<column name="typanalyze" type="varchar" mandatory="y" />
			<column name="typalign" type="char" mandatory="y" />
			<column name="typstorage" type="char" mandatory="y" />
			<column name="typnotnull" type="boolean" mandatory="y" />
			<column name="typbasetype" type="oid" mandatory="y" />
			<column name="typtypmod" type="integer" length="32" mandatory="y" />
			<column name="typndims" type="integer" length="32" mandatory="y" />
			<column name="typcollation" type="oid" mandatory="y" />
			<column name="typdefaultbin" type="varchar" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="typdefault" type="text" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<column name="typacl" type="varchar" />
			<index name="pg_type_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_type_typname_nsp_index" unique="UNIQUE_KEY" >
				<column name="typname" />
				<column name="typnamespace" />
			</index>
		</table>
		<table name="pg_user_mapping" spec="" >
			<column name="oid" type="oid" mandatory="y" />
			<column name="umuser" type="oid" mandatory="y" />
			<column name="umserver" type="oid" mandatory="y" />
			<column name="umoptions" type="text[]" >
				<column_options><![CDATA[COLLATE C]]></column_options>
			</column>
			<index name="pg_user_mapping_oid_index" unique="PRIMARY_KEY" >
				<column name="oid" />
			</index>
			<index name="pg_user_mapping_user_server_index" unique="UNIQUE_KEY" >
				<column name="umuser" />
				<column name="umserver" />
			</index>
		</table>
		<view name="pg_available_extension_versions" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT e.name,
    e.version,
    (x.extname IS NOT NULL) AS installed,
    e.superuser,
    e.trusted,
    e.relocatable,
    e.schema,
    e.requires,
    e.comment
   FROM (pg_available_extension_versions() e(name, version, superuser, trusted, relocatable, schema, requires, comment)
     LEFT JOIN pg_extension x ON (((e.name = x.extname) AND (e.version = x.extversion))))]]></view_script>
		</view>
		<view name="pg_available_extensions" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT e.name,
    e.default_version,
    x.extversion AS installed_version,
    e.comment
   FROM (pg_available_extensions() e(name, default_version, comment)
     LEFT JOIN pg_extension x ON ((e.name = x.extname)))]]></view_script>
		</view>
		<view name="pg_backend_memory_contexts" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT name,
    ident,
    parent,
    level,
    total_bytes,
    total_nblocks,
    free_bytes,
    free_chunks,
    used_bytes
   FROM pg_get_backend_memory_contexts() pg_get_backend_memory_contexts(name, ident, parent, level, total_bytes, total_nblocks, free_bytes, free_chunks, used_bytes)]]></view_script>
		</view>
		<view name="pg_config" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT name,
    setting
   FROM pg_config() pg_config(name, setting)]]></view_script>
		</view>
		<view name="pg_cursors" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT name,
    statement,
    is_holdable,
    is_binary,
    is_scrollable,
    creation_time
   FROM pg_cursor() c(name, statement, is_holdable, is_binary, is_scrollable, creation_time)]]></view_script>
		</view>
		<view name="pg_file_settings" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT sourcefile,
    sourceline,
    seqno,
    name,
    setting,
    applied,
    error
   FROM pg_show_all_file_settings() a(sourcefile, sourceline, seqno, name, setting, applied, error)]]></view_script>
		</view>
		<view name="pg_group" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT rolname AS groname,
    oid AS grosysid,
    ARRAY( SELECT pg_auth_members.member
           FROM pg_auth_members
          WHERE (pg_auth_members.roleid = pg_authid.oid)) AS grolist
   FROM pg_authid
  WHERE (NOT rolcanlogin)]]></view_script>
		</view>
		<view name="pg_hba_file_rules" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT rule_number,
    file_name,
    line_number,
    type,
    database,
    user_name,
    address,
    netmask,
    auth_method,
    options,
    error
   FROM pg_hba_file_rules() a(rule_number, file_name, line_number, type, database, user_name, address, netmask, auth_method, options, error)]]></view_script>
		</view>
		<view name="pg_ident_file_mappings" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT map_number,
    file_name,
    line_number,
    map_name,
    sys_name,
    pg_username,
    error
   FROM pg_ident_file_mappings() a(map_number, file_name, line_number, map_name, sys_name, pg_username, error)]]></view_script>
		</view>
		<view name="pg_indexes" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS tablename,
    i.relname AS indexname,
    t.spcname AS tablespace,
    pg_get_indexdef(i.oid) AS indexdef
   FROM ((((pg_index x
     JOIN pg_class c ON ((c.oid = x.indrelid)))
     JOIN pg_class i ON ((i.oid = x.indexrelid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
     LEFT JOIN pg_tablespace t ON ((t.oid = i.reltablespace)))
  WHERE ((c.relkind = ANY (ARRAY['r'::"char", 'm'::"char", 'p'::"char"])) AND (i.relkind = ANY (ARRAY['i'::"char", 'I'::"char"])))]]></view_script>
		</view>
		<view name="pg_locks" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT locktype,
    database,
    relation,
    page,
    tuple,
    virtualxid,
    transactionid,
    classid,
    objid,
    objsubid,
    virtualtransaction,
    pid,
    mode,
    granted,
    fastpath,
    waitstart
   FROM pg_lock_status() l(locktype, database, relation, page, tuple, virtualxid, transactionid, classid, objid, objsubid, virtualtransaction, pid, mode, granted, fastpath, waitstart)]]></view_script>
		</view>
		<view name="pg_matviews" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS matviewname,
    pg_get_userbyid(c.relowner) AS matviewowner,
    t.spcname AS tablespace,
    c.relhasindex AS hasindexes,
    c.relispopulated AS ispopulated,
    pg_get_viewdef(c.oid) AS definition
   FROM ((pg_class c
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))
  WHERE (c.relkind = 'm'::"char")]]></view_script>
		</view>
		<view name="pg_policies" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS tablename,
    pol.polname AS policyname,
        CASE
            WHEN pol.polpermissive THEN 'PERMISSIVE'::text
            ELSE 'RESTRICTIVE'::text
        END AS permissive,
        CASE
            WHEN (pol.polroles = '{0}'::oid[]) THEN (string_to_array('public'::text, ''::text))::name[]
            ELSE ARRAY( SELECT pg_authid.rolname
               FROM pg_authid
              WHERE (pg_authid.oid = ANY (pol.polroles))
              ORDER BY pg_authid.rolname)
        END AS roles,
        CASE pol.polcmd
            WHEN 'r'::"char" THEN 'SELECT'::text
            WHEN 'a'::"char" THEN 'INSERT'::text
            WHEN 'w'::"char" THEN 'UPDATE'::text
            WHEN 'd'::"char" THEN 'DELETE'::text
            WHEN '*'::"char" THEN 'ALL'::text
            ELSE NULL::text
        END AS cmd,
    pg_get_expr(pol.polqual, pol.polrelid) AS qual,
    pg_get_expr(pol.polwithcheck, pol.polrelid) AS with_check
   FROM ((pg_policy pol
     JOIN pg_class c ON ((c.oid = pol.polrelid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))]]></view_script>
		</view>
		<view name="pg_prepared_statements" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT name,
    statement,
    prepare_time,
    parameter_types,
    result_types,
    from_sql,
    generic_plans,
    custom_plans
   FROM pg_prepared_statement() p(name, statement, prepare_time, parameter_types, result_types, from_sql, generic_plans, custom_plans)]]></view_script>
		</view>
		<view name="pg_prepared_xacts" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT p.transaction,
    p.gid,
    p.prepared,
    u.rolname AS owner,
    d.datname AS database
   FROM ((pg_prepared_xact() p(transaction, gid, prepared, ownerid, dbid)
     LEFT JOIN pg_authid u ON ((p.ownerid = u.oid)))
     LEFT JOIN pg_database d ON ((p.dbid = d.oid)))]]></view_script>
		</view>
		<view name="pg_publication_tables" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT p.pubname,
    n.nspname AS schemaname,
    c.relname AS tablename,
    ( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg
           FROM pg_attribute a
          WHERE ((a.attrelid = gpt.relid) AND (a.attnum = ANY ((gpt.attrs)::smallint[])))) AS attnames,
    pg_get_expr(gpt.qual, gpt.relid) AS rowfilter
   FROM pg_publication p,
    LATERAL pg_get_publication_tables(VARIADIC ARRAY[(p.pubname)::text]) gpt(pubid, relid, attrs, qual),
    (pg_class c
     JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (c.oid = gpt.relid)]]></view_script>
		</view>
		<view name="pg_replication_origin_status" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT local_id,
    external_id,
    remote_lsn,
    local_lsn
   FROM pg_show_replication_origin_status() pg_show_replication_origin_status(local_id, external_id, remote_lsn, local_lsn)]]></view_script>
		</view>
		<view name="pg_replication_slots" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT l.slot_name,
    l.plugin,
    l.slot_type,
    l.datoid,
    d.datname AS database,
    l.temporary,
    l.active,
    l.active_pid,
    l.xmin,
    l.catalog_xmin,
    l.restart_lsn,
    l.confirmed_flush_lsn,
    l.wal_status,
    l.safe_wal_size,
    l.two_phase,
    l.inactive_since,
    l.conflicting,
    l.invalidation_reason,
    l.failover,
    l.synced
   FROM (pg_get_replication_slots() l(slot_name, plugin, slot_type, datoid, temporary, active, active_pid, xmin, catalog_xmin, restart_lsn, confirmed_flush_lsn, wal_status, safe_wal_size, two_phase, inactive_since, conflicting, invalidation_reason, failover, synced)
     LEFT JOIN pg_database d ON ((l.datoid = d.oid)))]]></view_script>
		</view>
		<view name="pg_roles" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pg_authid.rolname,
    pg_authid.rolsuper,
    pg_authid.rolinherit,
    pg_authid.rolcreaterole,
    pg_authid.rolcreatedb,
    pg_authid.rolcanlogin,
    pg_authid.rolreplication,
    pg_authid.rolconnlimit,
    '********'::text AS rolpassword,
    pg_authid.rolvaliduntil,
    pg_authid.rolbypassrls,
    s.setconfig AS rolconfig,
    pg_authid.oid
   FROM (pg_authid
     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))]]></view_script>
		</view>
		<view name="pg_rules" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS tablename,
    r.rulename,
    pg_get_ruledef(r.oid) AS definition
   FROM ((pg_rewrite r
     JOIN pg_class c ON ((c.oid = r.ev_class)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (r.rulename <> '_RETURN'::name)]]></view_script>
		</view>
		<view name="pg_seclabels" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT l.objoid,
    l.classoid,
    l.objsubid,
        CASE
            WHEN (rel.relkind = ANY (ARRAY['r'::"char", 'p'::"char"])) THEN 'table'::text
            WHEN (rel.relkind = 'v'::"char") THEN 'view'::text
            WHEN (rel.relkind = 'm'::"char") THEN 'materialized view'::text
            WHEN (rel.relkind = 'S'::"char") THEN 'sequence'::text
            WHEN (rel.relkind = 'f'::"char") THEN 'foreign table'::text
            ELSE NULL::text
        END AS objtype,
    rel.relnamespace AS objnamespace,
        CASE
            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)
            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((rel.relname)::text))
        END AS objname,
    l.provider,
    l.label
   FROM ((pg_seclabel l
     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))
     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))
  WHERE (l.objsubid = 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
    'column'::text AS objtype,
    rel.relnamespace AS objnamespace,
    ((
        CASE
            WHEN pg_table_is_visible(rel.oid) THEN quote_ident((rel.relname)::text)
            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((rel.relname)::text))
        END || '.'::text) || (att.attname)::text) AS objname,
    l.provider,
    l.label
   FROM (((pg_seclabel l
     JOIN pg_class rel ON (((l.classoid = rel.tableoid) AND (l.objoid = rel.oid))))
     JOIN pg_attribute att ON (((rel.oid = att.attrelid) AND (l.objsubid = att.attnum))))
     JOIN pg_namespace nsp ON ((rel.relnamespace = nsp.oid)))
  WHERE (l.objsubid <> 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
        CASE pro.prokind
            WHEN 'a'::"char" THEN 'aggregate'::text
            WHEN 'f'::"char" THEN 'function'::text
            WHEN 'p'::"char" THEN 'procedure'::text
            WHEN 'w'::"char" THEN 'window'::text
            ELSE NULL::text
        END AS objtype,
    pro.pronamespace AS objnamespace,
    (((
        CASE
            WHEN pg_function_is_visible(pro.oid) THEN quote_ident((pro.proname)::text)
            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((pro.proname)::text))
        END || '('::text) || pg_get_function_arguments(pro.oid)) || ')'::text) AS objname,
    l.provider,
    l.label
   FROM ((pg_seclabel l
     JOIN pg_proc pro ON (((l.classoid = pro.tableoid) AND (l.objoid = pro.oid))))
     JOIN pg_namespace nsp ON ((pro.pronamespace = nsp.oid)))
  WHERE (l.objsubid = 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
        CASE
            WHEN (typ.typtype = 'd'::"char") THEN 'domain'::text
            ELSE 'type'::text
        END AS objtype,
    typ.typnamespace AS objnamespace,
        CASE
            WHEN pg_type_is_visible(typ.oid) THEN quote_ident((typ.typname)::text)
            ELSE ((quote_ident((nsp.nspname)::text) || '.'::text) || quote_ident((typ.typname)::text))
        END AS objname,
    l.provider,
    l.label
   FROM ((pg_seclabel l
     JOIN pg_type typ ON (((l.classoid = typ.tableoid) AND (l.objoid = typ.oid))))
     JOIN pg_namespace nsp ON ((typ.typnamespace = nsp.oid)))
  WHERE (l.objsubid = 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
    'large object'::text AS objtype,
    NULL::oid AS objnamespace,
    (l.objoid)::text AS objname,
    l.provider,
    l.label
   FROM (pg_seclabel l
     JOIN pg_largeobject_metadata lom ON ((l.objoid = lom.oid)))
  WHERE ((l.classoid = ('pg_largeobject'::regclass)::oid) AND (l.objsubid = 0))
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
    'language'::text AS objtype,
    NULL::oid AS objnamespace,
    quote_ident((lan.lanname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_seclabel l
     JOIN pg_language lan ON (((l.classoid = lan.tableoid) AND (l.objoid = lan.oid))))
  WHERE (l.objsubid = 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
    'schema'::text AS objtype,
    nsp.oid AS objnamespace,
    quote_ident((nsp.nspname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_seclabel l
     JOIN pg_namespace nsp ON (((l.classoid = nsp.tableoid) AND (l.objoid = nsp.oid))))
  WHERE (l.objsubid = 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
    'event trigger'::text AS objtype,
    NULL::oid AS objnamespace,
    quote_ident((evt.evtname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_seclabel l
     JOIN pg_event_trigger evt ON (((l.classoid = evt.tableoid) AND (l.objoid = evt.oid))))
  WHERE (l.objsubid = 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    l.objsubid,
    'publication'::text AS objtype,
    NULL::oid AS objnamespace,
    quote_ident((p.pubname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_seclabel l
     JOIN pg_publication p ON (((l.classoid = p.tableoid) AND (l.objoid = p.oid))))
  WHERE (l.objsubid = 0)
UNION ALL
 SELECT l.objoid,
    l.classoid,
    0 AS objsubid,
    'subscription'::text AS objtype,
    NULL::oid AS objnamespace,
    quote_ident((s.subname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_shseclabel l
     JOIN pg_subscription s ON (((l.classoid = s.tableoid) AND (l.objoid = s.oid))))
UNION ALL
 SELECT l.objoid,
    l.classoid,
    0 AS objsubid,
    'database'::text AS objtype,
    NULL::oid AS objnamespace,
    quote_ident((dat.datname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_shseclabel l
     JOIN pg_database dat ON (((l.classoid = dat.tableoid) AND (l.objoid = dat.oid))))
UNION ALL
 SELECT l.objoid,
    l.classoid,
    0 AS objsubid,
    'tablespace'::text AS objtype,
    NULL::oid AS objnamespace,
    quote_ident((spc.spcname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_shseclabel l
     JOIN pg_tablespace spc ON (((l.classoid = spc.tableoid) AND (l.objoid = spc.oid))))
UNION ALL
 SELECT l.objoid,
    l.classoid,
    0 AS objsubid,
    'role'::text AS objtype,
    NULL::oid AS objnamespace,
    quote_ident((rol.rolname)::text) AS objname,
    l.provider,
    l.label
   FROM (pg_shseclabel l
     JOIN pg_authid rol ON (((l.classoid = rol.tableoid) AND (l.objoid = rol.oid))))]]></view_script>
		</view>
		<view name="pg_sequences" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS sequencename,
    pg_get_userbyid(c.relowner) AS sequenceowner,
    (s.seqtypid)::regtype AS data_type,
    s.seqstart AS start_value,
    s.seqmin AS min_value,
    s.seqmax AS max_value,
    s.seqincrement AS increment_by,
    s.seqcycle AS cycle,
    s.seqcache AS cache_size,
        CASE
            WHEN has_sequence_privilege(c.oid, 'SELECT,USAGE'::text) THEN pg_sequence_last_value((c.oid)::regclass)
            ELSE NULL::bigint
        END AS last_value
   FROM ((pg_sequence s
     JOIN pg_class c ON ((c.oid = s.seqrelid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE ((NOT pg_is_other_temp_schema(n.oid)) AND (c.relkind = 'S'::"char"))]]></view_script>
		</view>
		<view name="pg_settings" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT name,
    setting,
    unit,
    category,
    short_desc,
    extra_desc,
    context,
    vartype,
    source,
    min_val,
    max_val,
    enumvals,
    boot_val,
    reset_val,
    sourcefile,
    sourceline,
    pending_restart
   FROM pg_show_all_settings() a(name, setting, unit, category, short_desc, extra_desc, context, vartype, source, min_val, max_val, enumvals, boot_val, reset_val, sourcefile, sourceline, pending_restart)
 SELECT name,
    setting,
    unit,
    category,
    short_desc,
    extra_desc,
    context,
    vartype,
    source,
    min_val,
    max_val,
    enumvals,
    boot_val,
    reset_val,
    sourcefile,
    sourceline,
    pending_restart
   FROM pg_show_all_settings() a(name, setting, unit, category, short_desc, extra_desc, context, vartype, source, min_val, max_val, enumvals, boot_val, reset_val, sourcefile, sourceline, pending_restart)]]></view_script>
		</view>
		<view name="pg_shadow" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pg_authid.rolname AS usename,
    pg_authid.oid AS usesysid,
    pg_authid.rolcreatedb AS usecreatedb,
    pg_authid.rolsuper AS usesuper,
    pg_authid.rolreplication AS userepl,
    pg_authid.rolbypassrls AS usebypassrls,
    pg_authid.rolpassword AS passwd,
    pg_authid.rolvaliduntil AS valuntil,
    s.setconfig AS useconfig
   FROM (pg_authid
     LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))
  WHERE pg_authid.rolcanlogin]]></view_script>
		</view>
		<view name="pg_shmem_allocations" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT name,
    off,
    size,
    allocated_size
   FROM pg_get_shmem_allocations() pg_get_shmem_allocations(name, off, size, allocated_size)]]></view_script>
		</view>
		<view name="pg_stat_activity" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.datid,
    d.datname,
    s.pid,
    s.leader_pid,
    s.usesysid,
    u.rolname AS usename,
    s.application_name,
    s.client_addr,
    s.client_hostname,
    s.client_port,
    s.backend_start,
    s.xact_start,
    s.query_start,
    s.state_change,
    s.wait_event_type,
    s.wait_event,
    s.state,
    s.backend_xid,
    s.backend_xmin,
    s.query_id,
    s.query,
    s.backend_type
   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc, gss_delegation, leader_pid, query_id)
     LEFT JOIN pg_database d ON ((s.datid = d.oid)))
     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)))]]></view_script>
		</view>
		<view name="pg_stat_all_indexes" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT c.oid AS relid,
    i.oid AS indexrelid,
    n.nspname AS schemaname,
    c.relname,
    i.relname AS indexrelname,
    pg_stat_get_numscans(i.oid) AS idx_scan,
    pg_stat_get_lastscan(i.oid) AS last_idx_scan,
    pg_stat_get_tuples_returned(i.oid) AS idx_tup_read,
    pg_stat_get_tuples_fetched(i.oid) AS idx_tup_fetch
   FROM (((pg_class c
     JOIN pg_index x ON ((c.oid = x.indrelid)))
     JOIN pg_class i ON ((i.oid = x.indexrelid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))]]></view_script>
		</view>
		<view name="pg_stat_all_tables" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT c.oid AS relid,
    n.nspname AS schemaname,
    c.relname,
    pg_stat_get_numscans(c.oid) AS seq_scan,
    pg_stat_get_lastscan(c.oid) AS last_seq_scan,
    pg_stat_get_tuples_returned(c.oid) AS seq_tup_read,
    (sum(pg_stat_get_numscans(i.indexrelid)))::bigint AS idx_scan,
    max(pg_stat_get_lastscan(i.indexrelid)) AS last_idx_scan,
    ((sum(pg_stat_get_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_tuples_fetched(c.oid)) AS idx_tup_fetch,
    pg_stat_get_tuples_inserted(c.oid) AS n_tup_ins,
    pg_stat_get_tuples_updated(c.oid) AS n_tup_upd,
    pg_stat_get_tuples_deleted(c.oid) AS n_tup_del,
    pg_stat_get_tuples_hot_updated(c.oid) AS n_tup_hot_upd,
    pg_stat_get_tuples_newpage_updated(c.oid) AS n_tup_newpage_upd,
    pg_stat_get_live_tuples(c.oid) AS n_live_tup,
    pg_stat_get_dead_tuples(c.oid) AS n_dead_tup,
    pg_stat_get_mod_since_analyze(c.oid) AS n_mod_since_analyze,
    pg_stat_get_ins_since_vacuum(c.oid) AS n_ins_since_vacuum,
    pg_stat_get_last_vacuum_time(c.oid) AS last_vacuum,
    pg_stat_get_last_autovacuum_time(c.oid) AS last_autovacuum,
    pg_stat_get_last_analyze_time(c.oid) AS last_analyze,
    pg_stat_get_last_autoanalyze_time(c.oid) AS last_autoanalyze,
    pg_stat_get_vacuum_count(c.oid) AS vacuum_count,
    pg_stat_get_autovacuum_count(c.oid) AS autovacuum_count,
    pg_stat_get_analyze_count(c.oid) AS analyze_count,
    pg_stat_get_autoanalyze_count(c.oid) AS autoanalyze_count
   FROM ((pg_class c
     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char", 'p'::"char"]))
  GROUP BY c.oid, n.nspname, c.relname]]></view_script>
		</view>
		<view name="pg_stat_archiver" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT archived_count,
    last_archived_wal,
    last_archived_time,
    failed_count,
    last_failed_wal,
    last_failed_time,
    stats_reset
   FROM pg_stat_get_archiver() s(archived_count, last_archived_wal, last_archived_time, failed_count, last_failed_wal, last_failed_time, stats_reset)]]></view_script>
		</view>
		<view name="pg_stat_bgwriter" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pg_stat_get_bgwriter_buf_written_clean() AS buffers_clean,
    pg_stat_get_bgwriter_maxwritten_clean() AS maxwritten_clean,
    pg_stat_get_buf_alloc() AS buffers_alloc,
    pg_stat_get_bgwriter_stat_reset_time() AS stats_reset]]></view_script>
		</view>
		<view name="pg_stat_checkpointer" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pg_stat_get_checkpointer_num_timed() AS num_timed,
    pg_stat_get_checkpointer_num_requested() AS num_requested,
    pg_stat_get_checkpointer_restartpoints_timed() AS restartpoints_timed,
    pg_stat_get_checkpointer_restartpoints_requested() AS restartpoints_req,
    pg_stat_get_checkpointer_restartpoints_performed() AS restartpoints_done,
    pg_stat_get_checkpointer_write_time() AS write_time,
    pg_stat_get_checkpointer_sync_time() AS sync_time,
    pg_stat_get_checkpointer_buffers_written() AS buffers_written,
    pg_stat_get_checkpointer_stat_reset_time() AS stats_reset]]></view_script>
		</view>
		<view name="pg_stat_database" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT oid AS datid,
    datname,
        CASE
            WHEN (oid = (0)::oid) THEN 0
            ELSE pg_stat_get_db_numbackends(oid)
        END AS numbackends,
    pg_stat_get_db_xact_commit(oid) AS xact_commit,
    pg_stat_get_db_xact_rollback(oid) AS xact_rollback,
    (pg_stat_get_db_blocks_fetched(oid) - pg_stat_get_db_blocks_hit(oid)) AS blks_read,
    pg_stat_get_db_blocks_hit(oid) AS blks_hit,
    pg_stat_get_db_tuples_returned(oid) AS tup_returned,
    pg_stat_get_db_tuples_fetched(oid) AS tup_fetched,
    pg_stat_get_db_tuples_inserted(oid) AS tup_inserted,
    pg_stat_get_db_tuples_updated(oid) AS tup_updated,
    pg_stat_get_db_tuples_deleted(oid) AS tup_deleted,
    pg_stat_get_db_conflict_all(oid) AS conflicts,
    pg_stat_get_db_temp_files(oid) AS temp_files,
    pg_stat_get_db_temp_bytes(oid) AS temp_bytes,
    pg_stat_get_db_deadlocks(oid) AS deadlocks,
    pg_stat_get_db_checksum_failures(oid) AS checksum_failures,
    pg_stat_get_db_checksum_last_failure(oid) AS checksum_last_failure,
    pg_stat_get_db_blk_read_time(oid) AS blk_read_time,
    pg_stat_get_db_blk_write_time(oid) AS blk_write_time,
    pg_stat_get_db_session_time(oid) AS session_time,
    pg_stat_get_db_active_time(oid) AS active_time,
    pg_stat_get_db_idle_in_transaction_time(oid) AS idle_in_transaction_time,
    pg_stat_get_db_sessions(oid) AS sessions,
    pg_stat_get_db_sessions_abandoned(oid) AS sessions_abandoned,
    pg_stat_get_db_sessions_fatal(oid) AS sessions_fatal,
    pg_stat_get_db_sessions_killed(oid) AS sessions_killed,
    pg_stat_get_db_stat_reset_time(oid) AS stats_reset
   FROM ( SELECT 0 AS oid,
            NULL::name AS datname
        UNION ALL
         SELECT pg_database.oid,
            pg_database.datname
           FROM pg_database) d]]></view_script>
		</view>
		<view name="pg_stat_database_conflicts" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT oid AS datid,
    datname,
    pg_stat_get_db_conflict_tablespace(oid) AS confl_tablespace,
    pg_stat_get_db_conflict_lock(oid) AS confl_lock,
    pg_stat_get_db_conflict_snapshot(oid) AS confl_snapshot,
    pg_stat_get_db_conflict_bufferpin(oid) AS confl_bufferpin,
    pg_stat_get_db_conflict_startup_deadlock(oid) AS confl_deadlock,
    pg_stat_get_db_conflict_logicalslot(oid) AS confl_active_logicalslot
   FROM pg_database d]]></view_script>
		</view>
		<view name="pg_stat_gssapi" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pid,
    gss_auth AS gss_authenticated,
    gss_princ AS principal,
    gss_enc AS encrypted,
    gss_delegation AS credentials_delegated
   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc, gss_delegation, leader_pid, query_id)
  WHERE (client_port IS NOT NULL)]]></view_script>
		</view>
		<view name="pg_stat_io" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT backend_type,
    object,
    context,
    reads,
    read_time,
    writes,
    write_time,
    writebacks,
    writeback_time,
    extends,
    extend_time,
    op_bytes,
    hits,
    evictions,
    reuses,
    fsyncs,
    fsync_time,
    stats_reset
   FROM pg_stat_get_io() b(backend_type, object, context, reads, read_time, writes, write_time, writebacks, writeback_time, extends, extend_time, op_bytes, hits, evictions, reuses, fsyncs, fsync_time, stats_reset)]]></view_script>
		</view>
		<view name="pg_stat_progress_analyze" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.pid,
    s.datid,
    d.datname,
    s.relid,
        CASE s.param1
            WHEN 0 THEN 'initializing'::text
            WHEN 1 THEN 'acquiring sample rows'::text
            WHEN 2 THEN 'acquiring inherited sample rows'::text
            WHEN 3 THEN 'computing statistics'::text
            WHEN 4 THEN 'computing extended statistics'::text
            WHEN 5 THEN 'finalizing analyze'::text
            ELSE NULL::text
        END AS phase,
    s.param2 AS sample_blks_total,
    s.param3 AS sample_blks_scanned,
    s.param4 AS ext_stats_total,
    s.param5 AS ext_stats_computed,
    s.param6 AS child_tables_total,
    s.param7 AS child_tables_done,
    (s.param8)::oid AS current_child_table_relid
   FROM (pg_stat_get_progress_info('ANALYZE'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)
     LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_progress_basebackup" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pid,
        CASE param1
            WHEN 0 THEN 'initializing'::text
            WHEN 1 THEN 'waiting for checkpoint to finish'::text
            WHEN 2 THEN 'estimating backup size'::text
            WHEN 3 THEN 'streaming database files'::text
            WHEN 4 THEN 'waiting for wal archiving to finish'::text
            WHEN 5 THEN 'transferring wal files'::text
            ELSE NULL::text
        END AS phase,
        CASE param2
            WHEN '-1'::integer THEN NULL::bigint
            ELSE param2
        END AS backup_total,
    param3 AS backup_streamed,
    param4 AS tablespaces_total,
    param5 AS tablespaces_streamed
   FROM pg_stat_get_progress_info('BASEBACKUP'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)]]></view_script>
		</view>
		<view name="pg_stat_progress_cluster" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.pid,
    s.datid,
    d.datname,
    s.relid,
        CASE s.param1
            WHEN 1 THEN 'CLUSTER'::text
            WHEN 2 THEN 'VACUUM FULL'::text
            ELSE NULL::text
        END AS command,
        CASE s.param2
            WHEN 0 THEN 'initializing'::text
            WHEN 1 THEN 'seq scanning heap'::text
            WHEN 2 THEN 'index scanning heap'::text
            WHEN 3 THEN 'sorting tuples'::text
            WHEN 4 THEN 'writing new heap'::text
            WHEN 5 THEN 'swapping relation files'::text
            WHEN 6 THEN 'rebuilding index'::text
            WHEN 7 THEN 'performing final cleanup'::text
            ELSE NULL::text
        END AS phase,
    (s.param3)::oid AS cluster_index_relid,
    s.param4 AS heap_tuples_scanned,
    s.param5 AS heap_tuples_written,
    s.param6 AS heap_blks_total,
    s.param7 AS heap_blks_scanned,
    s.param8 AS index_rebuild_count
   FROM (pg_stat_get_progress_info('CLUSTER'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)
     LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_progress_copy" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.pid,
    s.datid,
    d.datname,
    s.relid,
        CASE s.param5
            WHEN 1 THEN 'COPY FROM'::text
            WHEN 2 THEN 'COPY TO'::text
            ELSE NULL::text
        END AS command,
        CASE s.param6
            WHEN 1 THEN 'FILE'::text
            WHEN 2 THEN 'PROGRAM'::text
            WHEN 3 THEN 'PIPE'::text
            WHEN 4 THEN 'CALLBACK'::text
            ELSE NULL::text
        END AS type,
    s.param1 AS bytes_processed,
    s.param2 AS bytes_total,
    s.param3 AS tuples_processed,
    s.param4 AS tuples_excluded,
    s.param7 AS tuples_skipped
   FROM (pg_stat_get_progress_info('COPY'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)
     LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_progress_create_index" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.pid,
    s.datid,
    d.datname,
    s.relid,
    (s.param7)::oid AS index_relid,
        CASE s.param1
            WHEN 1 THEN 'CREATE INDEX'::text
            WHEN 2 THEN 'CREATE INDEX CONCURRENTLY'::text
            WHEN 3 THEN 'REINDEX'::text
            WHEN 4 THEN 'REINDEX CONCURRENTLY'::text
            ELSE NULL::text
        END AS command,
        CASE s.param10
            WHEN 0 THEN 'initializing'::text
            WHEN 1 THEN 'waiting for writers before build'::text
            WHEN 2 THEN ('building index'::text || COALESCE((': '::text || pg_indexam_progress_phasename((s.param9)::oid, s.param11)), ''::text))
            WHEN 3 THEN 'waiting for writers before validation'::text
            WHEN 4 THEN 'index validation: scanning index'::text
            WHEN 5 THEN 'index validation: sorting tuples'::text
            WHEN 6 THEN 'index validation: scanning table'::text
            WHEN 7 THEN 'waiting for old snapshots'::text
            WHEN 8 THEN 'waiting for readers before marking dead'::text
            WHEN 9 THEN 'waiting for readers before dropping'::text
            ELSE NULL::text
        END AS phase,
    s.param4 AS lockers_total,
    s.param5 AS lockers_done,
    s.param6 AS current_locker_pid,
    s.param16 AS blocks_total,
    s.param17 AS blocks_done,
    s.param12 AS tuples_total,
    s.param13 AS tuples_done,
    s.param14 AS partitions_total,
    s.param15 AS partitions_done
   FROM (pg_stat_get_progress_info('CREATE INDEX'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)
     LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_progress_vacuum" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.pid,
    s.datid,
    d.datname,
    s.relid,
        CASE s.param1
            WHEN 0 THEN 'initializing'::text
            WHEN 1 THEN 'scanning heap'::text
            WHEN 2 THEN 'vacuuming indexes'::text
            WHEN 3 THEN 'vacuuming heap'::text
            WHEN 4 THEN 'cleaning up indexes'::text
            WHEN 5 THEN 'truncating heap'::text
            WHEN 6 THEN 'performing final cleanup'::text
            ELSE NULL::text
        END AS phase,
    s.param2 AS heap_blks_total,
    s.param3 AS heap_blks_scanned,
    s.param4 AS heap_blks_vacuumed,
    s.param5 AS index_vacuum_count,
    s.param6 AS max_dead_tuple_bytes,
    s.param7 AS dead_tuple_bytes,
    s.param8 AS num_dead_item_ids,
    s.param9 AS indexes_total,
    s.param10 AS indexes_processed
   FROM (pg_stat_get_progress_info('VACUUM'::text) s(pid, datid, relid, param1, param2, param3, param4, param5, param6, param7, param8, param9, param10, param11, param12, param13, param14, param15, param16, param17, param18, param19, param20)
     LEFT JOIN pg_database d ON ((s.datid = d.oid)))]]></view_script>
		</view>
		<view name="pg_stat_recovery_prefetch" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT stats_reset,
    prefetch,
    hit,
    skip_init,
    skip_new,
    skip_fpw,
    skip_rep,
    wal_distance,
    block_distance,
    io_depth
   FROM pg_stat_get_recovery_prefetch() s(stats_reset, prefetch, hit, skip_init, skip_new, skip_fpw, skip_rep, wal_distance, block_distance, io_depth)]]></view_script>
		</view>
		<view name="pg_stat_replication" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT s.pid,
    s.usesysid,
    u.rolname AS usename,
    s.application_name,
    s.client_addr,
    s.client_hostname,
    s.client_port,
    s.backend_start,
    s.backend_xmin,
    w.state,
    w.sent_lsn,
    w.write_lsn,
    w.flush_lsn,
    w.replay_lsn,
    w.write_lag,
    w.flush_lag,
    w.replay_lag,
    w.sync_priority,
    w.sync_state,
    w.reply_time
   FROM ((pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc, gss_delegation, leader_pid, query_id)
     JOIN pg_stat_get_wal_senders() w(pid, state, sent_lsn, write_lsn, flush_lsn, replay_lsn, write_lag, flush_lag, replay_lag, sync_priority, sync_state, reply_time) ON ((s.pid = w.pid)))
     LEFT JOIN pg_authid u ON ((s.usesysid = u.oid)))]]></view_script>
		</view>
		<view name="pg_stat_replication_slots" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${nameWithSchemaName} AS SELECT ${view},
    s.spill_txns,
    s.spill_count,
    s.spill_bytes,
    s.stream_txns,
    s.stream_count,
    s.stream_bytes,
    s.total_txns,
    s.total_bytes,
    s.stats_reset
   FROM pg_replication_slots r,
    LATERAL pg_stat_get_replication_slot((r.slot_name)::text) s(slot_name, spill_txns, spill_count, spill_bytes, stream_txns, stream_count, stream_bytes, total_txns, total_bytes, stats_reset)
  WHERE (r.datoid IS NOT NULL)
 SELECT s.slot_name,
    s.spill_txns,
    s.spill_count,
    s.spill_bytes,
    s.stream_txns,
    s.stream_count,
    s.stream_bytes,
    s.total_txns,
    s.total_bytes,
    s.stats_reset
   FROM pg_replication_slots r,
    LATERAL pg_stat_get_replication_slot((r.slot_name)::text) s(slot_name, spill_txns, spill_count, spill_bytes, stream_txns, stream_count, stream_bytes, total_txns, total_bytes, stats_reset)
  WHERE (r.datoid IS NOT NULL)]]></view_script>
		</view>
		<view name="pg_stat_slru" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT name,
    blks_zeroed,
    blks_hit,
    blks_read,
    blks_written,
    blks_exists,
    flushes,
    truncates,
    stats_reset
   FROM pg_stat_get_slru() s(name, blks_zeroed, blks_hit, blks_read, blks_written, blks_exists, flushes, truncates, stats_reset)]]></view_script>
		</view>
		<view name="pg_stat_ssl" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pid,
    ssl,
    sslversion AS version,
    sslcipher AS cipher,
    sslbits AS bits,
    ssl_client_dn AS client_dn,
    ssl_client_serial AS client_serial,
    ssl_issuer_dn AS issuer_dn
   FROM pg_stat_get_activity(NULL::integer) s(datid, pid, usesysid, application_name, state, query, wait_event_type, wait_event, xact_start, query_start, backend_start, state_change, client_addr, client_hostname, client_port, backend_xid, backend_xmin, backend_type, ssl, sslversion, sslcipher, sslbits, ssl_client_dn, ssl_client_serial, ssl_issuer_dn, gss_auth, gss_princ, gss_enc, gss_delegation, leader_pid, query_id)
  WHERE (client_port IS NOT NULL)]]></view_script>
		</view>
		<view name="pg_stat_subscription" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT su.oid AS subid,
    su.subname,
    st.worker_type,
    st.pid,
    st.leader_pid,
    st.relid,
    st.received_lsn,
    st.last_msg_send_time,
    st.last_msg_receipt_time,
    st.latest_end_lsn,
    st.latest_end_time
   FROM (pg_subscription su
     LEFT JOIN pg_stat_get_subscription(NULL::oid) st(subid, relid, pid, leader_pid, received_lsn, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time, worker_type) ON ((st.subid = su.oid)))]]></view_script>
		</view>
		<view name="pg_stat_subscription_stats" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT ss.subid,
    s.subname,
    ss.apply_error_count,
    ss.sync_error_count,
    ss.stats_reset
   FROM pg_subscription s,
    LATERAL pg_stat_get_subscription_stats(s.oid) ss(subid, apply_error_count, sync_error_count, stats_reset)]]></view_script>
		</view>
		<view name="pg_stat_sys_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_scan,
    last_idx_scan,
    idx_tup_read,
    idx_tup_fetch
   FROM pg_stat_all_indexes
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))
 SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_scan,
    last_idx_scan,
    idx_tup_read,
    idx_tup_fetch
   FROM pg_stat_all_indexes
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_sys_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    seq_scan,
    last_seq_scan,
    seq_tup_read,
    idx_scan,
    last_idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd,
    n_live_tup,
    n_dead_tup,
    n_mod_since_analyze,
    n_ins_since_vacuum,
    last_vacuum,
    last_autovacuum,
    last_analyze,
    last_autoanalyze,
    vacuum_count,
    autovacuum_count,
    analyze_count,
    autoanalyze_count
   FROM pg_stat_all_tables
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    seq_scan,
    last_seq_scan,
    seq_tup_read,
    idx_scan,
    last_idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd,
    n_live_tup,
    n_dead_tup,
    n_mod_since_analyze,
    n_ins_since_vacuum,
    last_vacuum,
    last_autovacuum,
    last_analyze,
    last_autoanalyze,
    vacuum_count,
    autovacuum_count,
    analyze_count,
    autoanalyze_count
   FROM pg_stat_all_tables
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_user_functions" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT p.oid AS funcid,
    n.nspname AS schemaname,
    p.proname AS funcname,
    pg_stat_get_function_calls(p.oid) AS calls,
    pg_stat_get_function_total_time(p.oid) AS total_time,
    pg_stat_get_function_self_time(p.oid) AS self_time
   FROM (pg_proc p
     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))
  WHERE ((p.prolang <> (12)::oid) AND (pg_stat_get_function_calls(p.oid) IS NOT NULL))]]></view_script>
		</view>
		<view name="pg_stat_user_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_scan,
    last_idx_scan,
    idx_tup_read,
    idx_tup_fetch
   FROM pg_stat_all_indexes
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))
 SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_scan,
    last_idx_scan,
    idx_tup_read,
    idx_tup_fetch
   FROM pg_stat_all_indexes
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_user_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    seq_scan,
    last_seq_scan,
    seq_tup_read,
    idx_scan,
    last_idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd,
    n_live_tup,
    n_dead_tup,
    n_mod_since_analyze,
    n_ins_since_vacuum,
    last_vacuum,
    last_autovacuum,
    last_analyze,
    last_autoanalyze,
    vacuum_count,
    autovacuum_count,
    analyze_count,
    autoanalyze_count
   FROM pg_stat_all_tables
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    seq_scan,
    last_seq_scan,
    seq_tup_read,
    idx_scan,
    last_idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd,
    n_live_tup,
    n_dead_tup,
    n_mod_since_analyze,
    n_ins_since_vacuum,
    last_vacuum,
    last_autovacuum,
    last_analyze,
    last_autoanalyze,
    vacuum_count,
    autovacuum_count,
    analyze_count,
    autoanalyze_count
   FROM pg_stat_all_tables
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_wal" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT wal_records,
    wal_fpi,
    wal_bytes,
    wal_buffers_full,
    wal_write,
    wal_sync,
    wal_write_time,
    wal_sync_time,
    stats_reset
   FROM pg_stat_get_wal() w(wal_records, wal_fpi, wal_bytes, wal_buffers_full, wal_write, wal_sync, wal_write_time, wal_sync_time, stats_reset)]]></view_script>
		</view>
		<view name="pg_stat_wal_receiver" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT pid,
    status,
    receive_start_lsn,
    receive_start_tli,
    written_lsn,
    flushed_lsn,
    received_tli,
    last_msg_send_time,
    last_msg_receipt_time,
    latest_end_lsn,
    latest_end_time,
    slot_name,
    sender_host,
    sender_port,
    conninfo
   FROM pg_stat_get_wal_receiver() s(pid, status, receive_start_lsn, receive_start_tli, written_lsn, flushed_lsn, received_tli, last_msg_send_time, last_msg_receipt_time, latest_end_lsn, latest_end_time, slot_name, sender_host, sender_port, conninfo)
  WHERE (pid IS NOT NULL)]]></view_script>
		</view>
		<view name="pg_stat_xact_all_tables" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT c.oid AS relid,
    n.nspname AS schemaname,
    c.relname,
    pg_stat_get_xact_numscans(c.oid) AS seq_scan,
    pg_stat_get_xact_tuples_returned(c.oid) AS seq_tup_read,
    (sum(pg_stat_get_xact_numscans(i.indexrelid)))::bigint AS idx_scan,
    ((sum(pg_stat_get_xact_tuples_fetched(i.indexrelid)))::bigint + pg_stat_get_xact_tuples_fetched(c.oid)) AS idx_tup_fetch,
    pg_stat_get_xact_tuples_inserted(c.oid) AS n_tup_ins,
    pg_stat_get_xact_tuples_updated(c.oid) AS n_tup_upd,
    pg_stat_get_xact_tuples_deleted(c.oid) AS n_tup_del,
    pg_stat_get_xact_tuples_hot_updated(c.oid) AS n_tup_hot_upd,
    pg_stat_get_xact_tuples_newpage_updated(c.oid) AS n_tup_newpage_upd
   FROM ((pg_class c
     LEFT JOIN pg_index i ON ((c.oid = i.indrelid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char", 'p'::"char"]))
  GROUP BY c.oid, n.nspname, c.relname]]></view_script>
		</view>
		<view name="pg_stat_xact_sys_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    seq_scan,
    seq_tup_read,
    idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd
   FROM pg_stat_xact_all_tables
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    seq_scan,
    seq_tup_read,
    idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd
   FROM pg_stat_xact_all_tables
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stat_xact_user_functions" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT p.oid AS funcid,
    n.nspname AS schemaname,
    p.proname AS funcname,
    pg_stat_get_xact_function_calls(p.oid) AS calls,
    pg_stat_get_xact_function_total_time(p.oid) AS total_time,
    pg_stat_get_xact_function_self_time(p.oid) AS self_time
   FROM (pg_proc p
     LEFT JOIN pg_namespace n ON ((n.oid = p.pronamespace)))
  WHERE ((p.prolang <> (12)::oid) AND (pg_stat_get_xact_function_calls(p.oid) IS NOT NULL))]]></view_script>
		</view>
		<view name="pg_stat_xact_user_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    seq_scan,
    seq_tup_read,
    idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd
   FROM pg_stat_xact_all_tables
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    seq_scan,
    seq_tup_read,
    idx_scan,
    idx_tup_fetch,
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    n_tup_hot_upd,
    n_tup_newpage_upd
   FROM pg_stat_xact_all_tables
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_all_indexes" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT c.oid AS relid,
    i.oid AS indexrelid,
    n.nspname AS schemaname,
    c.relname,
    i.relname AS indexrelname,
    (pg_stat_get_blocks_fetched(i.oid) - pg_stat_get_blocks_hit(i.oid)) AS idx_blks_read,
    pg_stat_get_blocks_hit(i.oid) AS idx_blks_hit
   FROM (((pg_class c
     JOIN pg_index x ON ((c.oid = x.indrelid)))
     JOIN pg_class i ON ((i.oid = x.indexrelid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))]]></view_script>
		</view>
		<view name="pg_statio_all_sequences" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT c.oid AS relid,
    n.nspname AS schemaname,
    c.relname,
    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS blks_read,
    pg_stat_get_blocks_hit(c.oid) AS blks_hit
   FROM (pg_class c
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (c.relkind = 'S'::"char")]]></view_script>
		</view>
		<view name="pg_statio_all_tables" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT c.oid AS relid,
    n.nspname AS schemaname,
    c.relname,
    (pg_stat_get_blocks_fetched(c.oid) - pg_stat_get_blocks_hit(c.oid)) AS heap_blks_read,
    pg_stat_get_blocks_hit(c.oid) AS heap_blks_hit,
    i.idx_blks_read,
    i.idx_blks_hit,
    (pg_stat_get_blocks_fetched(t.oid) - pg_stat_get_blocks_hit(t.oid)) AS toast_blks_read,
    pg_stat_get_blocks_hit(t.oid) AS toast_blks_hit,
    x.idx_blks_read AS tidx_blks_read,
    x.idx_blks_hit AS tidx_blks_hit
   FROM ((((pg_class c
     LEFT JOIN pg_class t ON ((c.reltoastrelid = t.oid)))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
     LEFT JOIN LATERAL ( SELECT (sum((pg_stat_get_blocks_fetched(pg_index.indexrelid) - pg_stat_get_blocks_hit(pg_index.indexrelid))))::bigint AS idx_blks_read,
            (sum(pg_stat_get_blocks_hit(pg_index.indexrelid)))::bigint AS idx_blks_hit
           FROM pg_index
          WHERE (pg_index.indrelid = c.oid)) i ON (true))
     LEFT JOIN LATERAL ( SELECT (sum((pg_stat_get_blocks_fetched(pg_index.indexrelid) - pg_stat_get_blocks_hit(pg_index.indexrelid))))::bigint AS idx_blks_read,
            (sum(pg_stat_get_blocks_hit(pg_index.indexrelid)))::bigint AS idx_blks_hit
           FROM pg_index
          WHERE (pg_index.indrelid = t.oid)) x ON (true))
  WHERE (c.relkind = ANY (ARRAY['r'::"char", 't'::"char", 'm'::"char"]))]]></view_script>
		</view>
		<view name="pg_statio_sys_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_blks_read,
    idx_blks_hit
   FROM pg_statio_all_indexes
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))
 SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_blks_read,
    idx_blks_hit
   FROM pg_statio_all_indexes
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_sys_sequences" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    blks_read,
    blks_hit
   FROM pg_statio_all_sequences
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    blks_read,
    blks_hit
   FROM pg_statio_all_sequences
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_sys_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    heap_blks_read,
    heap_blks_hit,
    idx_blks_read,
    idx_blks_hit,
    toast_blks_read,
    toast_blks_hit,
    tidx_blks_read,
    tidx_blks_hit
   FROM pg_statio_all_tables
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    heap_blks_read,
    heap_blks_hit,
    idx_blks_read,
    idx_blks_hit,
    toast_blks_read,
    toast_blks_hit,
    tidx_blks_read,
    tidx_blks_hit
   FROM pg_statio_all_tables
  WHERE ((schemaname = ANY (ARRAY['pg_catalog'::name, 'information_schema'::name])) OR (schemaname ~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_user_indexes" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_blks_read,
    idx_blks_hit
   FROM pg_statio_all_indexes
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))
 SELECT relid,
    indexrelid,
    schemaname,
    relname,
    indexrelname,
    idx_blks_read,
    idx_blks_hit
   FROM pg_statio_all_indexes
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_user_sequences" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    blks_read,
    blks_hit
   FROM pg_statio_all_sequences
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    blks_read,
    blks_hit
   FROM pg_statio_all_sequences
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_statio_user_tables" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT relid,
    schemaname,
    relname,
    heap_blks_read,
    heap_blks_hit,
    idx_blks_read,
    idx_blks_hit,
    toast_blks_read,
    toast_blks_hit,
    tidx_blks_read,
    tidx_blks_hit
   FROM pg_statio_all_tables
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))
 SELECT relid,
    schemaname,
    relname,
    heap_blks_read,
    heap_blks_hit,
    idx_blks_read,
    idx_blks_hit,
    toast_blks_read,
    toast_blks_hit,
    tidx_blks_read,
    tidx_blks_hit
   FROM pg_statio_all_tables
  WHERE ((schemaname <> ALL (ARRAY['pg_catalog'::name, 'information_schema'::name])) AND (schemaname !~ '^pg_toast'::text))]]></view_script>
		</view>
		<view name="pg_stats" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS tablename,
    a.attname,
    s.stainherit AS inherited,
    s.stanullfrac AS null_frac,
    s.stawidth AS avg_width,
    s.stadistinct AS n_distinct,
        CASE
            WHEN (s.stakind1 = 1) THEN s.stavalues1
            WHEN (s.stakind2 = 1) THEN s.stavalues2
            WHEN (s.stakind3 = 1) THEN s.stavalues3
            WHEN (s.stakind4 = 1) THEN s.stavalues4
            WHEN (s.stakind5 = 1) THEN s.stavalues5
            ELSE NULL::anyarray
        END AS most_common_vals,
        CASE
            WHEN (s.stakind1 = 1) THEN s.stanumbers1
            WHEN (s.stakind2 = 1) THEN s.stanumbers2
            WHEN (s.stakind3 = 1) THEN s.stanumbers3
            WHEN (s.stakind4 = 1) THEN s.stanumbers4
            WHEN (s.stakind5 = 1) THEN s.stanumbers5
            ELSE NULL::real[]
        END AS most_common_freqs,
        CASE
            WHEN (s.stakind1 = 2) THEN s.stavalues1
            WHEN (s.stakind2 = 2) THEN s.stavalues2
            WHEN (s.stakind3 = 2) THEN s.stavalues3
            WHEN (s.stakind4 = 2) THEN s.stavalues4
            WHEN (s.stakind5 = 2) THEN s.stavalues5
            ELSE NULL::anyarray
        END AS histogram_bounds,
        CASE
            WHEN (s.stakind1 = 3) THEN s.stanumbers1[1]
            WHEN (s.stakind2 = 3) THEN s.stanumbers2[1]
            WHEN (s.stakind3 = 3) THEN s.stanumbers3[1]
            WHEN (s.stakind4 = 3) THEN s.stanumbers4[1]
            WHEN (s.stakind5 = 3) THEN s.stanumbers5[1]
            ELSE NULL::real
        END AS correlation,
        CASE
            WHEN (s.stakind1 = 4) THEN s.stavalues1
            WHEN (s.stakind2 = 4) THEN s.stavalues2
            WHEN (s.stakind3 = 4) THEN s.stavalues3
            WHEN (s.stakind4 = 4) THEN s.stavalues4
            WHEN (s.stakind5 = 4) THEN s.stavalues5
            ELSE NULL::anyarray
        END AS most_common_elems,
        CASE
            WHEN (s.stakind1 = 4) THEN s.stanumbers1
            WHEN (s.stakind2 = 4) THEN s.stanumbers2
            WHEN (s.stakind3 = 4) THEN s.stanumbers3
            WHEN (s.stakind4 = 4) THEN s.stanumbers4
            WHEN (s.stakind5 = 4) THEN s.stanumbers5
            ELSE NULL::real[]
        END AS most_common_elem_freqs,
        CASE
            WHEN (s.stakind1 = 5) THEN s.stanumbers1
            WHEN (s.stakind2 = 5) THEN s.stanumbers2
            WHEN (s.stakind3 = 5) THEN s.stanumbers3
            WHEN (s.stakind4 = 5) THEN s.stanumbers4
            WHEN (s.stakind5 = 5) THEN s.stanumbers5
            ELSE NULL::real[]
        END AS elem_count_histogram,
        CASE
            WHEN (s.stakind1 = 6) THEN s.stavalues1
            WHEN (s.stakind2 = 6) THEN s.stavalues2
            WHEN (s.stakind3 = 6) THEN s.stavalues3
            WHEN (s.stakind4 = 6) THEN s.stavalues4
            WHEN (s.stakind5 = 6) THEN s.stavalues5
            ELSE NULL::anyarray
        END AS range_length_histogram,
        CASE
            WHEN (s.stakind1 = 6) THEN s.stanumbers1[1]
            WHEN (s.stakind2 = 6) THEN s.stanumbers2[1]
            WHEN (s.stakind3 = 6) THEN s.stanumbers3[1]
            WHEN (s.stakind4 = 6) THEN s.stanumbers4[1]
            WHEN (s.stakind5 = 6) THEN s.stanumbers5[1]
            ELSE NULL::real
        END AS range_empty_frac,
        CASE
            WHEN (s.stakind1 = 7) THEN s.stavalues1
            WHEN (s.stakind2 = 7) THEN s.stavalues2
            WHEN (s.stakind3 = 7) THEN s.stavalues3
            WHEN (s.stakind4 = 7) THEN s.stavalues4
            WHEN (s.stakind5 = 7) THEN s.stavalues5
            ELSE NULL::anyarray
        END AS range_bounds_histogram
   FROM (((pg_statistic s
     JOIN pg_class c ON ((c.oid = s.starelid)))
     JOIN pg_attribute a ON (((c.oid = a.attrelid) AND (a.attnum = s.staattnum))))
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE ((NOT a.attisdropped) AND has_column_privilege(c.oid, a.attnum, 'select'::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))))]]></view_script>
		</view>
		<view name="pg_stats_ext" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT cn.nspname AS schemaname,
    c.relname AS tablename,
    sn.nspname AS statistics_schemaname,
    s.stxname AS statistics_name,
    pg_get_userbyid(s.stxowner) AS statistics_owner,
    ( SELECT array_agg(a.attname ORDER BY a.attnum) AS array_agg
           FROM (unnest(s.stxkeys) k(k)
             JOIN pg_attribute a ON (((a.attrelid = s.stxrelid) AND (a.attnum = k.k))))) AS attnames,
    pg_get_statisticsobjdef_expressions(s.oid) AS exprs,
    s.stxkind AS kinds,
    sd.stxdinherit AS inherited,
    sd.stxdndistinct AS n_distinct,
    sd.stxddependencies AS dependencies,
    m.most_common_vals,
    m.most_common_val_nulls,
    m.most_common_freqs,
    m.most_common_base_freqs
   FROM (((((pg_statistic_ext s
     JOIN pg_class c ON ((c.oid = s.stxrelid)))
     JOIN pg_statistic_ext_data sd ON ((s.oid = sd.stxoid)))
     LEFT JOIN pg_namespace cn ON ((cn.oid = c.relnamespace)))
     LEFT JOIN pg_namespace sn ON ((sn.oid = s.stxnamespace)))
     LEFT JOIN LATERAL ( SELECT array_agg(pg_mcv_list_items."values") AS most_common_vals,
            array_agg(pg_mcv_list_items.nulls) AS most_common_val_nulls,
            array_agg(pg_mcv_list_items.frequency) AS most_common_freqs,
            array_agg(pg_mcv_list_items.base_frequency) AS most_common_base_freqs
           FROM pg_mcv_list_items(sd.stxdmcv) pg_mcv_list_items(index, "values", nulls, frequency, base_frequency)) m ON ((sd.stxdmcv IS NOT NULL)))
  WHERE (pg_has_role(c.relowner, 'USAGE'::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))))]]></view_script>
		</view>
		<view name="pg_stats_ext_exprs" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT cn.nspname AS schemaname,
    c.relname AS tablename,
    sn.nspname AS statistics_schemaname,
    s.stxname AS statistics_name,
    pg_get_userbyid(s.stxowner) AS statistics_owner,
    stat.expr,
    sd.stxdinherit AS inherited,
    (stat.a).stanullfrac AS null_frac,
    (stat.a).stawidth AS avg_width,
    (stat.a).stadistinct AS n_distinct,
        CASE
            WHEN ((stat.a).stakind1 = 1) THEN (stat.a).stavalues1
            WHEN ((stat.a).stakind2 = 1) THEN (stat.a).stavalues2
            WHEN ((stat.a).stakind3 = 1) THEN (stat.a).stavalues3
            WHEN ((stat.a).stakind4 = 1) THEN (stat.a).stavalues4
            WHEN ((stat.a).stakind5 = 1) THEN (stat.a).stavalues5
            ELSE NULL::anyarray
        END AS most_common_vals,
        CASE
            WHEN ((stat.a).stakind1 = 1) THEN (stat.a).stanumbers1
            WHEN ((stat.a).stakind2 = 1) THEN (stat.a).stanumbers2
            WHEN ((stat.a).stakind3 = 1) THEN (stat.a).stanumbers3
            WHEN ((stat.a).stakind4 = 1) THEN (stat.a).stanumbers4
            WHEN ((stat.a).stakind5 = 1) THEN (stat.a).stanumbers5
            ELSE NULL::real[]
        END AS most_common_freqs,
        CASE
            WHEN ((stat.a).stakind1 = 2) THEN (stat.a).stavalues1
            WHEN ((stat.a).stakind2 = 2) THEN (stat.a).stavalues2
            WHEN ((stat.a).stakind3 = 2) THEN (stat.a).stavalues3
            WHEN ((stat.a).stakind4 = 2) THEN (stat.a).stavalues4
            WHEN ((stat.a).stakind5 = 2) THEN (stat.a).stavalues5
            ELSE NULL::anyarray
        END AS histogram_bounds,
        CASE
            WHEN ((stat.a).stakind1 = 3) THEN (stat.a).stanumbers1[1]
            WHEN ((stat.a).stakind2 = 3) THEN (stat.a).stanumbers2[1]
            WHEN ((stat.a).stakind3 = 3) THEN (stat.a).stanumbers3[1]
            WHEN ((stat.a).stakind4 = 3) THEN (stat.a).stanumbers4[1]
            WHEN ((stat.a).stakind5 = 3) THEN (stat.a).stanumbers5[1]
            ELSE NULL::real
        END AS correlation,
        CASE
            WHEN ((stat.a).stakind1 = 4) THEN (stat.a).stavalues1
            WHEN ((stat.a).stakind2 = 4) THEN (stat.a).stavalues2
            WHEN ((stat.a).stakind3 = 4) THEN (stat.a).stavalues3
            WHEN ((stat.a).stakind4 = 4) THEN (stat.a).stavalues4
            WHEN ((stat.a).stakind5 = 4) THEN (stat.a).stavalues5
            ELSE NULL::anyarray
        END AS most_common_elems,
        CASE
            WHEN ((stat.a).stakind1 = 4) THEN (stat.a).stanumbers1
            WHEN ((stat.a).stakind2 = 4) THEN (stat.a).stanumbers2
            WHEN ((stat.a).stakind3 = 4) THEN (stat.a).stanumbers3
            WHEN ((stat.a).stakind4 = 4) THEN (stat.a).stanumbers4
            WHEN ((stat.a).stakind5 = 4) THEN (stat.a).stanumbers5
            ELSE NULL::real[]
        END AS most_common_elem_freqs,
        CASE
            WHEN ((stat.a).stakind1 = 5) THEN (stat.a).stanumbers1
            WHEN ((stat.a).stakind2 = 5) THEN (stat.a).stanumbers2
            WHEN ((stat.a).stakind3 = 5) THEN (stat.a).stanumbers3
            WHEN ((stat.a).stakind4 = 5) THEN (stat.a).stanumbers4
            WHEN ((stat.a).stakind5 = 5) THEN (stat.a).stanumbers5
            ELSE NULL::real[]
        END AS elem_count_histogram
   FROM (((((pg_statistic_ext s
     JOIN pg_class c ON ((c.oid = s.stxrelid)))
     LEFT JOIN pg_statistic_ext_data sd ON ((s.oid = sd.stxoid)))
     LEFT JOIN pg_namespace cn ON ((cn.oid = c.relnamespace)))
     LEFT JOIN pg_namespace sn ON ((sn.oid = s.stxnamespace)))
     JOIN LATERAL ( SELECT unnest(pg_get_statisticsobjdef_expressions(s.oid)) AS expr,
            unnest(sd.stxdexpr) AS a) stat ON ((stat.expr IS NOT NULL)))
  WHERE (pg_has_role(c.relowner, 'USAGE'::text) AND ((c.relrowsecurity = false) OR (NOT row_security_active(c.oid))))]]></view_script>
		</view>
		<view name="pg_tables" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS tablename,
    pg_get_userbyid(c.relowner) AS tableowner,
    t.spcname AS tablespace,
    c.relhasindex AS hasindexes,
    c.relhasrules AS hasrules,
    c.relhastriggers AS hastriggers,
    c.relrowsecurity AS rowsecurity
   FROM ((pg_class c
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
     LEFT JOIN pg_tablespace t ON ((t.oid = c.reltablespace)))
  WHERE (c.relkind = ANY (ARRAY['r'::"char", 'p'::"char"]))]]></view_script>
		</view>
		<view name="pg_timezone_abbrevs" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT abbrev,
    utc_offset,
    is_dst
   FROM pg_timezone_abbrevs() pg_timezone_abbrevs(abbrev, utc_offset, is_dst)]]></view_script>
		</view>
		<view name="pg_timezone_names" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT name,
    abbrev,
    utc_offset,
    is_dst
   FROM pg_timezone_names() pg_timezone_names(name, abbrev, utc_offset, is_dst)]]></view_script>
		</view>
		<view name="pg_user" >
			<view_script><![CDATA[CREATE OR REPLACE VIEW ${view} AS SELECT usename,
    usesysid,
    usecreatedb,
    usesuper,
    userepl,
    usebypassrls,
    '********'::text AS passwd,
    valuntil,
    useconfig
   FROM pg_shadow
 SELECT usename,
    usesysid,
    usecreatedb,
    usesuper,
    userepl,
    usebypassrls,
    '********'::text AS passwd,
    valuntil,
    useconfig
   FROM pg_shadow]]></view_script>
		</view>
		<view name="pg_user_mappings" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT u.oid AS umid,
    s.oid AS srvid,
    s.srvname,
    u.umuser,
        CASE
            WHEN (u.umuser = (0)::oid) THEN 'public'::name
            ELSE a.rolname
        END AS usename,
        CASE
            WHEN (((u.umuser <> (0)::oid) AND (a.rolname = CURRENT_USER) AND (pg_has_role(s.srvowner, 'USAGE'::text) OR has_server_privilege(s.oid, 'USAGE'::text))) OR ((u.umuser = (0)::oid) AND pg_has_role(s.srvowner, 'USAGE'::text)) OR ( SELECT pg_authid.rolsuper
               FROM pg_authid
              WHERE (pg_authid.rolname = CURRENT_USER))) THEN u.umoptions
            ELSE NULL::text[]
        END AS umoptions
   FROM ((pg_user_mapping u
     JOIN pg_foreign_server s ON ((u.umserver = s.oid)))
     LEFT JOIN pg_authid a ON ((a.oid = u.umuser)))]]></view_script>
		</view>
		<view name="pg_views" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT n.nspname AS schemaname,
    c.relname AS viewname,
    pg_get_userbyid(c.relowner) AS viewowner,
    pg_get_viewdef(c.oid) AS definition
   FROM (pg_class c
     LEFT JOIN pg_namespace n ON ((n.oid = c.relnamespace)))
  WHERE (c.relkind = 'v'::"char")]]></view_script>
		</view>
		<view name="pg_wait_events" >
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS SELECT type,
    name,
    description
   FROM pg_get_wait_events() pg_get_wait_events(type, name, description)]]></view_script>
		</view>
		<function name="RI_FKey_cascade_del" id="9211b0b1-5da4-45a6-8d99-3f8485c1e155" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_cascade_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_cascade_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE CASCADE]]></comment>
		</function>
		<function name="RI_FKey_cascade_upd" id="e5559a83-8e5b-4b6c-a7d1-46c458c89745" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_cascade_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_cascade_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE CASCADE]]></comment>
		</function>
		<function name="RI_FKey_check_ins" id="6c366fe6-32d4-47d9-8d4b-319790fb3e4b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_check_ins"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_check_ins$function$
;]]></string>
			<comment><![CDATA[referential integrity FOREIGN KEY ... REFERENCES]]></comment>
		</function>
		<function name="RI_FKey_check_upd" id="c2b80b18-01e7-4349-8014-de1e092c846f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_check_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_check_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity FOREIGN KEY ... REFERENCES]]></comment>
		</function>
		<function name="RI_FKey_noaction_del" id="d2fdd322-a2a3-4775-a83c-45dea6a5b0d0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_noaction_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_noaction_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE NO ACTION]]></comment>
		</function>
		<function name="RI_FKey_noaction_upd" id="7e94c5c5-e6f3-41a3-868b-61be284ecabe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_noaction_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_noaction_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE NO ACTION]]></comment>
		</function>
		<function name="RI_FKey_restrict_del" id="4bc998f3-6754-4320-98ec-31ba8b174ebe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_restrict_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_restrict_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE RESTRICT]]></comment>
		</function>
		<function name="RI_FKey_restrict_upd" id="625433c6-b905-48af-a0cd-806ca2b72ed1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_restrict_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_restrict_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE RESTRICT]]></comment>
		</function>
		<function name="RI_FKey_setdefault_del" id="df81bc07-7b42-4e4f-be3e-e86a72a79cb8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setdefault_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setdefault_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE SET DEFAULT]]></comment>
		</function>
		<function name="RI_FKey_setdefault_upd" id="a1b1ee27-98bb-4598-9f0a-7d00e511c96b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setdefault_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setdefault_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE SET DEFAULT]]></comment>
		</function>
		<function name="RI_FKey_setnull_del" id="93ee176d-60b4-4f6f-a988-72b0845ce140" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setnull_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setnull_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE SET NULL]]></comment>
		</function>
		<function name="RI_FKey_setnull_upd" id="339dc5bb-3182-480e-9cab-3fecdc833d52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setnull_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setnull_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE SET NULL]]></comment>
		</function>
		<function name="abbrev" id="951bc739-3cc9-4bc2-9a8d-1dbdeda105ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abbrev(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_abbrev$function$
;]]></string>
			<comment><![CDATA[abbreviated display of inet value]]></comment>
			<input_param jt="-1" type="inet" inOut="1" />
		</function>
		<function name="abbrev" id="efdbbd7a-1387-46fa-b6a9-906b5f334064" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abbrev(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_abbrev$function$
;]]></string>
			<comment><![CDATA[abbreviated display of inet value]]></comment>
		</function>
		<function name="abs" id="5d3af839-ac84-4fb6-bbdc-79eb93945f86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="abs" id="9d65f4cf-5821-4917-8ff7-73c980b8031d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="abs" id="b79b839c-daff-430f-bb5f-d9c1152ef36c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="abs" id="3c9626fa-551c-462d-8d93-0a1a828cef1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="abs" id="f159d52f-6f3b-42a1-9f7f-199176276b5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param jt="-1" type="real" inOut="1" />
		</function>
		<function name="abs" id="2e081fdf-0927-4c51-bcc0-5b65edf5fa27" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
		</function>
		<function name="aclcontains" id="c6f65f7a-3367-4cc7-b421-413472e6960b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclcontains(aclitem[], aclitem)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclcontains$function$
;]]></string>
			<comment><![CDATA[contains]]></comment>
		</function>
		<function name="acldefault" id="ea9f8575-3820-4a0d-9824-e4b468763bc5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acldefault("char", oid)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$acldefault_sql$function$
;]]></string>
			<comment><![CDATA[show hardwired default privileges, primarily for use by the information schema]]></comment>
		</function>
		<function name="aclexplode" id="6b247f90-653e-40c9-94b7-6c767d798d88" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclexplode(acl aclitem[], OUT grantor oid, OUT grantee oid, OUT privilege_type text, OUT is_grantable boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 10
AS $function$aclexplode$function$
;]]></string>
			<comment><![CDATA[convert ACL item array to table, primarily for use by information schema]]></comment>
		</function>
		<function name="aclinsert" id="e615aa88-171c-4fdb-a1f4-ff792297254d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclinsert(aclitem[], aclitem)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclinsert$function$
;]]></string>
			<comment><![CDATA[add/update ACL item]]></comment>
		</function>
		<function name="aclitemeq" id="7f9703a3-8092-47b2-a9fc-17d6b2717f24" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemeq(aclitem, aclitem)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclitem_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="aclitemin" id="0b7203ad-f49c-4b05-ac94-4250feeeb868" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemin(cstring)
 RETURNS aclitem
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$aclitemin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="aclitemout" id="f0055d7f-eaa0-4031-92d2-666ec546a8bc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemout(aclitem)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$aclitemout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="aclremove" id="6a00f686-87d3-40c5-a093-01e7f385b362" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclremove(aclitem[], aclitem)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclremove$function$
;]]></string>
			<comment><![CDATA[remove ACL item]]></comment>
		</function>
		<function name="acos" id="6ff4089d-d4b0-427c-9d35-c11646577734" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acos(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacos$function$
;]]></string>
			<comment><![CDATA[arccosine]]></comment>
		</function>
		<function name="acosd" id="56d1ac12-0e28-4e81-958a-ecd5301f8091" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acosd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacosd$function$
;]]></string>
			<comment><![CDATA[arccosine, degrees]]></comment>
		</function>
		<function name="acosh" id="350f97f3-4341-4dff-904a-575c9010fae9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acosh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacosh$function$
;]]></string>
			<comment><![CDATA[inverse hyperbolic cosine]]></comment>
		</function>
		<function name="age" id="01e99d0d-09e0-40d4-98a6-2fcb6199a227" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$xid_age$function$
;]]></string>
			<comment><![CDATA[age of a transaction ID, in transactions before current transaction]]></comment>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="age" id="a610b77c-cbf0-4c9a-9457-5fdb5f66a383" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$xid_age$function$
;]]></string>
			<comment><![CDATA[age of a transaction ID, in transactions before current transaction]]></comment>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="age" id="b30ec4a8-9c2f-4ed2-bb76-62abf50b24be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$xid_age$function$
;]]></string>
			<comment><![CDATA[age of a transaction ID, in transactions before current transaction]]></comment>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="age" id="f125a2c0-6125-4618-b997-3ece35453320" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$xid_age$function$
;]]></string>
			<comment><![CDATA[age of a transaction ID, in transactions before current transaction]]></comment>
			<input_param jt="-1" type="xid" inOut="1" />
		</function>
		<function name="age" id="eaeb51d5-2352-41e3-a6fd-a775fc4635ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$xid_age$function$
;]]></string>
			<comment><![CDATA[age of a transaction ID, in transactions before current transaction]]></comment>
		</function>
		<function name="amvalidate" id="b62d843c-8128-423b-b2cd-bf67297c1cc4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.amvalidate(oid)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$amvalidate$function$
;]]></string>
			<comment><![CDATA[validate an operator class]]></comment>
		</function>
		<function name="any_in" id="3d262bba-eabb-44c0-b4f9-c374338d4918" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.any_in(cstring)
 RETURNS "any"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$any_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="any_out" id="ea62a3b6-867e-43b7-835f-43fa0034f95a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.any_out("any")
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$any_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="any_value_transfn" id="c7606b88-c4fe-4129-a2e9-0014c4923c56" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.any_value_transfn(anyelement, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$any_value_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="anyarray_in" id="4c27bd22-bf0a-443c-b6e5-8e796ca0a986" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_in(cstring)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyarray_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyarray_out" id="d08b23e6-eb69-4640-aa7b-a4e02366147e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_out(anyarray)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyarray_recv" id="0524f6d4-ef4c-4138-a935-fad4b9778826" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_recv(internal)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyarray_send" id="3a6c4664-9d32-43cc-bdc1-f84705612a8e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_send(anyarray)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatible_in" id="4c7ed98a-dc8d-4882-baf1-75f8c10d584b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatible_in(cstring)
 RETURNS anycompatible
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anycompatible_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatible_out" id="e3c35516-f83f-45a1-888d-cb582ee3489a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatible_out(anycompatible)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anycompatible_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblearray_in" id="5cc1a694-9976-4765-9b72-ab1531c3d654" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblearray_in(cstring)
 RETURNS anycompatiblearray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anycompatiblearray_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblearray_out" id="92d4b527-37de-4103-9728-a1970fcb1ba3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblearray_out(anycompatiblearray)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anycompatiblearray_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblearray_recv" id="e999ead8-ba7a-4377-af9c-0d1da38f2bfb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblearray_recv(internal)
 RETURNS anycompatiblearray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anycompatiblearray_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblearray_send" id="c71d49d4-f8c6-4e7f-96de-f4a83b9a0307" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblearray_send(anycompatiblearray)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anycompatiblearray_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblemultirange_in" id="7a111241-b571-4806-a94d-ff894bb9b518" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblemultirange_in(cstring, oid, integer)
 RETURNS anycompatiblemultirange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anycompatiblemultirange_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblemultirange_out" id="85c09410-272a-4820-ab41-84ed74200a3f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblemultirange_out(anycompatiblemultirange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anycompatiblemultirange_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblenonarray_in" id="dd8dba26-914a-46f1-be2a-b646ce0da688" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblenonarray_in(cstring)
 RETURNS anycompatiblenonarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anycompatiblenonarray_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblenonarray_out" id="9eb58523-ec03-4cf9-848b-9ac87baba82f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblenonarray_out(anycompatiblenonarray)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anycompatiblenonarray_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblerange_in" id="17b68ad5-91f9-42cf-aeee-aa626c8f697d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblerange_in(cstring, oid, integer)
 RETURNS anycompatiblerange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anycompatiblerange_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anycompatiblerange_out" id="b944554a-4286-4666-82a0-8602a146f598" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anycompatiblerange_out(anycompatiblerange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anycompatiblerange_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyelement_in" id="d1cf0f2e-4d17-4c0b-997c-4f1300bc2ee7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyelement_in(cstring)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyelement_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyelement_out" id="e8da6b72-27cd-4205-9013-a34ec6f53718" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyelement_out(anyelement)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyelement_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyenum_in" id="ee7715ed-f063-4f42-9661-211469221aa8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyenum_in(cstring)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyenum_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyenum_out" id="fa10fa8a-8d4e-43e1-a042-0406b27d0376" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyenum_out(anyenum)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyenum_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anymultirange_in" id="35910d3c-7ffb-43c8-a8fa-25cff0905d31" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anymultirange_in(cstring, oid, integer)
 RETURNS anymultirange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anymultirange_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anymultirange_out" id="f99f6493-1b10-49b8-9fe3-157836b36eca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anymultirange_out(anymultirange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anymultirange_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anynonarray_in" id="0bb15b86-c74d-4255-882e-84b720c10a90" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anynonarray_in(cstring)
 RETURNS anynonarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anynonarray_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anynonarray_out" id="0723b937-7f9e-4851-99ba-76ac30fdf6fb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anynonarray_out(anynonarray)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anynonarray_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyrange_in" id="596e9c1c-2ad0-45ba-bf59-9c382f025d1b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyrange_in(cstring, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyrange_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anyrange_out" id="69be8d86-0156-4732-ad04-66eaf5c9bd9c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyrange_out(anyrange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyrange_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="anytextcat" id="d320f966-6dec-4702-907a-7576598bfec6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anytextcat(anynonarray, text)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $1::pg_catalog.text operator(pg_catalog.||) $2$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="area" id="bf88118a-cef7-4dcb-97c1-b4d893e2d06e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_area$function$
;]]></string>
			<comment><![CDATA[area of circle]]></comment>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="area" id="01f0f2c2-f855-4adc-a0dd-814d413a3aeb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_area$function$
;]]></string>
			<comment><![CDATA[area of circle]]></comment>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="area" id="0fe8ecf5-6680-4a52-b8c4-03a54d4ec899" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_area$function$
;]]></string>
			<comment><![CDATA[area of circle]]></comment>
		</function>
		<function name="areajoinsel" id="2d01135f-ee17-4053-aa8c-00745f91e98e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.areajoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$areajoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for area-comparison operators]]></comment>
		</function>
		<function name="areasel" id="4f49af55-76cd-4e0e-8ea2-8862c9690d8d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.areasel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$areasel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for area-comparison operators]]></comment>
		</function>
		<function name="array_agg_array_combine" id="336f0697-7642-4a39-aa1b-6935c32ed775" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_array_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="array_agg_array_deserialize" id="5d251a7b-924a-48e8-9f48-bf36cc6c1d21" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_agg_array_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="array_agg_array_finalfn" id="7c747ae9-56ca-4a8e-80d4-59d1a46d1d2d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_finalfn(internal, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_array_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="array_agg_array_serialize" id="27021462-14b1-41e7-b306-45d5cd0a1bcd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_agg_array_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="array_agg_array_transfn" id="ab8b1e0c-fdbf-4df9-a596-47bdabc1cd8d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_transfn(internal, anyarray)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_array_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="array_agg_combine" id="ce8f54b6-1dae-4e7c-b7d9-2c18071db84b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="array_agg_deserialize" id="52bf9474-3013-4a5a-9613-8ce69d91bab1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_agg_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="array_agg_finalfn" id="80ffdacb-bd91-4612-8d64-f653c4ef9b93" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_finalfn(internal, anynonarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="array_agg_serialize" id="f5eea62a-0c61-4bc6-a6dd-cefbf036b93d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_agg_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="array_agg_transfn" id="fcb21a6d-3b0e-4027-977d-5224cc6c8002" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_transfn(internal, anynonarray)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="array_append" id="5a3fbce4-9069-4aaf-95bd-67301fef599b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_append(anycompatiblearray, anycompatible)
 RETURNS anycompatiblearray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_append$function$
;]]></string>
			<comment><![CDATA[append element onto end of array]]></comment>
		</function>
		<function name="array_cat" id="68dfdeea-677a-47c5-864a-9c4264a709d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_cat(anycompatiblearray, anycompatiblearray)
 RETURNS anycompatiblearray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_cat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="array_dims" id="e031d2a0-bf93-430c-97b7-88d5cf41ec20" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_dims(anyarray)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_dims$function$
;]]></string>
			<comment><![CDATA[array dimensions]]></comment>
		</function>
		<function name="array_eq" id="dadd822f-9566-4bbe-bfb7-9b53fbb636cc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_eq(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="array_fill" id="05b554a3-8587-46c7-acfc-28e4718661f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_fill(anyelement, integer[])
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_fill$function$
;]]></string>
			<comment><![CDATA[array constructor with value]]></comment>
			<input_param jt="-1" type="anyelement" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="array_fill" id="ced58f16-9bd8-4e18-856a-6dcc6fcc96d2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_fill(anyelement, integer[])
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_fill$function$
;]]></string>
			<comment><![CDATA[array constructor with value]]></comment>
		</function>
		<function name="array_ge" id="d253baf9-8715-444e-bd28-35c859d8f643" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ge(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="array_gt" id="219e0acc-28b9-4922-bf2b-e1b7a5b812e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_gt(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="array_in" id="12be7beb-4250-4c00-b318-a4f908ec0fcd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_in(cstring, oid, integer)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="array_larger" id="e3141e1e-30de-4ad1-9781-f404fdf538ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_larger(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="array_le" id="8ac2e0c1-f065-4ce0-ad0e-1de16c8fc385" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_le(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="array_length" id="04acb313-bd64-4e0f-a66f-d4dc0d56a222" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_length(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_length$function$
;]]></string>
			<comment><![CDATA[array length]]></comment>
		</function>
		<function name="array_lower" id="fe28b879-054f-41fe-a60f-09394452289e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_lower(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_lower$function$
;]]></string>
			<comment><![CDATA[array lower dimension]]></comment>
		</function>
		<function name="array_lt" id="29c2d342-97d7-439f-bc2f-75cdc6374ab4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_lt(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="array_ndims" id="adeeeb8c-5cce-4369-8e70-9d302665b939" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ndims(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ndims$function$
;]]></string>
			<comment><![CDATA[number of array dimensions]]></comment>
		</function>
		<function name="array_ne" id="a4c33d1d-443d-4014-baeb-c194d5c95e49" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ne(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="array_out" id="0443df55-54a9-4fba-913b-482fedd59010" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_out(anyarray)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="array_position" id="f7589adf-4a6d-4cdd-997f-c8be8cecd7dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_position(anycompatiblearray, anycompatible)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_position$function$
;]]></string>
			<comment><![CDATA[returns an offset of value in array]]></comment>
			<input_param jt="-1" type="anycompatiblearray" inOut="1" />
			<input_param jt="-1" type="anycompatible" inOut="1" />
		</function>
		<function name="array_position" id="425e4d36-cc7f-4dc7-a451-aa3da5f69b69" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_position(anycompatiblearray, anycompatible)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_position$function$
;]]></string>
			<comment><![CDATA[returns an offset of value in array]]></comment>
		</function>
		<function name="array_positions" id="88f3aaf9-e31b-4fe8-9e96-6ee22f505a46" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_positions(anycompatiblearray, anycompatible)
 RETURNS integer[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_positions$function$
;]]></string>
			<comment><![CDATA[returns an array of offsets of some value in array]]></comment>
		</function>
		<function name="array_prepend" id="31a90af6-bd97-4d1b-a947-cc12726d39b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_prepend(anycompatible, anycompatiblearray)
 RETURNS anycompatiblearray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_prepend$function$
;]]></string>
			<comment><![CDATA[prepend element onto front of array]]></comment>
		</function>
		<function name="array_recv" id="6f1c1f80-bc0a-4339-9e5e-ef18d022b810" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_recv(internal, oid, integer)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="array_remove" id="46f296fe-09a1-4ac0-a6c2-d5c1bc8e2fdf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_remove(anycompatiblearray, anycompatible)
 RETURNS anycompatiblearray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_remove$function$
;]]></string>
			<comment><![CDATA[remove any occurrences of an element from an array]]></comment>
		</function>
		<function name="array_replace" id="e8a0d70c-b344-4f1a-bc14-7178c75bbc3c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_replace(anycompatiblearray, anycompatible, anycompatible)
 RETURNS anycompatiblearray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_replace$function$
;]]></string>
			<comment><![CDATA[replace any occurrences of an element in an array]]></comment>
		</function>
		<function name="array_sample" id="30aa3a3f-905b-44a2-a5a8-fb54b401021c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_sample(anyarray, integer)
 RETURNS anyarray
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$array_sample$function$
;]]></string>
			<comment><![CDATA[take samples from array]]></comment>
		</function>
		<function name="array_send" id="bdda3ebf-3140-4e5b-a286-c10bbca92899" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_send(anyarray)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="array_shuffle" id="38eacca1-4e83-46d6-b18f-387b7b257271" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_shuffle(anyarray)
 RETURNS anyarray
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$array_shuffle$function$
;]]></string>
			<comment><![CDATA[shuffle array]]></comment>
		</function>
		<function name="array_smaller" id="e66f93f5-b96c-4412-9325-e4e6121c86c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_smaller(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="array_subscript_handler" id="bd33df68-b2d9-4420-8571-6a7fd9006c8c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_subscript_handler(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_subscript_handler$function$
;]]></string>
			<comment><![CDATA[standard array subscripting support]]></comment>
		</function>
		<function name="array_to_json" id="049c0e20-f297-4ffc-9101-8dd32830ec32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_json(anyarray)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_json$function$
;]]></string>
			<comment><![CDATA[map array to json]]></comment>
			<input_param jt="-1" type="anyarray" inOut="1" />
		</function>
		<function name="array_to_json" id="b6e7bde5-4cc9-42d8-a36a-6542e5896a94" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_json(anyarray)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_json$function$
;]]></string>
			<comment><![CDATA[map array to json]]></comment>
		</function>
		<function name="array_to_string" id="40ba7478-0464-4435-b061-bb5685132246" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_string(anyarray, text, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$array_to_text_null$function$
;]]></string>
			<comment><![CDATA[concatenate array elements, using delimiter and null string, into text]]></comment>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="array_to_string" id="d05ba095-2382-408e-8006-ee726fc1ebfe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_string(anyarray, text, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$array_to_text_null$function$
;]]></string>
			<comment><![CDATA[concatenate array elements, using delimiter and null string, into text]]></comment>
		</function>
		<function name="array_to_tsvector" id="23babfb4-fda2-46b2-b7ef-c1336b220497" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_tsvector(text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_to_tsvector$function$
;]]></string>
			<comment><![CDATA[build tsvector from array of lexemes]]></comment>
		</function>
		<function name="array_typanalyze" id="5a79e9ab-62f4-4078-9d73-1ab8769fa536" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_typanalyze$function$
;]]></string>
			<comment><![CDATA[array typanalyze]]></comment>
		</function>
		<function name="array_unnest_support" id="f9fe2d0f-7ef6-4f74-a9ee-2a2e284cc887" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_unnest_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_unnest_support$function$
;]]></string>
			<comment><![CDATA[planner support for array_unnest]]></comment>
		</function>
		<function name="array_upper" id="4a808a1c-10e1-45dc-ac25-bdb6f89a4d15" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_upper(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_upper$function$
;]]></string>
			<comment><![CDATA[array upper dimension]]></comment>
		</function>
		<function name="arraycontained" id="3ba6e62e-e7f8-441f-b94d-a6120bb216c4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontained(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arraycontained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="arraycontains" id="fc1d25e3-63eb-4036-85f1-dfe33ce61854" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontains(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arraycontains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="arraycontjoinsel" id="0f4df9f6-ddac-41e4-9db1-da1aeff2d470" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$arraycontjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for array-containment operators]]></comment>
		</function>
		<function name="arraycontsel" id="9d73d430-8009-407e-acdf-1fbd6532733e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$arraycontsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for array-containment operators]]></comment>
		</function>
		<function name="arrayoverlap" id="e911020c-d172-4720-9e02-e04e1fd7b5b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arrayoverlap(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arrayoverlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="ascii" id="b36cc8f5-17de-437d-a10a-efd97fdd9958" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ascii(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ascii$function$
;]]></string>
			<comment><![CDATA[convert first char to int4]]></comment>
		</function>
		<function name="asin" id="550abcdc-d68a-4804-8617-7daca42df2dd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asin(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasin$function$
;]]></string>
			<comment><![CDATA[arcsine]]></comment>
		</function>
		<function name="asind" id="db0678c6-fcb7-4f05-b4f2-94efb0fea55a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asind(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasind$function$
;]]></string>
			<comment><![CDATA[arcsine, degrees]]></comment>
		</function>
		<function name="asinh" id="52a1dca2-21db-428f-850e-bbf25c135de5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asinh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasinh$function$
;]]></string>
			<comment><![CDATA[inverse hyperbolic sine]]></comment>
		</function>
		<function name="atan" id="6b10ff82-ed91-463d-aa3f-f5dcbcc0d74d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan$function$
;]]></string>
			<comment><![CDATA[arctangent]]></comment>
		</function>
		<function name="atan2" id="879d7849-d55b-4fb2-8e26-e59cdc97b068" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan2(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan2$function$
;]]></string>
			<comment><![CDATA[arctangent, two arguments]]></comment>
		</function>
		<function name="atan2d" id="410d8dc4-ada5-476e-9857-8c3acced77ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan2d(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan2d$function$
;]]></string>
			<comment><![CDATA[arctangent, two arguments, degrees]]></comment>
		</function>
		<function name="atand" id="5351576b-8dc4-49d1-9089-ee1a40399833" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atand(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datand$function$
;]]></string>
			<comment><![CDATA[arctangent, degrees]]></comment>
		</function>
		<function name="atanh" id="9ff56503-7fd5-46e2-aed9-fd09ecc63f77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atanh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datanh$function$
;]]></string>
			<comment><![CDATA[inverse hyperbolic tangent]]></comment>
		</function>
		<function name="bernoulli" id="2d952f3d-35dc-4030-882b-681373d0a711" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bernoulli(internal)
 RETURNS tsm_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$tsm_bernoulli_handler$function$
;]]></string>
			<comment><![CDATA[BERNOULLI tablesample method handler]]></comment>
		</function>
		<function name="big5_to_euc_tw" id="434790dd-ea17-4d93-8112-7cb91201e4ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_euc_tw(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$big5_to_euc_tw$function$
;]]></string>
			<comment><![CDATA[internal conversion function for BIG5 to EUC_TW]]></comment>
		</function>
		<function name="big5_to_mic" id="16cebf3d-6366-47c3-af09-208d6eae3772" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$big5_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for BIG5 to MULE_INTERNAL]]></comment>
		</function>
		<function name="big5_to_utf8" id="23301a2a-9523-49bb-a5c9-4ff14dd12aab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_big5', $function$big5_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for BIG5 to UTF8]]></comment>
		</function>
		<function name="binary_upgrade_add_sub_rel_state" id="877ccd01-f2e3-4b0c-8777-cb033e47d1c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_add_sub_rel_state(text, oid, "char", pg_lsn)
 RETURNS void
 LANGUAGE internal
AS $function$binary_upgrade_add_sub_rel_state$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade (relation for pg_subscription_rel)]]></comment>
		</function>
		<function name="binary_upgrade_create_empty_extension" id="c6c28cf8-520f-48e8-80c9-2f3bb1f53d8e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_create_empty_extension(text, text, boolean, text, oid[], text[], text[])
 RETURNS void
 LANGUAGE internal
AS $function$binary_upgrade_create_empty_extension$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_logical_slot_has_caught_up" id="761e63f7-2942-45e5-ada7-e5e30907a154" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_logical_slot_has_caught_up(name)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$binary_upgrade_logical_slot_has_caught_up$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_replorigin_advance" id="ab95f624-94bf-421b-943e-49bf1410aa5f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_replorigin_advance(text, pg_lsn)
 RETURNS void
 LANGUAGE internal
AS $function$binary_upgrade_replorigin_advance$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade (remote_lsn for origin)]]></comment>
		</function>
		<function name="binary_upgrade_set_missing_value" id="62ea6faf-0a13-4bce-bffa-9c5f7efe817c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_missing_value(oid, text, text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$binary_upgrade_set_missing_value$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_array_pg_type_oid" id="9d343620-b2c2-4e1b-a5a5-1268c5c85e0a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_array_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_array_pg_type_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_heap_pg_class_oid" id="98169523-ab74-48dd-8095-f97ce8df1725" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_heap_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_heap_pg_class_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_heap_relfilenode" id="4a8d60a9-53e8-4b3e-ab3c-13ec48104007" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_heap_relfilenode(oid)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$binary_upgrade_set_next_heap_relfilenode$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_index_pg_class_oid" id="88bfe7b8-900f-4c21-ba83-6415da087120" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_index_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_index_pg_class_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_index_relfilenode" id="c18ffd96-1a9c-493d-be89-fbf0cfec7416" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_index_relfilenode(oid)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$binary_upgrade_set_next_index_relfilenode$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_multirange_array_pg_type_oid" id="64fe5891-1d5b-4a2b-a2c5-0f9a1395e58c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_multirange_array_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_multirange_array_pg_type_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_multirange_pg_type_oid" id="9e13f4d5-12d8-4d50-a326-46e5fca4ab3f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_multirange_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_multirange_pg_type_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_pg_authid_oid" id="6d9b969c-c0e8-416e-aeba-5ba3c3a0d1dc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_authid_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_authid_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_pg_enum_oid" id="d27e112e-c84e-4cfc-af66-3967780e1d66" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_enum_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_enum_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_pg_tablespace_oid" id="5e6be18e-2791-4d30-9fb0-c6aaabbbc0d2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_tablespace_oid(oid)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$binary_upgrade_set_next_pg_tablespace_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_pg_type_oid" id="68a57c05-6c11-43c1-bbb2-e8046c9ba087" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_type_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_toast_pg_class_oid" id="c7eb88fd-eb10-401f-aee1-5c239fa7caf6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_toast_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_toast_pg_class_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_next_toast_relfilenode" id="2ee8baa3-abbc-4c3b-a9cd-31bc495f479a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_toast_relfilenode(oid)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$binary_upgrade_set_next_toast_relfilenode$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="binary_upgrade_set_record_init_privs" id="b45f377a-f9fd-4d69-89b6-de7bcaf578d5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_record_init_privs(boolean)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_record_init_privs$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
		</function>
		<function name="bit" id="18dd1f76-7ace-4c02-936e-03de50b1996c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitfromint4$function$
;]]></string>
			<comment><![CDATA[convert int4 to bitstring]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bit" id="47c33bb3-65be-43dd-8118-afde0a36918d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitfromint4$function$
;]]></string>
			<comment><![CDATA[convert int4 to bitstring]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bit" id="88a09f25-99f7-4cbf-ac48-e3b4b376125d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitfromint4$function$
;]]></string>
			<comment><![CDATA[convert int4 to bitstring]]></comment>
		</function>
		<function name="bit_count" id="2a625e97-82b8-429b-b982-316f081bfb52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_count(bit)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_bit_count$function$
;]]></string>
			<comment><![CDATA[number of set bits]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="bit_count" id="e67d67ec-513c-4974-bf5e-5d01398ed494" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_count(bit)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_bit_count$function$
;]]></string>
			<comment><![CDATA[number of set bits]]></comment>
		</function>
		<function name="bit_in" id="cd6b55f7-cfef-4c59-b507-6bb8521e0266" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_in(cstring, oid, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bit_length" id="e8d2557e-6d41-47db-b96d-62afbff4f1f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(bytea)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN (octet_length($1) * 8)
;]]></string>
			<comment><![CDATA[length in bits]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="bit_length" id="6f9f20c7-eaac-4a34-b393-ad9dd9152708" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(bytea)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN (octet_length($1) * 8)
;]]></string>
			<comment><![CDATA[length in bits]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="bit_length" id="647df2f2-77f5-41c0-b416-a1622953f8b9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(bytea)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN (octet_length($1) * 8)
;]]></string>
			<comment><![CDATA[length in bits]]></comment>
		</function>
		<function name="bit_out" id="279c6ec7-35ef-419a-bec0-07c890e9c9ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_out(bit)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bit_recv" id="cd5ae975-851a-41b4-9291-2eb9fcf6c436" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_recv(internal, oid, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bit_send" id="4f3d830b-24ef-4082-8d0b-895611fc514a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_send(bit)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bitand" id="ae19b5d6-db2d-4d1f-836c-9e4fb2804c56" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitand(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
		</function>
		<function name="bitcat" id="5e2633ac-5ce3-4164-8b9e-5d987ee548c0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitcat(bit varying, bit varying)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitcat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="bitcmp" id="edc83d37-49e1-4cc9-a803-08377295c559" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitcmp(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="biteq" id="548d6f10-a5fb-420f-8291-e624c8c329fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.biteq(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$biteq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="bitge" id="7b55d62e-bcbb-4923-a992-27a8957a644b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitge(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="bitgt" id="f893fae3-ad5c-4892-9c2a-2539b5a9f0ed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitgt(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="bitle" id="e5aecc13-fc01-452f-82d5-0ea1852be342" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitle(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="bitlt" id="320bfb00-0705-4b5f-948b-ca0c1dd3e030" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitlt(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="bitne" id="63e66c9f-a1f8-4e03-9091-d962df10327f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitne(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="bitnot" id="9ae61144-ff6c-4fc5-a877-7a92bdf11d25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitnot(bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitnot$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="bitor" id="e2cf815d-6935-4a86-899c-8cbd2b823e4c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitor(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
		</function>
		<function name="bitshiftleft" id="48318d59-4835-4e53-bdb4-d327468aed1f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitshiftleft(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitshiftleft$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="bitshiftright" id="9b845cda-7c43-4489-addf-ec2778a9910a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitshiftright(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitshiftright$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="bittypmodin" id="f50bbcef-1ad1-4e69-8456-cabc8d61909f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bittypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="bittypmodout" id="7ebdd467-b6a6-4928-bdc9-4972c2673222" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bittypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="bitxor" id="c2c236e9-f858-4d0e-884a-6402d1eb85e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitxor(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitxor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="bool" id="c33fe1e8-904f-49cf-b118-6e7b5d71f8de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool(integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4_bool$function$
;]]></string>
			<comment><![CDATA[convert int4 to boolean]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="bool" id="1e26f935-6388-4c0a-b73f-c8b5918300bd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool(integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4_bool$function$
;]]></string>
			<comment><![CDATA[convert int4 to boolean]]></comment>
		</function>
		<function name="bool_accum" id="c3771bef-fba2-433b-826d-9d32b630c399" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_accum(internal, boolean)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bool_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="bool_accum_inv" id="77e7f34b-703f-4156-8733-c256111b7a97" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_accum_inv(internal, boolean)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bool_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="bool_alltrue" id="315d4317-cc4a-4dde-8884-e978ffb8326e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_alltrue(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_alltrue$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="bool_anytrue" id="4b2d733b-dd42-4039-b34c-e6040fcff3fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_anytrue(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_anytrue$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="booland_statefunc" id="72e5ef13-32d5-4020-8ee9-f2f03ccdb87c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.booland_statefunc(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$booland_statefunc$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="booleq" id="83857512-0739-47c5-b2f1-5afb56ec45e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.booleq(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$booleq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="boolge" id="d798a74a-cfc9-4102-9537-c22d24e98453" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolge(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="boolgt" id="f8caede3-0558-4c8f-9554-0f43894ad540" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolgt(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="boolin" id="39c601b0-dfdf-4a08-8287-fdf761412d63" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolin(cstring)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="boolle" id="eb9ec218-4b4a-4161-ae09-72cfc7586ac3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolle(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="boollt" id="9adbfc5f-a4c7-4013-b6e0-87447d7e2878" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boollt(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boollt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="boolne" id="c7f88f8a-118d-4761-a97e-896aa172cf57" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolne(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="boolor_statefunc" id="26b44634-ade3-4bcd-b759-89ba9ab9e6c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolor_statefunc(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolor_statefunc$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="boolout" id="12de2f23-e471-4c93-a0b1-239b11dc0a50" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolout(boolean)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="boolrecv" id="4f1f96b3-e1ad-420b-8252-544b714e345f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolrecv(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="boolsend" id="9667d4e7-1b2e-4494-9a3f-99c11448199a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolsend(boolean)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bound_box" id="ddde00cc-e12c-4e3f-a4ed-3d2bf6a81815" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bound_box(box, box)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boxes_bound_box$function$
;]]></string>
			<comment><![CDATA[bounding box of two boxes]]></comment>
		</function>
		<function name="box" id="bdebab97-eefc-4c21-8dda-c249b58d21f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$points_box$function$
;]]></string>
			<comment><![CDATA[convert points to box]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box" id="7f32ca6a-dbb1-4a0b-b6ef-d669ef974283" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$points_box$function$
;]]></string>
			<comment><![CDATA[convert points to box]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box" id="d8a32a0f-3168-4364-bd42-d528c5387e7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$points_box$function$
;]]></string>
			<comment><![CDATA[convert points to box]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="box" id="b45ba989-5944-4872-a96f-c7d0c6f84284" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$points_box$function$
;]]></string>
			<comment><![CDATA[convert points to box]]></comment>
		</function>
		<function name="box_above" id="b93c03b1-a031-4715-a04e-c113430ffe1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_above(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_above$function$
;]]></string>
			<comment><![CDATA[implementation of |>> operator]]></comment>
		</function>
		<function name="box_above_eq" id="15f3bfa4-7871-4707-98af-27392872f954" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_above_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_above_eq$function$
;]]></string>
			<comment><![CDATA[implementation of >^ operator]]></comment>
		</function>
		<function name="box_add" id="f21e5450-a991-4d9b-9d28-eb573e7d1819" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_add(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="box_below" id="400a63ca-e3cf-4293-8a4e-8eda26324ac6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_below(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_below$function$
;]]></string>
			<comment><![CDATA[implementation of <<| operator]]></comment>
		</function>
		<function name="box_below_eq" id="420f43cd-2b2c-4e89-9906-d6d87f7137c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_below_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_below_eq$function$
;]]></string>
			<comment><![CDATA[implementation of <^ operator]]></comment>
		</function>
		<function name="box_center" id="9d98c7b4-172d-4766-8e39-b32a4f86fdd3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_center(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="box_contain" id="c725864f-6470-44fa-a11b-5b1bf8753192" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contain(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contain$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="box_contain_pt" id="ab611582-40a1-44aa-9c3d-80a895baacb0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contain_pt(box, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contain_pt$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="box_contained" id="3645d2a4-d6b3-4f88-9724-5b0485cd4e93" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contained(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="box_distance" id="9fba6fbc-4540-4cfb-9677-6e7d4b884f34" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_distance(box, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="box_div" id="1d6c453d-6eb1-4b39-ba57-73b57350ea76" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_div(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="box_eq" id="2251ff3b-4788-47aa-bd17-64406a960465" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="box_ge" id="29fe4b1c-99b2-4521-a252-576539e10c52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_ge(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="box_gt" id="d22490ec-8183-4007-bc98-e95891ff226d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_gt(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="box_in" id="8013d14c-ccc0-48a5-b03f-11aa3151c816" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_in(cstring)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="box_intersect" id="6d5c0db1-b26c-48f1-9d64-bfba410dc31c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_intersect(box, box)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="box_le" id="025b607a-80be-4b37-a383-8853dac3ef4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_le(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="box_left" id="497c1d81-6be1-47d2-80d9-430e37e52eb8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_left(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="box_lt" id="faf94812-91e0-4655-add0-f7b2decb1505" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_lt(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="box_mul" id="60fd32a5-8627-42f0-8554-275490eb70c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_mul(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="box_out" id="30522f0a-1561-4dd4-905f-c7481cb036c3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_out(box)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="box_overabove" id="839a883c-63ac-474b-90cc-d4b1a6ceaa69" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overabove(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overabove$function$
;]]></string>
			<comment><![CDATA[implementation of |&> operator]]></comment>
		</function>
		<function name="box_overbelow" id="909e7a28-5994-42c9-8e6b-16a0583803f9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overbelow(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overbelow$function$
;]]></string>
			<comment><![CDATA[implementation of &<| operator]]></comment>
		</function>
		<function name="box_overlap" id="c506a4e7-a18b-4eed-981c-6b238a5f7b7c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overlap(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="box_overleft" id="9f96e878-737f-4430-bf94-bdee438fa25f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overleft(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
		</function>
		<function name="box_overright" id="1a1994c5-d934-406c-b437-7bc127c02c16" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overright(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
		</function>
		<function name="box_recv" id="215f18d2-e304-4629-9975-691c9a2b278f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_recv(internal)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="box_right" id="bad0d257-5dff-4e51-ae6d-24848a41250c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_right(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="box_same" id="3b578d3c-3d06-497c-8a7c-e5bbdef6c38a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_same(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_same$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
		</function>
		<function name="box_send" id="7a7de2aa-6113-45c0-a3b0-332bec11c6eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_send(box)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="box_sub" id="f159165c-1abf-4f74-a02b-542d7ee78a2e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_sub(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_sub$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="bpchar" id="855619f7-532a-494e-9b4f-5053ebc9375f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar(name)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_bpchar$function$
;]]></string>
			<comment><![CDATA[convert name to char(n)]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="bpchar" id="8170b787-a788-48cf-8014-e3c5f77248a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar(name)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_bpchar$function$
;]]></string>
			<comment><![CDATA[convert name to char(n)]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="bpchar" id="fd550339-8ab2-4ed9-87f9-35ba6e072e77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar(name)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_bpchar$function$
;]]></string>
			<comment><![CDATA[convert name to char(n)]]></comment>
		</function>
		<function name="bpchar_larger" id="6f51a6cd-6ae8-43c2-8312-5ad5db14516d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_larger(character, character)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="bpchar_pattern_ge" id="d538c15e-c5bd-4fd1-a50e-6e99a70ad4fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_ge(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_ge$function$
;]]></string>
			<comment><![CDATA[implementation of ~>=~ operator]]></comment>
		</function>
		<function name="bpchar_pattern_gt" id="affdd025-609a-4bf2-86f4-ae0d1de6f5cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_gt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_gt$function$
;]]></string>
			<comment><![CDATA[implementation of ~>~ operator]]></comment>
		</function>
		<function name="bpchar_pattern_le" id="4ee23d94-1aaa-4783-8fc7-855199140a24" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_le(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_le$function$
;]]></string>
			<comment><![CDATA[implementation of ~<=~ operator]]></comment>
		</function>
		<function name="bpchar_pattern_lt" id="637e8d8e-23a3-4b09-9102-a33c07d2e822" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_lt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_pattern_lt$function$
;]]></string>
			<comment><![CDATA[implementation of ~<~ operator]]></comment>
		</function>
		<function name="bpchar_smaller" id="bdbb5fbf-ae1c-4ffe-a92e-583434e5f6d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_smaller(character, character)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchar_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="bpchar_sortsupport" id="8c02b9f3-708d-4238-9760-2f70d7a8412e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="bpcharcmp" id="c092e8c8-66bc-4a6e-9427-96046dc099aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharcmp(character, character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="bpchareq" id="8a30a10b-0300-47bd-a30f-6d058037eaeb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchareq(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchareq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="bpcharge" id="02242347-68a3-4788-bbff-23cb824b1eba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharge(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="bpchargt" id="a7719a81-bd68-4429-93c1-b78720b854af" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchargt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchargt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="bpchariclike" id="c4880f47-fc8a-4fdb-b465-a3c45168a7e6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchariclike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticlike_support
AS $function$texticlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~* operator]]></comment>
		</function>
		<function name="bpcharicnlike" id="f2d5409e-dba6-4070-a8df-e11cfd48c837" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicnlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~* operator]]></comment>
		</function>
		<function name="bpcharicregexeq" id="fdab996a-779d-43e9-86d1-87f62bf8c957" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicregexeq(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticregexeq_support
AS $function$texticregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~* operator]]></comment>
		</function>
		<function name="bpcharicregexne" id="fbf0a8db-0d1f-4b16-8dc3-d39384c98cd8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicregexne(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~* operator]]></comment>
		</function>
		<function name="bpcharin" id="8db53d66-8321-40b1-9c95-f179c1ef1642" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharin(cstring, oid, integer)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bpcharle" id="70d9887e-e945-43c8-8174-0921cd7ad5b4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharle(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="bpcharlike" id="ee86574d-e5be-4968-99a1-8424691bd025" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
		</function>
		<function name="bpcharlt" id="39349f04-4d37-4012-9a70-2d1ce547b775" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharlt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="bpcharne" id="459b1524-5e76-4a6e-bafb-d82c85ef5d34" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharne(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="bpcharnlike" id="4400b590-59fe-49e9-b100-dbb00d76a6f5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharnlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
		</function>
		<function name="bpcharout" id="79089bb8-f6fc-4196-99eb-bce1410a4f07" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharout(character)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bpcharrecv" id="94440487-ff41-4b1a-b065-8287ddab70e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharrecv(internal, oid, integer)
 RETURNS character
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$bpcharrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bpcharregexeq" id="10be9a74-8c65-427d-8385-9b6ee9f892ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharregexeq(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textregexeq_support
AS $function$textregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="bpcharregexne" id="4aa5ae31-51c6-4608-b16a-41677841a3b4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharregexne(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~ operator]]></comment>
		</function>
		<function name="bpcharsend" id="5cf37009-64b4-479a-ac2a-68c1cb9e2944" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharsend(character)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$bpcharsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bpchartypmodin" id="8cbe9ed8-613d-43a0-8a8a-2d47bb5db4ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchartypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchartypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="bpchartypmodout" id="c8756e25-6af7-494c-b42a-75d8e1ad35ee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchartypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchartypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="brin_bloom_add_value" id="09894e19-2ebd-48cd-9d8e-c9b9dffd51cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_add_value$function$
;]]></string>
			<comment><![CDATA[BRIN bloom support]]></comment>
		</function>
		<function name="brin_bloom_consistent" id="2ecab66e-3259-4c6e-8d65-d78f1bf6a17d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_consistent(internal, internal, internal, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_consistent$function$
;]]></string>
			<comment><![CDATA[BRIN bloom support]]></comment>
		</function>
		<function name="brin_bloom_opcinfo" id="e3f9c771-3b75-4eeb-bf96-b01701eaf30e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_opcinfo$function$
;]]></string>
			<comment><![CDATA[BRIN bloom support]]></comment>
		</function>
		<function name="brin_bloom_options" id="c20fd0bb-f042-49cf-954e-a48d5737b585" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_options(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$brin_bloom_options$function$
;]]></string>
			<comment><![CDATA[BRIN bloom support]]></comment>
		</function>
		<function name="brin_bloom_summary_in" id="ef8650f3-03b0-49ab-98d8-4fab650c1fdd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_summary_in(cstring)
 RETURNS pg_brin_bloom_summary
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_summary_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_bloom_summary_out" id="078cab08-873b-4337-93b0-142b3f917796" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_summary_out(pg_brin_bloom_summary)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_summary_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_bloom_summary_recv" id="d7ae9321-4977-47c7-910a-4a3c84020685" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_summary_recv(internal)
 RETURNS pg_brin_bloom_summary
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_summary_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_bloom_summary_send" id="ef71db19-fca0-4f02-9d56-5ef641b5d464" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_summary_send(pg_brin_bloom_summary)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_summary_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_bloom_union" id="25057091-0c34-44c2-92fe-ff353265f751" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_bloom_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_bloom_union$function$
;]]></string>
			<comment><![CDATA[BRIN bloom support]]></comment>
		</function>
		<function name="brin_desummarize_range" id="c1fd240c-2bff-4f86-9ce5-aff6808c134e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_desummarize_range(regclass, bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$brin_desummarize_range$function$
;]]></string>
			<comment><![CDATA[brin: desummarize page range]]></comment>
		</function>
		<function name="brin_inclusion_add_value" id="1dda5ee9-f868-4595-9a58-a9a001b58ead" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_add_value$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
		</function>
		<function name="brin_inclusion_consistent" id="2542898d-5c70-455a-8fbe-08a606db1c99" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_consistent(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_consistent$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
		</function>
		<function name="brin_inclusion_opcinfo" id="f8b5b78f-5bbf-48d9-97be-9ca326fc28c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_opcinfo$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
		</function>
		<function name="brin_inclusion_union" id="da31bc5f-fa9c-42dd-be38-a42ed8edabd1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_union$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
		</function>
		<function name="brin_minmax_add_value" id="b612f770-ef67-4076-8bce-8f237292d43c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_add_value$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
		</function>
		<function name="brin_minmax_consistent" id="7874436c-7429-4683-b7e2-6b6c60034dcd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_consistent(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_consistent$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
		</function>
		<function name="brin_minmax_multi_add_value" id="d2860589-c800-4a0d-baf1-59a1a83a3eb4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_add_value$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax support]]></comment>
		</function>
		<function name="brin_minmax_multi_consistent" id="c396e210-cb24-4a79-bd45-6a6522bf3b31" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_consistent(internal, internal, internal, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_consistent$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax support]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_date" id="e10fed5f-b6d2-4691-a89f-c36239791cd2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_date(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_date$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax date distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_float4" id="1e077a94-4198-48e4-acf1-1334565fa0b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_float4(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_float4$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax float4 distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_float8" id="1832771f-b697-424e-ba38-97659b3ffa33" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_float8(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_float8$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax float8 distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_inet" id="a920008c-00d7-4b02-bdcc-654345259bf5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_inet(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_inet$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax inet distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_int2" id="7c0ec12a-55e3-41cf-af31-e264aeb7401f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_int2(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_int2$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax int2 distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_int4" id="b09d36a8-2a7f-4ea0-9329-08dee87fdec7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_int4(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_int4$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax int4 distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_int8" id="7fb521c9-75ed-4230-b8ba-81f9936adb59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_int8(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_int8$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax int8 distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_interval" id="d4c6f757-c1b1-4448-b293-e81a8926285b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_interval(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_interval$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax interval distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_macaddr" id="815e7037-7873-4715-9fb2-4e644e0b7b30" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_macaddr(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_macaddr$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax macaddr distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_macaddr8" id="a7a87ee5-b411-48f8-bd8f-817e1472be99" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_macaddr8(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_macaddr8$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax macaddr8 distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_numeric" id="f47c606d-de5e-47f4-96c0-ce459fec1e8d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_numeric(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_numeric$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax numeric distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_pg_lsn" id="1611b5d5-020d-4e46-9ebf-ecb946f5efcf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_pg_lsn(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_pg_lsn$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax pg_lsn distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_tid" id="c55d5430-9109-4978-9a87-f4f4944f1c81" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_tid(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_tid$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax tid distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_time" id="65bdba09-98bb-4c5b-963e-f743e9e3f78a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_time(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_time$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax time distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_timestamp" id="b12650f2-538e-4efd-9f2d-706688d80c03" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_timestamp(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_timestamp$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax timestamp distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_timetz" id="1b63432b-6739-4e2f-8047-2a4f2f0ec9dd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_timetz(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_timetz$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax timetz distance]]></comment>
		</function>
		<function name="brin_minmax_multi_distance_uuid" id="adda6e0c-672c-44d9-ac84-147384bd1576" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_distance_uuid(internal, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_distance_uuid$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax uuid distance]]></comment>
		</function>
		<function name="brin_minmax_multi_opcinfo" id="6421f169-eee1-4139-b0b3-b29405427c57" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_opcinfo$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax support]]></comment>
		</function>
		<function name="brin_minmax_multi_options" id="7c621bfa-f6aa-4e3c-a0df-967fda4da5d0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_options(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$brin_minmax_multi_options$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax support]]></comment>
		</function>
		<function name="brin_minmax_multi_summary_in" id="cb3f5309-879a-463f-af09-5b19251e94b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_summary_in(cstring)
 RETURNS pg_brin_minmax_multi_summary
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_summary_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_minmax_multi_summary_out" id="54b61d1c-dd58-49fe-84b0-c2fba8c0b564" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_summary_out(pg_brin_minmax_multi_summary)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_summary_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_minmax_multi_summary_recv" id="22ea9bd8-1170-48c0-8e54-970dc1a449cc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_summary_recv(internal)
 RETURNS pg_brin_minmax_multi_summary
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_summary_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_minmax_multi_summary_send" id="7f54f145-3c7e-4711-a96c-91474a9b54d6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_summary_send(pg_brin_minmax_multi_summary)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_summary_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="brin_minmax_multi_union" id="17c93f64-e29d-4d12-bd89-3acbd5d16c7e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_multi_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_multi_union$function$
;]]></string>
			<comment><![CDATA[BRIN multi minmax support]]></comment>
		</function>
		<function name="brin_minmax_opcinfo" id="72e79f38-fce2-4279-b352-d69d4186a992" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_opcinfo$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
		</function>
		<function name="brin_minmax_union" id="3f401b3a-cb5c-4627-b89b-7d38c8287cbc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_union$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
		</function>
		<function name="brin_summarize_new_values" id="627f576a-2685-4c6a-9ed9-b2a7c845f569" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_summarize_new_values(regclass)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$brin_summarize_new_values$function$
;]]></string>
			<comment><![CDATA[brin: standalone scan new table pages]]></comment>
		</function>
		<function name="brin_summarize_range" id="5f5a6a10-b50c-41a3-8166-ceed2e532673" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_summarize_range(regclass, bigint)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$brin_summarize_range$function$
;]]></string>
			<comment><![CDATA[brin: standalone scan new table pages]]></comment>
		</function>
		<function name="brinhandler" id="b0f42ddc-0ee7-4dc0-a3f7-90de314e911c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brinhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$brinhandler$function$
;]]></string>
			<comment><![CDATA[brin index access method handler]]></comment>
		</function>
		<function name="broadcast" id="e26fe147-6fe3-4f34-b20e-92995bb10ed7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.broadcast(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_broadcast$function$
;]]></string>
			<comment><![CDATA[broadcast address of network]]></comment>
		</function>
		<function name="btarraycmp" id="f12d9777-a81d-4761-98dd-b7089fa54130" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btarraycmp(anyarray, anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btarraycmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btboolcmp" id="3ba7fdbd-d1d7-4362-8e61-e2f3abad619d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btboolcmp(boolean, boolean)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btboolcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btbpchar_pattern_cmp" id="be372628-9b90-4fe1-838c-d0e73365a35d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btbpchar_pattern_cmp(character, character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btbpchar_pattern_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btbpchar_pattern_sortsupport" id="53773d04-2620-48e5-b808-6bf1e52ddc6c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btbpchar_pattern_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btbpchar_pattern_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="btcharcmp" id="531540ac-0a8a-4ae8-919d-faccb1b58082" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btcharcmp("char", "char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btcharcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btequalimage" id="e233ecf5-5dc0-4be4-bfbf-d7732bf7e195" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btequalimage(oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btequalimage$function$
;]]></string>
			<comment><![CDATA[equal image]]></comment>
		</function>
		<function name="btfloat48cmp" id="e9cd1522-1f4a-4002-aa69-807ea2db77a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat48cmp(real, double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat48cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btfloat4cmp" id="4d1af39a-21ec-4199-a242-7d397c1a116f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat4cmp(real, real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat4cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btfloat4sortsupport" id="6b6a66e6-dc67-4582-82ad-78e04ae74544" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat4sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat4sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="btfloat84cmp" id="e058e19d-3c62-40b0-a0f9-e7af639c8d3e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat84cmp(double precision, real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat84cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btfloat8cmp" id="c6a458bb-1fba-4209-9239-b9523e1c1011" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat8cmp(double precision, double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btfloat8cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btfloat8sortsupport" id="6110896e-e05e-4673-8072-0590c5b1b73e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat8sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat8sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="bthandler" id="777fd6b6-ca38-4af8-bfe4-882e14993874" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bthandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$bthandler$function$
;]]></string>
			<comment><![CDATA[btree index access method handler]]></comment>
		</function>
		<function name="btint24cmp" id="e26bac3f-2627-45f0-8e7d-0ad3632ecfe1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint24cmp(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint24cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint28cmp" id="5ced1eca-1f5d-4a71-9a0f-3a503bb13451" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint28cmp(smallint, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint28cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint2cmp" id="76852dd8-7b45-4a11-be58-3b79d3c46328" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint2cmp(smallint, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint2cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint2sortsupport" id="a42aa883-ae18-4729-bfa0-b31593d82bd5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint2sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint2sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="btint42cmp" id="1d4edc8f-edeb-4b12-b31f-b15aee82e10b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint42cmp(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint42cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint48cmp" id="95d50bec-fd6b-4df9-a1bc-b73d2deb8005" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint48cmp(integer, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint48cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint4cmp" id="286f20a3-1b24-4ee4-bd8e-9579529adef5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint4cmp(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint4cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint4sortsupport" id="c08776a3-4261-47f7-bed1-9ace14b0e03b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint4sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint4sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="btint82cmp" id="dde28b59-2b3a-4c2b-a9d6-243918df0f92" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint82cmp(bigint, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint82cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint84cmp" id="551d8676-a9f9-495c-9744-080ec86e02f5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint84cmp(bigint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint84cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint8cmp" id="70ad8d79-fca2-4411-8459-80c727012085" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint8cmp(bigint, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btint8cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btint8sortsupport" id="1159d0bc-c783-4434-ad3e-0d4c73ddf2a0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint8sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint8sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="btnamecmp" id="34b5e267-4666-42a8-9ff2-3251bc653457" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnamecmp(name, name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btnamecmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btnamesortsupport" id="70a9835a-e7c5-4f8d-98c8-b29e95470e3e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnamesortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btnamesortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="btnametextcmp" id="35309087-3d4f-4904-970b-2e284debbb2c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnametextcmp(name, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btnametextcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btoidcmp" id="eaafd0d0-9313-45ce-a8cd-54067158b9ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidcmp(oid, oid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btoidcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btoidsortsupport" id="a5156780-0f4b-4c48-8761-5df80f10af87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidsortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btoidsortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="btoidvectorcmp" id="12257c1d-6594-462f-a969-5dce9d066971" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidvectorcmp(oidvector, oidvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$btoidvectorcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btrecordcmp" id="7c569ee7-785e-4e26-b86c-900e86308260" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrecordcmp(record, record)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrecordcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btrecordimagecmp" id="0b8e2b0e-e96a-48ce-926e-49ed78e8cf9b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrecordimagecmp(record, record)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrecordimagecmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater based on byte images]]></comment>
		</function>
		<function name="btrim" id="0baec8ea-b2c2-4ca8-a7ca-d9de7d6ad9fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteatrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from both ends of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="btrim" id="d9261d12-51f2-4e88-8754-ae2ec8424220" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteatrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from both ends of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="btrim" id="ff859c3c-b7d5-4e03-9b7e-58402bb68fa7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteatrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from both ends of string]]></comment>
		</function>
		<function name="bttext_pattern_cmp" id="2eb4203a-03f5-489c-931a-871174723ade" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttext_pattern_cmp(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttext_pattern_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="bttext_pattern_sortsupport" id="37eb65ba-2cdb-4b5d-9782-a8b57e2e49b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttext_pattern_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttext_pattern_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="bttextcmp" id="3d16ea02-e22a-43ef-9dc2-8c418989dbf7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextcmp(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttextcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="bttextnamecmp" id="83c77236-7be9-43b5-b91d-c499c78fcba2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextnamecmp(text, name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttextnamecmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="bttextsortsupport" id="9a2dd745-affa-4579-8dea-adafce176f71" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextsortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttextsortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="bttidcmp" id="056758c0-95ca-4673-9eb7-d975a7f70528" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttidcmp(tid, tid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bttidcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="btvarstrequalimage" id="4249e749-59a5-482e-bb3d-9610f800fe4a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btvarstrequalimage(oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btvarstrequalimage$function$
;]]></string>
			<comment><![CDATA[equal image]]></comment>
		</function>
		<function name="bytea_sortsupport" id="0f4f7cf1-c580-4548-80bf-fbe3efe2939e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="bytea_string_agg_finalfn" id="1840e9df-f19e-44a7-9477-b8659627b1a7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_string_agg_finalfn(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bytea_string_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="bytea_string_agg_transfn" id="60618eea-1c74-4c9e-92e7-6f9bae2a8d3d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_string_agg_transfn(internal, bytea, bytea)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bytea_string_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="byteacat" id="ec23fe6e-50b4-4aea-b0ae-2bfc0a274535" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteacat(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteacat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="byteacmp" id="cf8506b3-9901-4809-bc66-071e2babc992" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteacmp(bytea, bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteacmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="byteaeq" id="72a24a29-ade6-4d79-873a-c388377bbfc7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteaeq(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteaeq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="byteage" id="7ed7fec3-2c95-4d43-ae85-8a25abcece3b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteage(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteage$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="byteagt" id="23da20b3-3aa5-4b21-8189-73ad913aaf75" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteagt(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteagt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="byteain" id="76f831c3-5b7a-498f-8506-3f2b93eaf610" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteain(cstring)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteain$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="byteale" id="ef1a9efe-a860-4912-a957-272966c809df" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteale(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteale$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="bytealike" id="5879e37d-aab2-46bb-afd8-44008079fcb4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytealike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$bytealike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
		</function>
		<function name="bytealt" id="f46214c7-f6f9-4f9d-a7e7-c96c9af0a76e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytealt(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bytealt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="byteane" id="62ceb30e-58a5-44c9-9fc2-684dd517d51c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteane(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteane$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="byteanlike" id="15d36bbc-0f6d-452b-af6e-2d4fa8cedfac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteanlike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteanlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
		</function>
		<function name="byteaout" id="f4c08d1e-4095-4ed2-84e5-9342db482fe3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteaout(bytea)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="bytearecv" id="4c55cc40-c0a7-443e-85a7-2b787a79c519" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytearecv(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytearecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="byteasend" id="7357ac49-b43e-4180-a252-f5b246ec119c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteasend(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteasend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cardinality" id="9ff6df44-c3f0-4457-97d8-63639b4a2f63" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cardinality(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_cardinality$function$
;]]></string>
			<comment><![CDATA[array cardinality]]></comment>
		</function>
		<function name="cash_cmp" id="9b9168d7-2890-433e-aaa3-fe3d776ee42d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_cmp(money, money)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="cash_div_cash" id="42027c44-3145-43c0-aed8-476d4fc30d65" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_cash(money, money)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_cash$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="cash_div_flt4" id="1a8db7de-e71e-44d6-a2f9-ae7272a482fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_flt4(money, real)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_flt4$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="cash_div_flt8" id="af1dac2d-a1e4-4e03-a60c-78ed1b03427a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_flt8(money, double precision)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_flt8$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="cash_div_int2" id="8bb52bc8-4681-45b2-afcc-94873a5dbd7b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int2(money, smallint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int2$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="cash_div_int4" id="df667fc5-5b52-48ae-80a5-c2f1e964e7ab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int4(money, integer)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int4$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="cash_div_int8" id="6d0e1c01-1307-400c-b0e0-e1b83a8b49d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int8(money, bigint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int8$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="cash_eq" id="3a57d165-6c75-43a5-b69d-d72eac7c6be7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_eq(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="cash_ge" id="89de66de-d6de-4749-aa44-fb6a5a1e69ed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_ge(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="cash_gt" id="4278d718-c8fd-48b3-bb29-704cfc7750b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_gt(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="cash_in" id="dfae6e34-0efb-4b03-9216-b3a213c26a77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_in(cstring)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cash_le" id="45a456c2-c609-45ac-96ca-3bcd7dbab679" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_le(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="cash_lt" id="e162be46-baf5-4f92-a415-98668f5e9acf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_lt(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="cash_mi" id="c90efa78-6c29-445f-a91c-491dc468f8ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mi(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="cash_mul_flt4" id="3e8384e7-93c9-4c64-a451-e8bd6be8457d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_flt4(money, real)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_flt4$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="cash_mul_flt8" id="089e6cca-fbd3-4835-a46b-aaa19f189619" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_flt8(money, double precision)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_flt8$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="cash_mul_int2" id="68819cb9-4d0f-470d-ae34-b028934fe9c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int2(money, smallint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int2$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="cash_mul_int4" id="6b6e8664-901e-46c8-af3f-a56efe757ac5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int4(money, integer)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int4$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="cash_mul_int8" id="6a9d4d69-1f8d-4a3d-9700-e62eca797a88" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int8(money, bigint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int8$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="cash_ne" id="3c912c18-959b-4e1c-9feb-094e58245fa2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_ne(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="cash_out" id="4ce7c84d-86a2-43d7-abbf-1bd074b407f5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_out(money)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cash_pl" id="73ed1fff-f71e-41d9-a72a-76c2f04b7af6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_pl(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="cash_recv" id="133e0490-f1bd-451d-995a-ac7a36a17ac0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_recv(internal)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cash_send" id="fe2f39e8-5667-48fb-a84a-d55a0cba7c9f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_send(money)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cash_words" id="8b98074b-3094-421f-85bf-c875b4de3dca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_words(money)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_words$function$
;]]></string>
			<comment><![CDATA[output money amount as words]]></comment>
		</function>
		<function name="cashlarger" id="1d0d41cd-cde2-4d78-8092-c4a3f83fc00f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cashlarger(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cashlarger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="cashsmaller" id="9d1190cf-cfa0-490d-bfb9-978160d0f0cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cashsmaller(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cashsmaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="cbrt" id="6664f0ce-b2c2-4b93-ace2-e54b994f2e1c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cbrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcbrt$function$
;]]></string>
			<comment><![CDATA[cube root]]></comment>
		</function>
		<function name="ceil" id="3f8b6170-ad95-4c59-a5e4-e0b8c892046f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceil(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="ceil" id="fece68e0-ea00-4d2a-bc90-d99ab1aee6ee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceil(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
		</function>
		<function name="ceiling" id="f75cdd06-bf5d-4b2d-9126-8034beff983d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceiling(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="ceiling" id="632f76f4-ca40-43c7-8d81-af4b79ec7b17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceiling(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
		</function>
		<function name="center" id="16eef8d6-2412-499c-a7da-0201383ef2e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.center(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="center" id="11b41356-4bf4-4eca-9917-acf1b11a86f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.center(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
		</function>
		<function name="char" id="b77cfa20-0b9f-4236-b4f2-14507403f5e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."char"(integer)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tochar$function$
;]]></string>
			<comment><![CDATA[convert int4 to char]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="char" id="dc6e3fc0-048b-468c-ba50-6f3e5aad6c02" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."char"(integer)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tochar$function$
;]]></string>
			<comment><![CDATA[convert int4 to char]]></comment>
		</function>
		<function name="char_length" id="3b9f02c7-ea51-4260-a48b-b7933cfa782e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.char_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="char_length" id="b3815bd2-1e19-4c60-966e-d9f2c41fc3a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.char_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
		</function>
		<function name="character_length" id="37113f44-d53e-45b9-a4f4-8a125bfb8941" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.character_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
			<input_param jt="-1" type="character" inOut="1" />
		</function>
		<function name="character_length" id="ab3a8520-eb21-453a-934a-1687c932b74f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.character_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
		</function>
		<function name="chareq" id="19c3bd7c-ef78-4b96-b20a-6e9f2f1441b3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chareq("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$chareq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="charge" id="374a4cc8-f1f5-41a8-a494-1872d76a0cee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charge("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="chargt" id="e3aca275-b15a-4291-9d03-128ee9157a85" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chargt("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$chargt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="charin" id="bd8a5575-c42d-4755-b331-aa6f4c51d32d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charin(cstring)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="charle" id="2b5eb77b-c46c-4348-92ab-3e5777941534" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charle("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="charlt" id="6f4d171a-9d1a-4c7a-b120-2f302fa8d331" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charlt("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="charne" id="cc288c27-b962-4368-8d9c-d48dcd638a6a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charne("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="charout" id="7626cd8d-ed3f-4880-bb4a-5c8e9332e3a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charout("char")
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="charrecv" id="bb3e228f-dd4c-497b-8141-7fbc0cf98a47" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charrecv(internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="charsend" id="3abcbcb9-0f38-44c9-8c30-9108444a59f2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charsend("char")
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="chr" id="657a657e-f338-4978-b5f2-26c7ba4b4a40" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chr(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$chr$function$
;]]></string>
			<comment><![CDATA[convert int4 to char]]></comment>
		</function>
		<function name="cideq" id="1673ce92-5e5e-4deb-904b-23a2b83b4c3d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cideq(cid, cid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="cidin" id="832d035c-bf26-41b2-a8a6-1748b33863bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidin(cstring)
 RETURNS cid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cidout" id="57309c37-b34d-4ad1-8b34-e3ba58e02239" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidout(cid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cidr" id="225f429a-0df9-44eb-9ad6-10ebd550e584" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr(inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_to_cidr$function$
;]]></string>
			<comment><![CDATA[convert inet to cidr]]></comment>
		</function>
		<function name="cidr_in" id="22f012d4-2dc0-4b19-9746-5fd2ed10e324" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_in(cstring)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cidr_out" id="86d4baff-129a-4cfd-be65-26cf7a76c04b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_out(cidr)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cidr_recv" id="728f2019-03b9-4a8b-b2aa-4d22fbd239b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_recv(internal)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cidr_send" id="46d4a4b2-af02-42f0-9ff7-9938c60b00bd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_send(cidr)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cidrecv" id="318050f8-c5a5-4433-a822-3594e57c745c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidrecv(internal)
 RETURNS cid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cidsend" id="b58e4866-927b-474e-9395-f32c71f009e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidsend(cid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="circle" id="9c6285d1-dd97-4ef9-b4d2-ac5009245044" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(point, double precision)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cr_circle$function$
;]]></string>
			<comment><![CDATA[convert point and radius to circle]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="circle" id="15b446c1-5220-419d-873f-0ccc09c22621" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(point, double precision)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cr_circle$function$
;]]></string>
			<comment><![CDATA[convert point and radius to circle]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="circle" id="a18089b9-c148-40dc-abc1-df4ece9e6adf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(point, double precision)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cr_circle$function$
;]]></string>
			<comment><![CDATA[convert point and radius to circle]]></comment>
		</function>
		<function name="circle_above" id="763611df-3065-4b0e-9303-f44663945feb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_above(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_above$function$
;]]></string>
			<comment><![CDATA[implementation of |>> operator]]></comment>
		</function>
		<function name="circle_add_pt" id="8c71f203-99d8-48d8-9924-b201581df399" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_add_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_add_pt$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="circle_below" id="936c7216-4e24-46c9-bbbd-3744c9662b62" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_below(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_below$function$
;]]></string>
			<comment><![CDATA[implementation of <<| operator]]></comment>
		</function>
		<function name="circle_center" id="872f8b08-4973-4168-9f65-238b06ec29c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_center(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="circle_contain" id="fb6fadb3-5e98-45ac-ba81-aeeb81102313" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contain(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contain$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="circle_contain_pt" id="5802383f-a46c-4f0f-a55f-6c32cd263396" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contain_pt(circle, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contain_pt$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="circle_contained" id="95ae9393-0943-4dc1-a99a-5acf234ac505" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contained(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="circle_distance" id="55dbe383-7cf7-4ae9-9deb-c38fac6a6559" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_distance(circle, circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="circle_div_pt" id="8a00d846-2e53-4643-a61b-23b35507749c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_div_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_div_pt$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="circle_eq" id="92f3da88-d247-46aa-89b9-051ead0092e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_eq(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="circle_ge" id="3bf992af-9f89-4aa9-8991-ddda383bdc8a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_ge(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="circle_gt" id="f2db6439-22ac-4e07-9e0e-9caae17bff4d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_gt(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="circle_in" id="768eeef2-4636-4dbb-852f-acd0b89f52cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_in(cstring)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="circle_le" id="b6f0dd11-d98e-4f57-9aa1-33b93bdc5fb9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_le(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="circle_left" id="8a040e1b-2172-4c90-9dbb-0363776303e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_left(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="circle_lt" id="d820ddc0-fda7-410b-9baf-fd3e60ebe971" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_lt(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="circle_mul_pt" id="6a08aaf9-9730-4769-a36e-da12d7f12eb1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_mul_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_mul_pt$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="circle_ne" id="e91c75f4-2f74-468a-93a0-fbc93d8cc1f1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_ne(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="circle_out" id="09666e3c-b611-4366-b2e6-7c57d1173c36" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_out(circle)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="circle_overabove" id="169fc859-b0eb-4120-9703-d52a8a479eab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overabove(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overabove$function$
;]]></string>
			<comment><![CDATA[implementation of |&> operator]]></comment>
		</function>
		<function name="circle_overbelow" id="549b05cf-161a-44b4-9dec-9d9ab45cb169" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overbelow(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overbelow$function$
;]]></string>
			<comment><![CDATA[implementation of &<| operator]]></comment>
		</function>
		<function name="circle_overlap" id="a6d3eed4-e4e2-41f1-b8a4-082c3c913239" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overlap(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="circle_overleft" id="16aa27bf-8242-4fc4-a70e-22f849ae8cac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overleft(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
		</function>
		<function name="circle_overright" id="effe17f4-c9d9-474e-8deb-6fc9271fad2d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overright(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
		</function>
		<function name="circle_recv" id="d0f56a5b-e82d-4184-9d83-aa4a042ae25a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_recv(internal)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="circle_right" id="9d88afc6-3ce3-4f30-9d59-a0d8bd80b924" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_right(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="circle_same" id="77d428db-501a-45b5-acfd-3feb8a8bd9f4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_same(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_same$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
		</function>
		<function name="circle_send" id="7d5e52ed-d4fa-4fcf-b34f-b69fd7805600" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_send(circle)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="circle_sub_pt" id="80dd9a3d-8e59-423d-9d5e-e9c5bfe5e18b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_sub_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_sub_pt$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="clock_timestamp" id="21974356-5d8c-4a01-8263-04a3578fda6b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.clock_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$clock_timestamp$function$
;]]></string>
			<comment><![CDATA[current clock time]]></comment>
		</function>
		<function name="close_ls" id="216cba19-c0ed-4d70-8074-97eb4a3e97c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_ls(line, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_ls$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
		</function>
		<function name="close_lseg" id="e1db67e5-1a45-49b9-8be2-e581bf5c5276" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_lseg(lseg, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_lseg$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
		</function>
		<function name="close_pb" id="48e76c55-0f61-4dd7-b315-c2b8a5a4b14e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_pb(point, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_pb$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
		</function>
		<function name="close_pl" id="78201f4b-e71d-46fb-91ff-e66c57af6769" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_pl(point, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_pl$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
		</function>
		<function name="close_ps" id="7d6d7e14-038c-4268-a0e2-3b57e16364b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_ps(point, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_ps$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
		</function>
		<function name="close_sb" id="7508fd48-5b1d-489b-9731-adc316ada008" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_sb(lseg, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_sb$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
		</function>
		<function name="col_description" id="a8b82d4d-5b69-475a-824a-ef90736b86e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.col_description(oid, integer)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
BEGIN ATOMIC
 SELECT pg_description.description
    FROM pg_description
   WHERE ((pg_description.objoid = $1) AND (pg_description.classoid = ('pg_class'::regclass)::oid) AND (pg_description.objsubid = $2));
END
;]]></string>
			<comment><![CDATA[get description for table column]]></comment>
		</function>
		<function name="concat" id="8465e7ad-83ec-4768-8ad4-98e416755e16" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.concat(VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_concat$function$
;]]></string>
			<comment><![CDATA[concatenate values]]></comment>
		</function>
		<function name="concat_ws" id="6a6c2469-2468-45f3-b1c4-1a620708615a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.concat_ws(text, VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_concat_ws$function$
;]]></string>
			<comment><![CDATA[concatenate values with separators]]></comment>
		</function>
		<function name="contjoinsel" id="80976fef-9efa-440f-bda9-f91dea86f776" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.contjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$contjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for containment comparison operators]]></comment>
		</function>
		<function name="contsel" id="0cdee76e-c9e4-4f7a-9596-609df5d71f4d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.contsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$contsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for containment comparison operators]]></comment>
		</function>
		<function name="convert" id="4f0c80c0-1f14-4c6a-a2ff-1700fb9ed6e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert(bytea, name, name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert$function$
;]]></string>
			<comment><![CDATA[convert string with specified encoding names]]></comment>
		</function>
		<function name="convert_from" id="efdd0a8a-89d0-461e-8ee6-d6c752b2b307" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert_from(bytea, name)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert_from$function$
;]]></string>
			<comment><![CDATA[convert string with specified source encoding name]]></comment>
		</function>
		<function name="convert_to" id="b543bd69-e2e1-4633-97c1-672e87e5a187" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert_to(text, name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert_to$function$
;]]></string>
			<comment><![CDATA[convert string with specified destination encoding name]]></comment>
		</function>
		<function name="cos" id="16883379-4033-4362-9ac8-6477ad88efd4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cos(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcos$function$
;]]></string>
			<comment><![CDATA[cosine]]></comment>
		</function>
		<function name="cosd" id="93d67b81-c8b6-4d18-8d33-8469cdd8ac28" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cosd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcosd$function$
;]]></string>
			<comment><![CDATA[cosine, degrees]]></comment>
		</function>
		<function name="cosh" id="785a7861-9116-48f3-93b7-0b7da10b8a9a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cosh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcosh$function$
;]]></string>
			<comment><![CDATA[hyperbolic cosine]]></comment>
		</function>
		<function name="cot" id="a0a86108-2b1f-48b7-b454-f46e46f4ad54" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cot(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcot$function$
;]]></string>
			<comment><![CDATA[cotangent]]></comment>
		</function>
		<function name="cotd" id="03dc2aff-2b84-4508-a5bd-f8a36cabb799" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cotd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcotd$function$
;]]></string>
			<comment><![CDATA[cotangent, degrees]]></comment>
		</function>
		<function name="cstring_in" id="cc267888-240c-4154-ac76-65dda15a1d34" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_in(cstring)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cstring_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cstring_out" id="e238b09e-2fd6-4843-817f-66e488db9f34" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_out(cstring)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cstring_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cstring_recv" id="5c04a6aa-a6e2-4ce3-ab67-f929754ceab7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_recv(internal)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cstring_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cstring_send" id="31ad89d0-a8c1-4b36-a421-26aac70a72b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_send(cstring)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cstring_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="cume_dist" id="14ba37f9-5eb2-4e99-bd63-48e5b0158cb5" isSystem="false" params_known="n" >
			<string><![CDATA[create function cume_dist window_cume_dist;]]></string>
		</function>
		<function name="cume_dist_final" id="23af601f-ba5d-4987-ab95-65ba59b4f3c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cume_dist_final(internal, VARIADIC "any")
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_cume_dist_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="current_database" id="b60eadbb-5ef6-42e1-bd72-8586271b3bc0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_database()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_database$function$
;]]></string>
			<comment><![CDATA[name of the current database]]></comment>
		</function>
		<function name="current_query" id="f11fd83c-e1b1-4b41-b101-f62bd61e7002" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_query()
 RETURNS text
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$current_query$function$
;]]></string>
			<comment><![CDATA[get the currently executing query]]></comment>
		</function>
		<function name="current_schema" id="f3d8ef63-8d7b-44ab-acfc-66372866405d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."current_schema"()
 RETURNS name
 LANGUAGE internal
 STABLE STRICT
AS $function$current_schema$function$
;]]></string>
			<comment><![CDATA[current schema name]]></comment>
		</function>
		<function name="current_schemas" id="b1879565-a3ea-474b-99ee-47c3a387913a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_schemas(boolean)
 RETURNS name[]
 LANGUAGE internal
 STABLE STRICT
AS $function$current_schemas$function$
;]]></string>
			<comment><![CDATA[current schema search list]]></comment>
		</function>
		<function name="current_setting" id="228409af-8fee-4532-a68b-0284b39a837f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_setting(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_config_by_name$function$
;]]></string>
			<comment><![CDATA[SHOW X as a function]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="current_setting" id="18a7eca8-c3ad-4d65-9546-c9762528c60b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_setting(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_config_by_name$function$
;]]></string>
			<comment><![CDATA[SHOW X as a function]]></comment>
		</function>
		<function name="current_user" id="74aa49f3-3219-451a-a924-6d869814778b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."current_user"()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_user$function$
;]]></string>
			<comment><![CDATA[current user name]]></comment>
		</function>
		<function name="currtid2" id="ef93c0d0-4005-4f0f-bbbf-622a2640ca3e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currtid2(text, tid)
 RETURNS tid
 LANGUAGE internal
 STRICT
AS $function$currtid_byrelname$function$
;]]></string>
			<comment><![CDATA[latest tid of a tuple]]></comment>
		</function>
		<function name="currval" id="974523aa-2a10-4176-a1ce-8812ed4d4a59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currval(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$currval_oid$function$
;]]></string>
			<comment><![CDATA[sequence current value]]></comment>
		</function>
		<function name="cursor_to_xml" id="0be3bfa9-c76e-4d0f-9526-5bdb7d82e97a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cursor_to_xml(cursor refcursor, count integer, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$cursor_to_xml$function$
;]]></string>
			<comment><![CDATA[map rows from cursor to XML]]></comment>
		</function>
		<function name="cursor_to_xmlschema" id="7f4963ec-600f-409c-a362-fe5196e6663f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cursor_to_xmlschema(cursor refcursor, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$cursor_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map cursor structure to XML Schema]]></comment>
		</function>
		<function name="database_to_xml" id="854fa442-3bc6-4f0d-9467-01f5b10c0fb6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xml(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xml$function$
;]]></string>
			<comment><![CDATA[map database contents to XML]]></comment>
		</function>
		<function name="database_to_xml_and_xmlschema" id="97275e01-4653-4949-baf7-adc6a06784b9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xml_and_xmlschema(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map database contents and structure to XML and XML Schema]]></comment>
		</function>
		<function name="database_to_xmlschema" id="5ed99e52-d38f-4d03-aa04-1253ed8689c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xmlschema(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map database structure to XML Schema]]></comment>
		</function>
		<function name="date" id="a46e5f54-4b4c-44d5-a8bf-393045a2e100" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date(timestamp with time zone)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_date$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to date]]></comment>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date" id="53130878-66e3-4bdf-981c-58037a70bc8d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date(timestamp with time zone)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_date$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to date]]></comment>
		</function>
		<function name="date_add" id="144df431-9de2-48d8-bdc3-e9083a445435" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_add(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_pl_interval$function$
;]]></string>
			<comment><![CDATA[add interval to timestamp with time zone]]></comment>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="date_add" id="714d340d-ab4b-4cce-92e3-85ecb49eecd3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_add(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_pl_interval$function$
;]]></string>
			<comment><![CDATA[add interval to timestamp with time zone]]></comment>
		</function>
		<function name="date_bin" id="4c9666b0-2eac-4bb3-aa6c-27aa752774d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_bin(interval, timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_bin$function$
;]]></string>
			<comment><![CDATA[bin timestamp into specified interval]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="date_bin" id="91bdc06f-f111-4e9b-bab4-1a94711d9ca6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_bin(interval, timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_bin$function$
;]]></string>
			<comment><![CDATA[bin timestamp into specified interval]]></comment>
		</function>
		<function name="date_cmp" id="d4791295-c583-4b37-9432-4c26b8d2f551" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp(date, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="date_cmp_timestamp" id="f929be31-7aed-415e-a52a-da602f75dca3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp_timestamp(date, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_cmp_timestamp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="date_cmp_timestamptz" id="0e1a7946-04c9-405d-a3a6-256143f95f5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp_timestamptz(date, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_cmp_timestamptz$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="date_eq" id="d9073e28-c408-4d65-9ac7-6fa8dc567cc3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="date_eq_timestamp" id="1dd62bb2-e77c-4522-92ae-00b8d04e8aa6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_eq_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="date_eq_timestamptz" id="58a3a99a-bb14-40ba-858f-da66668b1340" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_eq_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="date_ge" id="23f82aee-c9bc-441e-8990-080b39ec1ef6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="date_ge_timestamp" id="2aca756c-b51b-4c4d-bbef-d27c8f3c91b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_ge_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="date_ge_timestamptz" id="d4bece06-74bd-47d0-85fa-cba95ab241f6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_ge_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="date_gt" id="319e8b4d-2ca1-4fed-abe2-67d74d1683a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="date_gt_timestamp" id="66cbf36c-73fa-4e49-9bd1-66b299d5c3c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_gt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="date_gt_timestamptz" id="6fe554c1-b2af-473d-887a-f42700a40d59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_gt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="date_in" id="9e9bbc87-c0d0-4f09-825b-9eff0e81bc15" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_in(cstring)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="date_larger" id="859012a1-cc99-4c1b-b2b0-7afb090035ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_larger(date, date)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="date_le" id="75911e4e-89af-43af-bd21-efea3cbaed54" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="date_le_timestamp" id="b9249dcc-67b3-46ac-8d09-4d82231818a6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_le_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="date_le_timestamptz" id="1d59258b-916a-42f1-bcc2-57f482d7172d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_le_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="date_lt" id="f21e694d-bce8-4713-bafe-804af66adc60" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="date_lt_timestamp" id="f3a35376-a34e-431e-a06c-bf28f0d5eb08" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_lt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="date_lt_timestamptz" id="ea0c9493-2ff0-46c2-8382-1c7857a9fbce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_lt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="date_mi" id="4c99a9b8-088b-4e73-9dd9-88facdaa7ffb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mi(date, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="date_mi_interval" id="1dcd4be4-cdaf-4beb-aca5-a446d68d3e1f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mi_interval(date, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="date_mii" id="b3c48207-e3a5-49fd-a20b-aff5babd0a7d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mii(date, integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mii$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="date_ne" id="1b7e836a-f6ca-4590-a99b-13a707a0ed51" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="date_ne_timestamp" id="fcc29579-1b92-4267-b8dc-f170223970fe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_ne_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="date_ne_timestamptz" id="d7a3c429-ffc8-4946-b47d-87bba975783d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_ne_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="date_out" id="4231430d-cf5d-49b0-af4d-124e0bb02c6b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_out(date)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="date_part" id="76a436c1-3798-426a-b6b8-997de27a241c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp with time zone]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_part" id="fc594ed5-f481-4665-bab6-8bd8f848bacf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp with time zone]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_part" id="4c50d6a2-37ab-4c7a-92bf-fe443c701ca0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp with time zone]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_part" id="3d3a6637-2d2e-43b5-923b-50f382c689e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp with time zone]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_part" id="e636e071-174a-4fda-bfa5-494fe5ccbe5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp with time zone]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_part" id="dee5277e-b1d5-4bfc-993c-e9563a05ada6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp with time zone]]></comment>
		</function>
		<function name="date_pl_interval" id="0f4a1a2b-e26e-42fc-b2f2-155279ec0908" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_pl_interval(date, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="date_pli" id="02f3a9e2-fe39-42ce-bcda-07436b05e9c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_pli(date, integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_pli$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="date_recv" id="e4a8ed1f-bd74-488f-91b0-64e67bee8d7b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_recv(internal)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="date_send" id="82a21273-29eb-4224-be75-9549f0391458" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_send(date)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="date_smaller" id="6f769d12-0e7f-44d4-a2db-c8e49f3f6762" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_smaller(date, date)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="date_sortsupport" id="4da0ec88-2747-4dcd-81c7-6d39ebb1df87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="date_subtract" id="db96336b-1e65-4f45-9977-df36b49677bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_subtract(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_mi_interval$function$
;]]></string>
			<comment><![CDATA[subtract interval from timestamp with time zone]]></comment>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="interval" inOut="1" />
		</function>
		<function name="date_subtract" id="b30c481c-8fe5-4e82-aa75-d88978890038" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_subtract(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_mi_interval$function$
;]]></string>
			<comment><![CDATA[subtract interval from timestamp with time zone]]></comment>
		</function>
		<function name="date_trunc" id="3861071e-1c6a-48a8-afae-191fecacc6af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_trunc$function$
;]]></string>
			<comment><![CDATA[truncate timestamp with time zone to specified units]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_trunc" id="61330f99-2aeb-4d2e-b4b2-d05b2e2e7a0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_trunc$function$
;]]></string>
			<comment><![CDATA[truncate timestamp with time zone to specified units]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_trunc" id="757d1fb9-a5b9-4d53-9b82-c56d64890986" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_trunc$function$
;]]></string>
			<comment><![CDATA[truncate timestamp with time zone to specified units]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="date_trunc" id="bbcb27ed-7bdf-4d09-b35e-cd408eb1d09a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_trunc$function$
;]]></string>
			<comment><![CDATA[truncate timestamp with time zone to specified units]]></comment>
		</function>
		<function name="datemultirange" id="a0bb8ddf-5112-4dc1-8fa6-e4df99157d7f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datemultirange()
 RETURNS datemultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[datemultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="datemultirange" id="4914b5a1-0c80-4b56-b270-bbfb19e1ad6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datemultirange()
 RETURNS datemultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[datemultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="datemultirange" id="d1576057-5ee4-47df-92df-b5ec54c629f2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datemultirange()
 RETURNS datemultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[datemultirange constructor]]></comment>
		</function>
		<function name="daterange" id="33034ea7-2438-4682-bde7-8a91aec7cbeb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange(date, date)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[daterange constructor]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="daterange" id="a0ed8736-e032-44f2-a05c-eb6842d7ae52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange(date, date)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[daterange constructor]]></comment>
		</function>
		<function name="daterange_canonical" id="4e7cd7c4-6c6d-41a9-9b1b-c0887114e7a7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange_canonical(daterange)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$daterange_canonical$function$
;]]></string>
			<comment><![CDATA[convert a date range to canonical form]]></comment>
		</function>
		<function name="daterange_subdiff" id="3a8a0029-0aeb-4090-b82d-268a56939a95" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange_subdiff(date, date)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$daterange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two date values]]></comment>
		</function>
		<function name="datetime_pl" id="f173d633-34d9-4a3f-8396-cd28da901af6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datetime_pl(date, time without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetime_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="datetimetz_pl" id="2651e589-c42b-4d15-9ab6-ba3c2aed89e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datetimetz_pl(date, time with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetimetz_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="dcbrt" id="2c5dfc2a-8186-496a-a91d-2331fa39b29a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dcbrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcbrt$function$
;]]></string>
			<comment><![CDATA[implementation of ||/ operator]]></comment>
		</function>
		<function name="decode" id="a9fde7bf-8a03-4052-88f5-0873e0128ca5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.decode(text, text)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$binary_decode$function$
;]]></string>
			<comment><![CDATA[convert ascii-encoded text string into bytea value]]></comment>
		</function>
		<function name="degrees" id="63935364-301e-447e-b2d5-bcd75c313ffd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.degrees(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$degrees$function$
;]]></string>
			<comment><![CDATA[radians to degrees]]></comment>
		</function>
		<function name="dense_rank" id="16308c11-d8cf-4b52-82ec-429ec964dd14" isSystem="false" params_known="n" >
			<string><![CDATA[create function dense_rank window_dense_rank;]]></string>
		</function>
		<function name="dense_rank_final" id="63c3ba25-3eeb-4aff-aef3-23e996ba0e1a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dense_rank_final(internal, VARIADIC "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_dense_rank_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="dexp" id="e043b2bc-8705-4a24-af4c-1a7fce8fe84c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dexp(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dexp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
		</function>
		<function name="diagonal" id="cad67189-b972-4e7d-8e36-408bbe5a3856" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.diagonal(box)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_diagonal$function$
;]]></string>
			<comment><![CDATA[box diagonal]]></comment>
		</function>
		<function name="diameter" id="cbeaac48-1852-4089-94a1-9ed0f7f0c5bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.diameter(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_diameter$function$
;]]></string>
			<comment><![CDATA[diameter of circle]]></comment>
		</function>
		<function name="dispell_init" id="906be806-7fea-4d2b-be0c-a793d05a40f6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dispell_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dispell_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="dispell_lexize" id="6730c279-2081-4bf8-b7e5-c60aedc08202" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dispell_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dispell_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="dist_bp" id="cf2ca558-0231-4143-9276-b1aabd964456" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_bp(box, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_bp$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_bs" id="28c8cec8-a79e-45ff-8ece-11ae8983e0ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_bs(box, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_bs$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_cpoint" id="6ec6fd7e-3263-409a-83b3-ed977e6aa44e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_cpoint(circle, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_cpoint$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_cpoly" id="67186b4d-8b9a-4ccc-b89b-edc7de2c9483" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_cpoly(circle, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_cpoly$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_lp" id="ee180217-3a52-4a0a-857e-87ada48c5cd5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_lp(line, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_lp$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_ls" id="e04df1ef-424d-4a9b-9248-9cd731b936e5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ls(line, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ls$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_pathp" id="a6bfa7d2-2716-407c-b1ed-86e7af144bbc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pathp(path, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pathp$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_pb" id="b33c308a-eccc-483b-ad4d-5ddebd121e52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pb(point, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pb$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_pc" id="7ae22cd1-bc25-4ab0-8f51-f2c958816077" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pc(point, circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pc$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_pl" id="c24edb6c-190b-4bd1-adf3-a00c5697f44f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pl(point, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pl$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_polyc" id="7f0bd83b-3350-4711-af4f-9a96fe2008ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_polyc(polygon, circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_polyc$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_polyp" id="9d2cdd25-a1ed-4759-8dc0-2a166795a152" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_polyp(polygon, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_polyp$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_ppath" id="b8aa74ea-97c2-4c7d-a484-906bf7a43ecc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ppath(point, path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ppath$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_ppoly" id="2c052c60-60c1-465d-97c8-b4ad3b5ca515" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ppoly(point, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ppoly$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_ps" id="2933c8fa-9fba-45d0-943f-ccc98f4d684b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ps(point, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ps$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_sb" id="4c46af5a-ebcc-41f4-976b-00b5cd95b6c5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_sb(lseg, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_sb$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_sl" id="a0190c6c-0bbc-431f-9936-1456a522de12" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_sl(lseg, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_sl$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="dist_sp" id="02e05bd6-ba83-4271-aec1-7fce316bf2b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_sp(lseg, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_sp$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="div" id="92c6ecf5-26da-4f5a-885b-da8a0ab7cb65" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.div(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div_trunc$function$
;]]></string>
			<comment><![CDATA[trunc(x/y)]]></comment>
		</function>
		<function name="dlog1" id="e0474d04-a450-40f0-b007-b219a0bec87e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dlog1(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog1$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
		</function>
		<function name="dlog10" id="41c44b3d-e69b-4558-a012-61c5512ed3aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dlog10(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
		</function>
		<function name="domain_in" id="6d79b228-aed8-48bb-aaa1-dea91e042703" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.domain_in(cstring, oid, integer)
 RETURNS "any"
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$domain_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="domain_recv" id="86d6b3ff-64a6-46d0-93fd-510fb1659cef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.domain_recv(internal, oid, integer)
 RETURNS "any"
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$domain_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="dpow" id="e57d16d0-aeef-48cd-8fdb-2fa8f19a21dd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dpow(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[implementation of ^ operator]]></comment>
		</function>
		<function name="dround" id="d7f4385c-0719-48ea-85ad-2702255ed7eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dround(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<comment><![CDATA[round to nearest integer]]></comment>
		</function>
		<function name="dsimple_init" id="9ba5efcb-3c1a-4e64-a308-4546ad5f761a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsimple_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsimple_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="dsimple_lexize" id="b059152c-589a-4439-bb39-26a3cb78b8f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsimple_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsimple_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="dsnowball_init" id="995a425b-7959-41f1-9c24-6b60b06f8f1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsnowball_init(internal)
 RETURNS internal
 LANGUAGE c
 STRICT
AS '$libdir/dict_snowball', $function$dsnowball_init$function$
;]]></string>
		</function>
		<function name="dsnowball_lexize" id="e9ddda48-9087-403a-8ca8-eab552c3686a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsnowball_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 STRICT
AS '$libdir/dict_snowball', $function$dsnowball_lexize$function$
;]]></string>
		</function>
		<function name="dsqrt" id="a677ea64-d5bf-4f2a-86fe-427a5faf385f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsqrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsqrt$function$
;]]></string>
			<comment><![CDATA[implementation of |/ operator]]></comment>
		</function>
		<function name="dsynonym_init" id="76b29762-24e5-4509-9d8a-b9b0abb523d3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsynonym_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsynonym_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="dsynonym_lexize" id="075fb7d7-2417-4fb3-b6b3-bc313d563a38" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsynonym_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsynonym_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="dtrunc" id="bf73588f-0ced-40c9-8f03-288e11f8d717" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dtrunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
		</function>
		<function name="elem_contained_by_multirange" id="40907e9a-6a3d-4334-8d20-80781244e2bc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.elem_contained_by_multirange(anyelement, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$elem_contained_by_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="elem_contained_by_range" id="4b5d916f-8998-4d72-b652-320c6ec94539" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.elem_contained_by_range(anyelement, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT elem_contained_by_range_support
AS $function$elem_contained_by_range$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="elem_contained_by_range_support" id="cc891b97-f1e8-4cc2-ac54-ba5bb707b479" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.elem_contained_by_range_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$elem_contained_by_range_support$function$
;]]></string>
			<comment><![CDATA[planner support for elem_contained_by_range]]></comment>
		</function>
		<function name="encode" id="52d0eea1-059f-4237-a7dd-a9312265b320" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.encode(bytea, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$binary_encode$function$
;]]></string>
			<comment><![CDATA[convert bytea value into some ascii-only text string]]></comment>
		</function>
		<function name="enum_cmp" id="0228f15a-af78-4dc9-bb17-2983cd85504b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_cmp(anyenum, anyenum)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="enum_eq" id="06884b87-ef51-4d90-94e2-145bd82ac430" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_eq(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="enum_first" id="6ab1cc07-8f59-4441-abbc-5448aab1ac85" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_first(anyenum)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_first$function$
;]]></string>
			<comment><![CDATA[first value of the input enum type]]></comment>
		</function>
		<function name="enum_ge" id="00a8794b-c521-415e-8d61-2a8b4d98d472" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_ge(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="enum_gt" id="0f978377-408c-4b0d-9e98-33df9f649f7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_gt(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="enum_in" id="7e8d8418-c9c7-44e7-ace3-8ea940d6171a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_in(cstring, oid)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="enum_larger" id="6206605a-b5e9-471e-adda-7ffacaeed520" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_larger(anyenum, anyenum)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="enum_last" id="1a0073b1-6b40-4511-9eef-790ade3c1d77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_last(anyenum)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_last$function$
;]]></string>
			<comment><![CDATA[last value of the input enum type]]></comment>
		</function>
		<function name="enum_le" id="0e3ae044-7449-42fd-870d-502204b3e067" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_le(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="enum_lt" id="6aa7c959-9bae-4973-8381-c6a5cbca8899" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_lt(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="enum_ne" id="10ad9ffa-c708-4114-866b-5a30c18256c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_ne(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="enum_out" id="09656da5-4b2b-491c-8296-9b9bde2fed58" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_out(anyenum)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="enum_range" id="92002434-254f-49f0-af00-479ac1e7c724" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_range(anyenum, anyenum)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_range_bounds$function$
;]]></string>
			<comment><![CDATA[range between the two given enum values, as an ordered array]]></comment>
			<input_param jt="-1" type="anyenum" inOut="1" />
			<input_param jt="-1" type="anyenum" inOut="1" />
		</function>
		<function name="enum_range" id="f47a98a1-02af-42de-9206-e989d757005c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_range(anyenum, anyenum)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_range_bounds$function$
;]]></string>
			<comment><![CDATA[range between the two given enum values, as an ordered array]]></comment>
		</function>
		<function name="enum_recv" id="86f0e412-ba3f-4c5d-b7ff-1d2427a6c433" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_recv(internal, oid)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="enum_send" id="67025ed7-a3bf-44ca-ae58-b8203759efc2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_send(anyenum)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="enum_smaller" id="7f286894-9f49-44e5-838c-eb778cd7e5c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_smaller(anyenum, anyenum)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="eqjoinsel" id="955b48b7-2532-40d4-bac1-4971bb420c1f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.eqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$eqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of = and related operators]]></comment>
		</function>
		<function name="eqsel" id="08b4604c-aec8-4542-a8cf-40326d9bfa2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.eqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$eqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of = and related operators]]></comment>
		</function>
		<function name="erf" id="6c70f956-bb57-4144-8bc9-0f06e5f72fae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.erf(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$derf$function$
;]]></string>
			<comment><![CDATA[error function]]></comment>
		</function>
		<function name="erfc" id="b6937233-a09f-4bc7-bd82-b71aac4815aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.erfc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$derfc$function$
;]]></string>
			<comment><![CDATA[complementary error function]]></comment>
		</function>
		<function name="euc_cn_to_mic" id="58f25a82-2547-4fee-8053-207cd4b840e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_cn_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_cn_and_mic', $function$euc_cn_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_CN to MULE_INTERNAL]]></comment>
		</function>
		<function name="euc_cn_to_utf8" id="b26c0ae4-5932-471d-b303-b913367717cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_cn_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_cn', $function$euc_cn_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_CN to UTF8]]></comment>
		</function>
		<function name="euc_jis_2004_to_shift_jis_2004" id="afc42062-79be-48e1-8db6-97d641529195" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jis_2004_to_shift_jis_2004(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc2004_sjis2004', $function$euc_jis_2004_to_shift_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JIS_2004 to SHIFT_JIS_2004]]></comment>
		</function>
		<function name="euc_jis_2004_to_utf8" id="1184abb1-269d-4a83-99a7-6a33b7bb5916" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jis_2004_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc2004', $function$euc_jis_2004_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JIS_2004 to UTF8]]></comment>
		</function>
		<function name="euc_jp_to_mic" id="3df82a7d-bbd3-4ad2-ac76-27f7aa196d79" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$euc_jp_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JP to MULE_INTERNAL]]></comment>
		</function>
		<function name="euc_jp_to_sjis" id="34d71287-bdc0-4e27-99cb-21f5924f7de5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_sjis(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$euc_jp_to_sjis$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JP to SJIS]]></comment>
		</function>
		<function name="euc_jp_to_utf8" id="f1878ec7-bbfe-45ad-9f96-8573c838285b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_jp', $function$euc_jp_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JP to UTF8]]></comment>
		</function>
		<function name="euc_kr_to_mic" id="b4c22eb6-5ee9-43a6-8b45-d7dca508fe78" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_kr_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_kr_and_mic', $function$euc_kr_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_KR to MULE_INTERNAL]]></comment>
		</function>
		<function name="euc_kr_to_utf8" id="e5f39c64-3e7f-4bd6-9b06-2d2f78ac74a0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_kr_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_kr', $function$euc_kr_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_KR to UTF8]]></comment>
		</function>
		<function name="euc_tw_to_big5" id="937b63eb-e3d2-46cb-99cf-0d8a9fb7f94a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_big5(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$euc_tw_to_big5$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_TW to BIG5]]></comment>
		</function>
		<function name="euc_tw_to_mic" id="5cd0458b-879f-41b3-8aab-d90a8291d701" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$euc_tw_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_TW to MULE_INTERNAL]]></comment>
		</function>
		<function name="euc_tw_to_utf8" id="8f7b4993-523a-49f6-8f03-d67d7d6b1552" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_tw', $function$euc_tw_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_TW to UTF8]]></comment>
		</function>
		<function name="event_trigger_in" id="4e304da3-6e6c-4ce6-b09c-4b324c3b67be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.event_trigger_in(cstring)
 RETURNS event_trigger
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$event_trigger_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="event_trigger_out" id="44d17030-fcf4-416c-8a6b-25a99f229da8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.event_trigger_out(event_trigger)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$event_trigger_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="exp" id="1073c089-378a-4a04-ab54-0d4198695ca1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.exp(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dexp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="exp" id="186bc1ce-7999-4511-8c79-d2b9cd1fd4f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.exp(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dexp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
		</function>
		<function name="extract" id="ff1b2f65-7e61-4a12-8840-a3e746cdd1a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."extract"(text, date)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$extract_date$function$
;]]></string>
			<comment><![CDATA[extract field from date]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="extract" id="189718d4-cbcb-4e33-bc7b-bc1310cb24af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."extract"(text, date)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$extract_date$function$
;]]></string>
			<comment><![CDATA[extract field from date]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="extract" id="cf2b6b73-1236-4f7d-85c3-f6d5719519a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."extract"(text, date)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$extract_date$function$
;]]></string>
			<comment><![CDATA[extract field from date]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="extract" id="6528d19e-1f38-4916-a6b4-feba84366c5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."extract"(text, date)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$extract_date$function$
;]]></string>
			<comment><![CDATA[extract field from date]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="extract" id="439b88ff-8cc9-42b4-b4b6-cf5ae4b47b59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."extract"(text, date)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$extract_date$function$
;]]></string>
			<comment><![CDATA[extract field from date]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="extract" id="90389085-af98-4096-a5b1-ff8bcf159b55" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."extract"(text, date)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$extract_date$function$
;]]></string>
			<comment><![CDATA[extract field from date]]></comment>
		</function>
		<function name="factorial" id="69f3f0ff-e3b1-4dac-8367-c7f2055f2f72" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.factorial(bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_fac$function$
;]]></string>
			<comment><![CDATA[factorial]]></comment>
		</function>
		<function name="family" id="d258ccce-1dcb-4ec6-8dbe-58d096be1970" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.family(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_family$function$
;]]></string>
			<comment><![CDATA[address family (4 for IPv4, 6 for IPv6)]]></comment>
		</function>
		<function name="fdw_handler_in" id="c340f20e-1be0-4b39-8ecc-2270c8c4b411" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fdw_handler_in(cstring)
 RETURNS fdw_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$fdw_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="fdw_handler_out" id="83f4fb53-b6e8-441b-b38e-ca359b418f5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fdw_handler_out(fdw_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$fdw_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="first_value" id="8abd86cf-1bf5-443e-9ba5-25761d8a5ac4" isSystem="false" params_known="n" >
			<string><![CDATA[create function first_value window_first_value;]]></string>
		</function>
		<function name="float4" id="24098a83-a5cb-4548-ab04-7b58aa6a3fe1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<comment><![CDATA[convert numeric to float4]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float4" id="c8f49a03-e68f-49a5-accf-ebc51a23d1db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<comment><![CDATA[convert numeric to float4]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float4" id="cde294ad-a041-4f51-a3a7-84b9ca11cd45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<comment><![CDATA[convert numeric to float4]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float4" id="dd5c4c77-e38d-463b-a48d-34612a455934" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<comment><![CDATA[convert numeric to float4]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float4" id="693d4d4f-c87b-4f9a-85ce-13399c3bdcd9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<comment><![CDATA[convert numeric to float4]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float4" id="b6a97234-86ef-4969-a8fd-267ff3a0b2e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<comment><![CDATA[convert numeric to float4]]></comment>
		</function>
		<function name="float48div" id="783a1468-afa4-461e-bef7-8d896b22e5bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48div(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="float48eq" id="1d9a0f1d-1b7a-4d75-bf22-f76983c984b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48eq(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="float48ge" id="3d423e7d-cc7d-4055-a6f8-ae67074d679f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48ge(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="float48gt" id="a66d1da2-41d4-4d77-80d5-2da8dc14eb60" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48gt(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="float48le" id="45257aa0-711b-47c0-8488-0232cf08742c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48le(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="float48lt" id="6fcf9dfd-cce6-4797-814c-6033e0b66f51" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48lt(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="float48mi" id="58f20d33-38ad-4fab-a8b3-259df39d7c8a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48mi(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="float48mul" id="16e06476-c58a-49c1-ad3e-68babaf0c9e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48mul(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="float48ne" id="035094ab-3baf-4b2c-b8cc-d400a1392282" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48ne(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="float48pl" id="e8fe9b8c-47e4-47cb-9520-73d357741b20" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48pl(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="float4_accum" id="efee83fc-90b5-42c6-8e4c-1e38de72103e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4_accum(double precision[], real)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="float4abs" id="21d1a90e-c34e-45b2-b87d-e921187f8ac5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
		</function>
		<function name="float4div" id="6938b409-f0d2-4777-b872-e738b3d8adbd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4div(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="float4eq" id="b6ff99c0-0bc2-457a-8ef6-be4696ed4814" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4eq(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="float4ge" id="4e3a1738-bb44-4c49-b9e5-56e6bebfde1e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4ge(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="float4gt" id="2f89f44a-9797-47f3-9b6f-0030cf1e3ff7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4gt(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="float4in" id="0a57f400-4979-45af-8396-f374fa38d462" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4in(cstring)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float4larger" id="f6762cbd-4edb-4ae8-bb65-63bbaac66349" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4larger(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="float4le" id="5a074aa3-3358-48f5-87f7-88378d795068" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4le(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="float4lt" id="175e7dc3-d042-4902-9b0e-f6b7b2c1f8c0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4lt(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="float4mi" id="d2f4fb58-a373-4a48-bbca-40a8cee938e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4mi(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="float4mul" id="714a7fe9-32d6-4a58-b2c3-5c1bbf4f64d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4mul(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="float4ne" id="64d7e229-c0f9-4eec-906b-ef887331372d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4ne(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="float4out" id="79ed0dd8-9cef-40ce-aef1-ce8f659bebe0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4out(real)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float4pl" id="a1d1cc75-3884-428c-bfe2-2a82636d4adc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4pl(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="float4recv" id="6f144498-a6f4-4abe-bee9-eecf1068c73d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4recv(internal)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float4send" id="958d6d03-258e-4403-82f4-2538154a629f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4send(real)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float4smaller" id="adbb5c2d-167b-403a-8237-f3badc4e2680" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4smaller(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="float4um" id="502e1c8b-e878-44bd-badb-504b07bcc4bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4um(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="float4up" id="5bd74965-d6cb-43b8-b4a1-7b26f3aee61c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4up(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="float8" id="4bc3cad9-eca9-4580-b602-2880dc3bae21" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<comment><![CDATA[convert numeric to float8]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float8" id="eefa5341-9868-4cdb-952b-2e38d1dd2b7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<comment><![CDATA[convert numeric to float8]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float8" id="215cb978-ac08-45c3-876a-b9ffb4f7b215" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<comment><![CDATA[convert numeric to float8]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float8" id="b1f500f1-4f44-4205-ac1e-fce18a121b9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<comment><![CDATA[convert numeric to float8]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float8" id="bbe7bd31-3c0e-4e5b-80d9-a4021651ccae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<comment><![CDATA[convert numeric to float8]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="float8" id="618b23db-b5ce-40e6-8a63-ab22eae78ff0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<comment><![CDATA[convert numeric to float8]]></comment>
		</function>
		<function name="float84div" id="616ca66a-9ce0-41bc-916a-6e8697a4f95a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84div(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="float84eq" id="ea68c9d8-f6ef-4270-abfa-40af738299e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84eq(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="float84ge" id="ff08a8a7-1c25-41a1-b9f1-8a4db07cdfde" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84ge(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="float84gt" id="16f7b431-c3e0-40ce-a6a9-809ec6540900" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84gt(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="float84le" id="72571a8d-b45b-40f1-9f1c-9182baf93778" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84le(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="float84lt" id="8677231f-a431-4c52-bbaf-34c6749216e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84lt(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="float84mi" id="f8fc5a4e-7c31-4238-9425-796f7b12cf87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84mi(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="float84mul" id="508a52f9-ddd6-49dd-a003-5b6cf4e41c3e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84mul(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="float84ne" id="c0b0bcfb-ee7c-4e39-9198-d9ea0702ae3a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84ne(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="float84pl" id="1d44ff31-0478-4af0-bf91-96e5d7cb4cf3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84pl(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="float8_accum" id="238dad4d-d135-4889-b214-b038c14fb70e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_accum(double precision[], double precision)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="float8_avg" id="ad88d3c8-456f-45db-ab96-1ab4630066a6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_avg(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_combine" id="42322bd4-3169-4516-afcb-d2ef7ca71751" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="float8_corr" id="b2d047db-26b5-4b04-a59b-f7af54dfbfb9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_corr(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_corr$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_covar_pop" id="f4afe762-cc53-4b7a-a7ae-09a83a83e885" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_covar_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_covar_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_covar_samp" id="fead5858-9260-4043-b1bc-4d2413ef5141" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_covar_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_covar_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_accum" id="0f5a291b-833a-4f5c-a099-9d8b877e6987" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_accum(double precision[], double precision, double precision)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="float8_regr_avgx" id="507df9a7-b649-4b41-8a66-a48dbe50e45a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_avgx(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_avgx$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_avgy" id="745b71ac-0200-40e9-bf0d-bb7e3faa86fb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_avgy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_avgy$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_combine" id="e62be406-7eb7-4747-886a-3387cbcc7eae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="float8_regr_intercept" id="5921f70c-4ee6-4c4c-9469-418ccce62534" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_intercept(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_intercept$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_r2" id="664fab93-7572-4c35-a3cb-e4585ecefe43" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_r2(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_r2$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_slope" id="0a3d8bbd-cbc6-4a86-9929-357ec8c6bcf2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_slope(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_slope$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_sxx" id="c067d37b-bb24-4b87-b6c1-bd7477305f67" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_sxx(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_sxx$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_sxy" id="0fe56281-436d-4e31-9e82-7b603b6c95ba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_sxy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_sxy$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_regr_syy" id="aa19594c-925a-44fe-a8f3-e7144472e06b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_syy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_syy$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_stddev_pop" id="960b5c7d-a022-4d58-8532-c21c0bb6a636" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_stddev_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_stddev_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_stddev_samp" id="12f0366c-dd6d-4cf4-8641-15b7c08b278d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_stddev_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_stddev_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_var_pop" id="940d59e1-1ebd-4e23-93f6-dcf79c100028" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_var_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_var_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8_var_samp" id="9950fd4e-a6d5-4d68-b37d-cd463da862c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_var_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_var_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="float8abs" id="bab7af6f-25ef-450b-a587-be197016a19f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8abs(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
		</function>
		<function name="float8div" id="e7b87de0-bd63-4954-8dec-6cb3845f62b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8div(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="float8eq" id="9edb0f5a-9e8d-4814-9d11-8870214982cc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8eq(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="float8ge" id="d0f6dca4-2c88-47cc-8d23-41c488b2e3a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8ge(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="float8gt" id="be17dd52-8109-4fb3-b256-e19aa3295bd9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8gt(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="float8in" id="60569beb-b74c-4f11-824d-a2075f5d65ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8in(cstring)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float8larger" id="2c7bd63a-2aba-43ed-bd16-2722d99f14f0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8larger(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="float8le" id="4c8964aa-8638-4d77-80ee-cbb90d66e574" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8le(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="float8lt" id="62e0c786-d42c-4c00-bc36-f3ec57683d79" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8lt(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="float8mi" id="9ef087bc-359e-4cd5-98f0-bcc54d3786be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8mi(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="float8mul" id="d12c9d9b-288c-4a26-aeab-ee908977395b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8mul(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="float8ne" id="dbc4ddd2-477b-4303-8d84-6742fd3e3857" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8ne(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="float8out" id="248c0af3-2b71-4786-acb3-f72579db014c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8out(double precision)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float8pl" id="0b0cc573-baf3-4afe-b4f7-35d92acabdd6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8pl(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="float8recv" id="b69e3bb2-9817-43b0-8bc3-39103976bc6b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8recv(internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float8send" id="b7b7b234-4fe1-4bb2-ac21-31db91f70070" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8send(double precision)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="float8smaller" id="0109eb1d-6392-4f9a-ae82-0a1f5ea8f3b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8smaller(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="float8um" id="6111d5db-a380-4595-a652-5a95e015d8bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8um(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="float8up" id="06615222-1cdd-41c0-95f3-3c0b483b2e29" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8up(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="floor" id="e7d73ec5-d93a-40f8-b20e-e5de90a548c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.floor(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_floor$function$
;]]></string>
			<comment><![CDATA[nearest integer <= value]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="floor" id="c5b96474-84cf-451a-8635-9bc37c0c6da2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.floor(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_floor$function$
;]]></string>
			<comment><![CDATA[nearest integer <= value]]></comment>
		</function>
		<function name="flt4_mul_cash" id="f710dfec-15a4-4943-8d50-6cee18dcf843" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.flt4_mul_cash(real, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$flt4_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="flt8_mul_cash" id="a1df96ed-8765-4e35-832d-879352215c40" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.flt8_mul_cash(double precision, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$flt8_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="fmgr_c_validator" id="f9db5477-053c-4d36-92b9-6f425f742aae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_c_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_c_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="fmgr_internal_validator" id="cea0a752-fd78-482b-847a-fefec549a406" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_internal_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_internal_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="fmgr_sql_validator" id="9f010ee6-81ab-4e34-b31f-f99e76505d95" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_sql_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_sql_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="format" id="627b3744-cb81-46ef-9268-f5e4d4151163" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format(text, VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_format$function$
;]]></string>
			<comment><![CDATA[format text message]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="format" id="55db6813-c13b-473b-8a86-798262b8240b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format(text, VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_format$function$
;]]></string>
			<comment><![CDATA[format text message]]></comment>
		</function>
		<function name="format_type" id="c05beccd-1e4e-4aaa-b106-6cd8abd40fa3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format_type(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$format_type$function$
;]]></string>
			<comment><![CDATA[format a type oid and atttypmod to canonical SQL]]></comment>
		</function>
		<function name="gb18030_to_utf8" id="956e9a10-a85c-4dc7-8270-3c4077566fbc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gb18030_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gb18030', $function$gb18030_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for GB18030 to UTF8]]></comment>
		</function>
		<function name="gbk_to_utf8" id="ed99324e-c598-4acd-9274-7a46b879664c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gbk_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gbk', $function$gbk_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for GBK to UTF8]]></comment>
		</function>
		<function name="gcd" id="3bac95fb-beaa-45cf-93b0-4958fbe941cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gcd(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4gcd$function$
;]]></string>
			<comment><![CDATA[greatest common divisor]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="gcd" id="6b26d00a-955b-438b-b8f4-0458b2c9c0c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gcd(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4gcd$function$
;]]></string>
			<comment><![CDATA[greatest common divisor]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="gcd" id="89c5b5fc-a8ca-4520-b3c3-3702cc90326b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gcd(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4gcd$function$
;]]></string>
			<comment><![CDATA[greatest common divisor]]></comment>
		</function>
		<function name="gen_random_uuid" id="7c3d2f8e-4f7e-4533-b086-9194128510f5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gen_random_uuid()
 RETURNS uuid
 LANGUAGE internal
 PARALLEL SAFE STRICT LEAKPROOF
AS $function$gen_random_uuid$function$
;]]></string>
			<comment><![CDATA[generate random UUID]]></comment>
		</function>
		<function name="generate_series" id="e157dfca-6aca-4df6-8068-5fcd533e94ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="8f9d4d45-3168-4053-98d4-00095bd5e702" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="61b2195b-379d-4086-9b76-c54f96145a00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="938dba30-bc13-4bf8-a99c-9ce2757d6315" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="77ca0d74-2287-416f-8ce3-afd3294cf8ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="1de7b8a7-52d4-4f18-b7bc-b15f6cd4bc68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="4923802e-8bcf-4896-b668-29c9135a8743" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="5d11ed09-c075-417c-9dd0-963db1043ac8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="generate_series" id="01bc49d1-8520-4a9c-b808-8eeeaa120433" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT generate_series_int4_support
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
		</function>
		<function name="generate_series_int4_support" id="1b9cabda-1862-40bd-bc40-2f9f3dd19653" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series_int4_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_int4_support$function$
;]]></string>
			<comment><![CDATA[planner support for generate_series]]></comment>
		</function>
		<function name="generate_series_int8_support" id="88ed99ef-6c87-4c11-b59c-342541a466cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series_int8_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_int8_support$function$
;]]></string>
			<comment><![CDATA[planner support for generate_series]]></comment>
		</function>
		<function name="generate_subscripts" id="3bab0e39-43ee-460a-a25b-582327117865" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_subscripts(anyarray, integer, boolean)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_subscripts$function$
;]]></string>
			<comment><![CDATA[array subscripts generator]]></comment>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="generate_subscripts" id="cac2ea1a-4f8f-45ed-bc3a-ef87cfffb89c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_subscripts(anyarray, integer, boolean)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_subscripts$function$
;]]></string>
			<comment><![CDATA[array subscripts generator]]></comment>
		</function>
		<function name="get_bit" id="57da762e-85d2-462c-ae3e-13721cd1db47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_bit(bit, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitgetbit$function$
;]]></string>
			<comment><![CDATA[get bit]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="get_bit" id="4fe3e0a2-7475-4dca-b2de-9eabd8203c05" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_bit(bit, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitgetbit$function$
;]]></string>
			<comment><![CDATA[get bit]]></comment>
		</function>
		<function name="get_byte" id="1027f6a2-1099-46bd-b90b-068670978f38" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_byte(bytea, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaGetByte$function$
;]]></string>
			<comment><![CDATA[get byte]]></comment>
		</function>
		<function name="get_current_ts_config" id="e0070bc9-35d0-455a-bb95-ab4704fee529" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_current_ts_config()
 RETURNS regconfig
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$get_current_ts_config$function$
;]]></string>
			<comment><![CDATA[get current tsearch configuration]]></comment>
		</function>
		<function name="getdatabaseencoding" id="9afe2744-48ed-4e2c-bfe1-8d07e34a03a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.getdatabaseencoding()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$getdatabaseencoding$function$
;]]></string>
			<comment><![CDATA[encoding name of current database]]></comment>
		</function>
		<function name="getpgusername" id="7e6862eb-8645-4a0d-86c4-63e2b74bb64c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.getpgusername()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_user$function$
;]]></string>
			<comment><![CDATA[deprecated, use current_user instead]]></comment>
		</function>
		<function name="gin_clean_pending_list" id="22d05859-36fd-4e3a-ac94-4eb7f2293b59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_clean_pending_list(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$gin_clean_pending_list$function$
;]]></string>
			<comment><![CDATA[clean up GIN pending list]]></comment>
		</function>
		<function name="gin_cmp_prefix" id="cf56b3b4-5143-455c-be51-f283b6a30c38" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_cmp_prefix(text, text, smallint, internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_cmp_prefix$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
		</function>
		<function name="gin_cmp_tslexeme" id="febda6a9-0cf0-4407-ab94-a14c15ad0e45" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_cmp_tslexeme(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_cmp_tslexeme$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
		</function>
		<function name="gin_compare_jsonb" id="0ae45023-35be-4853-b1d5-9cbb948acd59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_compare_jsonb(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_compare_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_consistent_jsonb" id="50927498-a7dd-49b4-a48e-6dc633f58568" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_consistent_jsonb(internal, smallint, jsonb, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_consistent_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_consistent_jsonb_path" id="198f3310-4251-4bcb-be95-02f17c93776a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_consistent_jsonb_path(internal, smallint, jsonb, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_consistent_jsonb_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_extract_jsonb" id="7efe79e2-27a0-42d8-bfd4-7c3ba42b9185" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb(jsonb, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_extract_jsonb_path" id="68fed4b0-f9de-4735-a0ba-0c0b7e177832" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_path(jsonb, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_extract_jsonb_query" id="2e1448e0-3037-4370-8007-bea9cb218703" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_query(jsonb, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_query$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_extract_jsonb_query_path" id="142fbfc4-2c5c-4937-9498-362afc7ac08e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_query_path(jsonb, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_query_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_extract_tsquery" id="cc9babf3-86f2-4776-8e8a-8a99c944a904" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsquery, internal, smallint, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery_5args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsquery" id="0c3ec0e8-089a-431e-af22-d46e709ab622" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsquery, internal, smallint, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery_5args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsquery" id="dfa323f9-1b26-4271-982c-79b3c4b2bd77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsquery, internal, smallint, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery_5args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
		</function>
		<function name="gin_extract_tsvector" id="270a732e-e985-4924-aa85-2ba760599974" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsvector(tsvector, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsvector_2args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_extract_tsvector" id="68a14a7d-0571-4fef-a9b2-6d2aa08aa291" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsvector(tsvector, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsvector_2args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
		</function>
		<function name="gin_triconsistent_jsonb" id="5d82c056-1bf1-4f77-a363-893caa6250a9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_triconsistent_jsonb(internal, smallint, jsonb, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_triconsistent_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_triconsistent_jsonb_path" id="54d03075-2bd6-4097-a317-e173ce3f699b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_triconsistent_jsonb_path(internal, smallint, jsonb, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_triconsistent_jsonb_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
		</function>
		<function name="gin_tsquery_consistent" id="592aaac4-04ee-4a2b-9cd6-13ec5361b48d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsquery, integer, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent_6args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_tsquery_consistent" id="45a12f2c-b84a-4303-8aa5-6d86a4ccce7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsquery, integer, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent_6args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gin_tsquery_consistent" id="e24d5e78-31ec-4a67-bf71-50a02d58f098" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsquery, integer, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent_6args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
		</function>
		<function name="gin_tsquery_triconsistent" id="c4658ccc-8a1e-4004-9f6e-44b8260ee04b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_triconsistent(internal, smallint, tsvector, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_triconsistent$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
		</function>
		<function name="ginarrayconsistent" id="a8fef97d-c632-44b0-99d1-412190f9b49b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayconsistent(internal, smallint, anyarray, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayconsistent$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
		</function>
		<function name="ginarrayextract" id="f7359c95-b2c8-4934-bf4a-d2b99767d628" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayextract(anyarray, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayextract$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
			<input_param jt="-1" type="anyarray" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="ginarrayextract" id="5bc9a877-40f7-43c7-9db1-ff0ad10f958b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayextract(anyarray, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayextract$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
		</function>
		<function name="ginarraytriconsistent" id="d60cc4c7-441a-48e5-a60a-9a2704bfa8a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarraytriconsistent(internal, smallint, anyarray, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarraytriconsistent$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
		</function>
		<function name="ginhandler" id="2aa7707d-5689-4478-af50-aa0cfad0e401" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$ginhandler$function$
;]]></string>
			<comment><![CDATA[gin index access method handler]]></comment>
		</function>
		<function name="ginqueryarrayextract" id="65886c36-fa13-4bd8-9129-231489bc1f4d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginqueryarrayextract(anyarray, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginqueryarrayextract$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
		</function>
		<function name="gist_box_consistent" id="4c8c9972-6c8a-46a2-974a-082fb4888500" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_consistent(internal, box, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_box_distance" id="99f48eab-6e2b-4ece-ba28-a76fa765ebd8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_distance(internal, box, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_distance$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_box_penalty" id="f0c58e6b-934f-46c8-bf32-c766833bf1cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_penalty$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_box_picksplit" id="d7ecfd2e-12d6-40fd-8443-f6c3fcf77e2c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_box_same" id="92942b3c-3b5f-433b-8e35-f6a9463a3a84" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_same(box, box, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_same$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_box_union" id="8dac969d-8f49-465e-bfb4-6ae7ed4445de" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_union(internal, internal)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_union$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_circle_compress" id="3b48f713-49d0-4285-b567-cfb2e50aeb2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_circle_consistent" id="84365821-d6c6-4829-be44-60c17ab03bba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_consistent(internal, circle, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_circle_distance" id="bc38323d-3029-46bc-a869-944d0444b8ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_distance(internal, circle, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_distance$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_point_compress" id="5510b2c1-4e4b-40e3-9b9f-c34eaa473d55" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_point_consistent" id="a346ff84-2178-48bb-9ef5-2f899fdae932" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_consistent(internal, point, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_point_distance" id="ad589c00-57a4-48d0-bf8e-57766bdb89a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_distance(internal, point, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_distance$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_point_fetch" id="169a065f-b250-4df8-b035-c327a8507d47" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_fetch$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_point_sortsupport" id="b3a17065-907f-45ba-b70e-1b7a20b4716a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="gist_poly_compress" id="978fd917-83c6-4f2e-b7f1-dbfa247cd1bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_poly_consistent" id="1ca2333d-f111-438e-a197-bb7b5e9c523c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_consistent(internal, polygon, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gist_poly_distance" id="d3867c18-43b4-480d-9a48-147eb946caff" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_distance(internal, polygon, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_distance$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="gisthandler" id="3f3274f9-125e-46e8-9b5a-fd6d8d0aafee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gisthandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$gisthandler$function$
;]]></string>
			<comment><![CDATA[gist index access method handler]]></comment>
		</function>
		<function name="gtsquery_compress" id="a04ea06d-921b-423c-ba7d-fc4da1a35994" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_compress$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
		</function>
		<function name="gtsquery_consistent" id="f4540927-b5db-4ea7-afbc-cc38b53b6120" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_consistent(internal, tsquery, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_consistent$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsquery_consistent" id="b67e4fbf-a83c-4976-ae80-0c478714eeaa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_consistent(internal, tsquery, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_consistent$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
		</function>
		<function name="gtsquery_penalty" id="20c6da27-de67-4b22-a255-ab5f833282b3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_penalty$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
		</function>
		<function name="gtsquery_picksplit" id="40ea0b5d-73f6-4afb-ab5b-af75b246e3cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
		</function>
		<function name="gtsquery_same" id="cff693b5-5a1c-41fc-98bd-44f7b57af04d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_same(bigint, bigint, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_same$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
		</function>
		<function name="gtsquery_union" id="1d9d8011-f1ee-43c5-8e7c-e3c9a75b15b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_union(internal, internal)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_union$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
		</function>
		<function name="gtsvector_compress" id="21d4ee40-8b7f-433e-ba74-180d14bfd966" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_compress$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvector_consistent" id="ae6e3e9c-11cb-41e4-bcd0-224676bb2060" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_consistent(internal, tsvector, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_consistent$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param jt="-1" type="internal" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="smallint" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="internal" inOut="1" />
		</function>
		<function name="gtsvector_consistent" id="d519fb7d-534d-4dfb-a76d-46341d19186c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_consistent(internal, tsvector, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_consistent$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvector_decompress" id="7ffcfaef-6cf9-4ff3-b153-bd3d76210d53" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_decompress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_decompress$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvector_options" id="964bce4e-5038-4748-be8c-de4dabb4208c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_options(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$gtsvector_options$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvector_penalty" id="30050117-2828-4376-8662-b8eeb5c90e25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_penalty$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvector_picksplit" id="a8466dfd-9210-48de-a30e-28cc758a15ab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvector_same" id="6c8cac80-f940-462e-9d64-8202fdc452b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_same(gtsvector, gtsvector, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_same$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvector_union" id="2999f7cb-6650-4420-8d8b-70f8eb4e392f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_union(internal, internal)
 RETURNS gtsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_union$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
		</function>
		<function name="gtsvectorin" id="ff3a1c5a-4821-471b-9e34-507c6e778bb9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvectorin(cstring)
 RETURNS gtsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="gtsvectorout" id="d332b9db-e986-42de-8579-a1b045e6d6dc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvectorout(gtsvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="has_any_column_privilege" id="7f511df0-b4ba-4b41-9fff-f61a16ba621c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="2a304378-d40d-4578-92c4-0dbd80e210c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="3b2d498f-fe89-4e36-8781-8bb55b9b73e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="c547b175-6a1d-42a5-9064-b04e6bfee71c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="14fae7b8-f727-432e-b4ea-78365aee21c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_any_column_privilege" id="4bc4387a-f37e-4ce0-8b36-12f0fbd07483" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel name]]></comment>
		</function>
		<function name="has_column_privilege" id="b86e8558-abbb-49dd-b095-9764ac8ccd51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="c09d258e-fb8d-4f72-ac9a-25de4ac55738" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="b0effca3-5d88-47d0-815b-74471b144e46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="228bb254-2b47-4a9d-9bac-c0eaba564d56" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="7f307c27-e3b4-4895-89ed-4dfc7eb8d122" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="45805fe3-663f-4499-ae14-d371940c2421" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="373d6bf0-b5e9-486a-957d-d6431ce9b8b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="749373c0-ee41-4763-a815-09e70dfcd9db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="11a5a55a-f7c3-4cd8-b184-69d62d20a1e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="b553fd44-d3e6-45ea-8391-c73cf90a09fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="9dcb8779-5449-4fd3-93ae-415fded34498" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_column_privilege" id="1c738fb6-f645-4320-bc0e-0fa8440d8986" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
		</function>
		<function name="has_database_privilege" id="10b8bf3f-aeec-439e-a7ce-90e0476c9b29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="3feb9936-cf70-4d21-8952-12283e04bafc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="ef14fe72-4a93-47fc-afb9-440d160c37bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="29480e8c-b28f-48e4-9b4c-aa8b7f37770d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="c0162cb4-5571-4bed-9123-e57bacfd6780" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_database_privilege" id="80dd328e-be8f-4e0c-bc6f-986332752c03" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database name]]></comment>
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="ef02c786-48a1-4356-b215-0d043d6bb93b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="1832d3ef-9d95-486e-a7de-7865db00fe46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="6c0b13bf-ab30-4810-a9dd-25e4593f879c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="dfe42356-4061-4aed-bbbe-561025348779" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="33861b5d-67ae-4497-be56-22dfc4022093" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_foreign_data_wrapper_privilege" id="e8a7c683-45fb-486d-b368-85bb25b23384" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper name]]></comment>
		</function>
		<function name="has_function_privilege" id="1a0981a7-cc30-493d-b8bd-05b15d18a136" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="b635e2d4-d240-4987-8c56-6cbf3fa6858e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="be06721e-4a10-427a-bfcf-84b4d369d0fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="9aa263c8-988d-4221-9be5-15ed92706c1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="ea5073ac-d3b7-44c0-9312-e0f3a6cb5096" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_function_privilege" id="e9cc0c97-dddc-49dc-8e26-2ffce2103e87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function name]]></comment>
		</function>
		<function name="has_language_privilege" id="ba9cd393-14ea-4fa0-92d3-6f40f7398607" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="7fb3e4bf-09c4-4c9b-a5e5-cabcf102adf8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="26bc490d-f6f4-48d9-a90a-c3b9e16fa7dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="8293d839-9770-4591-81c5-7563919452f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="7ce6c8d9-ae5a-4642-a499-97a710c84ad7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_language_privilege" id="043eeb28-f9bc-4b4f-bbef-0f5f2ab3d521" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language name]]></comment>
		</function>
		<function name="has_parameter_privilege" id="918b4c55-d68c-4225-90f9-bddcfa708f03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_parameter_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_parameter_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on parameter by username, parameter name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_parameter_privilege" id="13d85888-7166-445f-b88c-2c7f66c6d2c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_parameter_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_parameter_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on parameter by username, parameter name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_parameter_privilege" id="ea22f94e-58ab-4584-9dd0-8a27489b5715" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_parameter_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_parameter_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on parameter by username, parameter name]]></comment>
		</function>
		<function name="has_schema_privilege" id="bd973509-fd24-4d17-ad21-2dc82f52a86e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="60b13025-b335-4fda-82a4-bad6f0abb8bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="9e19a9fa-a96f-4fdc-abba-cb5d5e05822c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="327c7971-e27d-406d-8090-6cb503a78a03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="9d1022ea-7109-4187-9a2c-5aec4d34621f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_schema_privilege" id="9e241191-9967-4630-a114-1a5cd1dd258b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema name]]></comment>
		</function>
		<function name="has_sequence_privilege" id="dc7dda14-af37-4bb0-bd83-6e6316a184f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="23afd2c7-9845-44d7-8c9b-598d1665d24f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="4960c78a-e6ae-4a13-8668-a750508bb49e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="c3cfd8dd-a6f0-4e85-b1d0-38a4cfa733c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="526fadef-11af-4b93-8aa8-db817c47d16c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_sequence_privilege" id="0ce1e6f8-ba11-4c63-8954-49dc0d441fa5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq name]]></comment>
		</function>
		<function name="has_server_privilege" id="772fd15f-554f-4d0c-8da7-47e71ebd7440" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="96267baa-dab9-4e16-85d0-a864f06e5858" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="a87aa497-1007-41e9-afc1-a27154713b50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="14a7a341-7c39-476b-9e55-b24ec5c8741e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="9e894b71-5a62-471b-b6a2-ade2aa8efbd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_server_privilege" id="d3438df5-acad-41e0-b7d2-a581820b425c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server name]]></comment>
		</function>
		<function name="has_table_privilege" id="95b0c7c1-556a-47fb-99c2-eb39d1217ba4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="5dfaab66-1cce-4d3e-9833-c5237c2f6c63" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="280e8926-53ee-4af3-a1a1-bc0670aba972" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="8e792be4-4602-4056-bc91-8673b26e4fe5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="e9a81c93-2110-465f-b58d-94ba1e3c8542" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_table_privilege" id="046e4ca9-9477-4aeb-af08-a84d13716ad1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel name]]></comment>
		</function>
		<function name="has_tablespace_privilege" id="d6aeb18f-c93a-42e6-bd33-13b0fe055c2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="8e90bd5d-167c-4e4e-9b0b-af79f827d149" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="9463a341-86dc-4f40-9a36-2d35558154bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="7f075190-7d95-42ce-877a-d9ef8fefd74d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="1a0334fe-ffa0-483c-b0b7-7be147c2893c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_tablespace_privilege" id="3921dbe7-0dca-4435-896e-f0914df1e545" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace name]]></comment>
		</function>
		<function name="has_type_privilege" id="aa9f5046-952e-4ff6-b7c3-7dc766fa1381" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="f713c316-908f-43f0-bcbc-d8a09bcda82a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="52183c22-a5ed-4c23-905a-73da67c25ed7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="ae5f2c58-7c35-4ff4-a4ae-4cc120104916" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="c1984b0e-63a2-4492-aeb6-0f6b7b494a79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="has_type_privilege" id="6281f770-cab5-4a1e-bf98-e7dc0975d4d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type name]]></comment>
		</function>
		<function name="hash_aclitem" id="c76a0937-e06b-4e91-a76d-9464f0978c43" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_aclitem(aclitem)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_aclitem$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hash_aclitem_extended" id="3f205259-530f-4603-a48d-3df5059d2638" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_aclitem_extended(aclitem, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_aclitem_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hash_array" id="5cd13056-2421-4521-8fc4-71c2bdb93a73" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_array(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_array$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hash_array_extended" id="a934e518-144e-4b17-9d7a-f839c8f5d147" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_array_extended(anyarray, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_array_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hash_multirange" id="7130ce12-fb10-4a9d-9737-1cb2b34789b3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_multirange(anymultirange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_multirange$function$
;]]></string>
			<comment><![CDATA[hash a multirange]]></comment>
		</function>
		<function name="hash_multirange_extended" id="97d9a709-bb79-476f-b56b-efe665314a5a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_multirange_extended(anymultirange, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_multirange_extended$function$
;]]></string>
			<comment><![CDATA[hash a multirange]]></comment>
		</function>
		<function name="hash_numeric" id="c07d8336-0b72-42d4-912a-232dd22c76b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_numeric(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_numeric$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hash_numeric_extended" id="f2af0cd5-dca1-4e39-bc70-aaf5c4118281" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_numeric_extended(numeric, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_numeric_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hash_range" id="9ac336ab-bbcb-478e-bba1-9a6ddbeb5345" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_range(anyrange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_range$function$
;]]></string>
			<comment><![CDATA[hash a range]]></comment>
		</function>
		<function name="hash_range_extended" id="d71e7965-5e81-4f0f-8209-e2a6d3c884d4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_range_extended(anyrange, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_range_extended$function$
;]]></string>
			<comment><![CDATA[hash a range]]></comment>
		</function>
		<function name="hash_record" id="6f49662e-c6a3-403d-91ab-03dfa27e7323" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_record(record)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_record$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hash_record_extended" id="b352fb03-27c5-41f8-93e6-28cada1dd257" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_record_extended(record, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_record_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashbpchar" id="19ee0cfc-863e-4681-a8da-41c33ea88033" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashbpchar(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashbpchar$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashbpcharextended" id="86c1b464-aba7-47f3-8c87-f28def7c427d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashbpcharextended(character, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashbpcharextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashchar" id="60c58e16-a091-46f5-8c0e-afec2dd04ec4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashchar("char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashchar$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashcharextended" id="edbddc2e-9ac1-4cf6-ba50-5ba5e7d451cc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashcharextended("char", bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashcharextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashenum" id="ca9b613e-a289-4860-9ae3-43426cab7155" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashenum(anyenum)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashenum$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashenumextended" id="b44f66c5-e755-4919-8931-2d61770c16f4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashenumextended(anyenum, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashenumextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashfloat4" id="7a014336-ee91-4d65-8c8a-637ba554d6a0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat4(real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat4$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashfloat4extended" id="add6f43d-5689-4e7a-add8-0fb40160b802" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat4extended(real, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat4extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashfloat8" id="f1c9ce92-8173-4440-8170-b154be84eae1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat8(double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat8$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashfloat8extended" id="a08a2c3e-2538-41d6-bd96-5c36a3cab532" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat8extended(double precision, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat8extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashhandler" id="2296dc1f-0bc8-4f7d-8668-87f71213cd74" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$hashhandler$function$
;]]></string>
			<comment><![CDATA[hash index access method handler]]></comment>
		</function>
		<function name="hashinet" id="cccdf47e-b884-4274-bae9-d2e9d4a9076f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashinet(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashinet$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashinetextended" id="e9b29758-0b5b-4072-ad24-b8f2c1fa7459" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashinetextended(inet, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashinetextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashint2" id="8dc44c3a-ea98-4514-a943-4692fdd317cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint2(smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint2$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashint2extended" id="56069254-1c29-44e4-8cca-a5a3a8acbacf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint2extended(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint2extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashint4" id="d6b02982-6d19-4a40-a38f-87b725500c04" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint4(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint4$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashint4extended" id="cc1b52de-4ff5-474e-bc60-c81d2556dd1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint4extended(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint4extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashint8" id="5c707db1-0419-465e-ae4e-e57cdc64e873" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint8(bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint8$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashint8extended" id="e3a32485-ac9c-440e-8d7c-ce4aee41d825" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint8extended(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint8extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashmacaddr" id="6fb16c53-14b7-4a96-aa27-074b47ec60d7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr(macaddr)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashmacaddr8" id="690091e9-2b49-47dd-ba37-2c879d42314c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr8(macaddr8)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr8$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashmacaddr8extended" id="91aadf27-daa1-4fd3-a092-753a2da145f0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr8extended(macaddr8, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr8extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashmacaddrextended" id="6535bf8e-4f12-4f11-8a8b-433b7516dec8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddrextended(macaddr, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddrextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashname" id="76ff7ee9-3d0a-4a5e-a555-4ab3578812fb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashname(name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashname$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashnameextended" id="452e5816-848b-4386-a100-182dc90c6e15" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashnameextended(name, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashnameextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashoid" id="4c594aca-ba0a-404d-98d6-33f3dd296b88" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoid(oid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoid$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashoidextended" id="e56940a9-728a-41ec-9f9e-fb6751ee4a41" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoidextended(oid, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoidextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashoidvector" id="ffffaab5-4cff-464e-85cf-ae6e38dd4e96" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoidvector(oidvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoidvector$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashoidvectorextended" id="9940abd2-c534-472b-a67a-c21b4f719668" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoidvectorextended(oidvector, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoidvectorextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashtext" id="c7cc26a8-6c8f-4101-9259-0685a1d1e482" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtext(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtext$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashtextextended" id="f4172f8a-6336-4aa8-8489-a1846d2f20e2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtextextended(text, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtextextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashtid" id="1a4480ab-5631-41c0-9965-3614d763d717" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtid(tid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtid$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashtidextended" id="745e321e-5c5d-47f4-9d73-503d91822428" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtidextended(tid, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtidextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashvarlena" id="c401ca8d-3d2f-4946-a333-85cc26783524" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashvarlena(internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashvarlena$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="hashvarlenaextended" id="ad396746-00b3-4c44-a329-5bcb82448fdc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashvarlenaextended(internal, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashvarlenaextended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="heap_tableam_handler" id="ae374edb-977a-4950-b1ff-a55c2e7ec9d4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.heap_tableam_handler(internal)
 RETURNS table_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$heap_tableam_handler$function$
;]]></string>
			<comment><![CDATA[row-oriented heap table access method handler]]></comment>
		</function>
		<function name="height" id="561a463c-d688-401d-8704-a9d000f023e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.height(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_height$function$
;]]></string>
			<comment><![CDATA[box height]]></comment>
		</function>
		<function name="host" id="810b5731-0c09-4c15-9f0c-a1dc6f039e46" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.host(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_host$function$
;]]></string>
			<comment><![CDATA[show address octets only]]></comment>
		</function>
		<function name="hostmask" id="84b5820c-913b-4fe1-9857-0335999342aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hostmask(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_hostmask$function$
;]]></string>
			<comment><![CDATA[hostmask of address]]></comment>
		</function>
		<function name="iclikejoinsel" id="0cfb8b15-11d2-40d8-a44d-82cf5207099f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iclikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$iclikejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of ILIKE]]></comment>
		</function>
		<function name="iclikesel" id="4ebfc12f-3762-4db4-8e41-5e94e9a02d59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iclikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$iclikesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of ILIKE]]></comment>
		</function>
		<function name="icnlikejoinsel" id="98a53fd8-7785-4813-aeb5-4f30be0a7d80" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icnlikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icnlikejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of NOT ILIKE]]></comment>
		</function>
		<function name="icnlikesel" id="7bb5fd6d-867f-49b6-af8f-96bd4dfe0c1c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icnlikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icnlikesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of NOT ILIKE]]></comment>
		</function>
		<function name="icregexeqjoinsel" id="583cead1-b04a-4559-b14d-313dcfc7bb0c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexeqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexeqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of case-insensitive regex match]]></comment>
		</function>
		<function name="icregexeqsel" id="ab31c2f8-c859-42ed-9c76-541da65cc6be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexeqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexeqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of case-insensitive regex match]]></comment>
		</function>
		<function name="icregexnejoinsel" id="615bd6b5-a924-4b30-91f9-a2c97ea84966" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexnejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexnejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of case-insensitive regex non-match]]></comment>
		</function>
		<function name="icregexnesel" id="e1df6ab8-d8f1-403b-aa96-6d3c6b722c10" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexnesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexnesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of case-insensitive regex non-match]]></comment>
		</function>
		<function name="icu_unicode_version" id="227f0036-cdb0-4a54-b180-d30851f67a73" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icu_unicode_version()
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$icu_unicode_version$function$
;]]></string>
			<comment><![CDATA[Unicode version used by ICU, if enabled]]></comment>
		</function>
		<function name="in_range" id="bcc68255-3560-4b2d-bc10-0e6880b83acb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="1d45f5db-d7b6-4d27-89a5-0292b3aa1dd6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="5f1bb568-d21b-45e0-8641-6427a1e4cb22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="121f01f0-ee48-4eaf-b204-b586ebcf30fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="d9f9e165-ec1b-4562-a58a-e9670c31984c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="dc2de30e-c4af-4cb7-b923-da878f31dfaf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="4ff77f8d-d32b-4bf4-a006-9069a8bdefda" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="2c66949d-795d-4ec1-b8db-d375ec11ca5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="f699dd0a-a792-41aa-a122-0791a4248890" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="176dc822-5f01-4ec6-bb86-ccd046a7ee01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="e239c39a-56e8-4d8e-a565-bd818a7132c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="1e36a3cc-c529-403d-844a-898f94f39616" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="31e1787f-f2d7-4e65-8862-76d23be169d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="4d7a17d4-2112-4522-aa8e-11e0a326bb46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="f534d2b9-b0d7-4a39-a414-0602bcf0561c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="in_range" id="eff6e8fd-7893-4386-96af-498fa8a3542a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.in_range(bigint, bigint, bigint, boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$in_range_int8_int8$function$
;]]></string>
			<comment><![CDATA[window RANGE support]]></comment>
		</function>
		<function name="index_am_handler_in" id="b34325e3-c669-4b99-9be3-0ba5b40066fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.index_am_handler_in(cstring)
 RETURNS index_am_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$index_am_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="index_am_handler_out" id="2feaa4a8-85d7-4c98-ad69-e7821916a6f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.index_am_handler_out(index_am_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$index_am_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="inet_client_addr" id="90557b5d-a8c9-4663-a37c-56c03c42f5ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_client_addr()
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_client_addr$function$
;]]></string>
			<comment><![CDATA[inet address of the client]]></comment>
		</function>
		<function name="inet_client_port" id="dc66bf32-ee4f-427a-90d3-5d82cd87e206" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_client_port()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_client_port$function$
;]]></string>
			<comment><![CDATA[client's port number for this connection]]></comment>
		</function>
		<function name="inet_gist_compress" id="26ff36b3-e3c3-48a3-a36d-cc08a82f5308" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="inet_gist_consistent" id="6186eda5-149a-47c8-9e9e-7b25e37c4957" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_consistent(internal, inet, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="inet_gist_fetch" id="1d52ecbb-70d6-47cc-bda3-2e582705fbe3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_fetch$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="inet_gist_penalty" id="39cfbcbf-9b17-42b5-863f-ab3ba07358ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_penalty$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="inet_gist_picksplit" id="82e8126c-85e1-4076-8177-36c283c8d1c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="inet_gist_same" id="e2d92c0f-0905-4068-9ede-7d18f008a5d1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_same(inet, inet, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_same$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="inet_gist_union" id="ea1b2d4d-36c4-4429-bb19-89932579cc61" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_union(internal, internal)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_union$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="inet_in" id="b829e4f5-9e96-46d6-9b5c-aea320be7834" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_in(cstring)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="inet_merge" id="71adf911-05d2-461f-8c7c-c42b4a62108d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_merge(inet, inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_merge$function$
;]]></string>
			<comment><![CDATA[the smallest network which includes both of the given networks]]></comment>
		</function>
		<function name="inet_out" id="81dac87c-fd79-4a75-be57-02ba6f276a39" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_out(inet)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="inet_recv" id="dadd3bd2-e461-4ac4-b9a5-d8bd7231d464" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_recv(internal)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="inet_same_family" id="f3b11558-fff7-4758-92f5-df1b61897c57" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_same_family(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_same_family$function$
;]]></string>
			<comment><![CDATA[are the addresses from the same family?]]></comment>
		</function>
		<function name="inet_send" id="ebc7bfe2-fc8f-4a0d-90c0-f48f3bc8f241" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_send(inet)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="inet_server_addr" id="fc7b503c-c3be-48a3-bede-b98b8d4c29e9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_server_addr()
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_server_addr$function$
;]]></string>
			<comment><![CDATA[inet address of the server]]></comment>
		</function>
		<function name="inet_server_port" id="11dcd161-d149-4d53-8b92-b793e2e28c24" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_server_port()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_server_port$function$
;]]></string>
			<comment><![CDATA[server's port number for this connection]]></comment>
		</function>
		<function name="inet_spg_choose" id="c9f39b3f-c1d3-4a4d-8c84-9fdaa041856c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
		</function>
		<function name="inet_spg_config" id="eaf2126c-881b-4724-9eb4-372344da43d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
		</function>
		<function name="inet_spg_inner_consistent" id="1914ab65-4c16-401f-83df-764f8a670bb4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
		</function>
		<function name="inet_spg_leaf_consistent" id="cdb5428d-7e9c-42f2-bf84-f30600551c03" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
		</function>
		<function name="inet_spg_picksplit" id="362fa3d8-2c04-439b-a4b4-17f274f2cb9e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
		</function>
		<function name="inetand" id="878349c4-7229-481f-a74f-5f694d05cb24" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetand(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetand$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
		</function>
		<function name="inetmi" id="0eeb6a0b-b850-4ea4-ba6c-031231cc65f8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetmi(inet, inet)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetmi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="inetmi_int8" id="5d1cd6f9-01e2-4e3d-9b6c-e151b3eeabca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetmi_int8(inet, bigint)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetmi_int8$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="inetnot" id="8268117c-b2d6-4450-b5ae-a8e8c16e4d1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetnot(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetnot$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="inetor" id="d0ca3e28-83f3-4e42-a988-6e9c43fd571b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetor(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetor$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
		</function>
		<function name="inetpl" id="be5d765a-90ed-4543-aa8b-181d78cb0e26" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetpl(inet, bigint)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetpl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="initcap" id="14dfa3d4-78e2-4997-9062-26c7eb1bbb03" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.initcap(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$initcap$function$
;]]></string>
			<comment><![CDATA[capitalize each word]]></comment>
		</function>
		<function name="int2" id="ee3b16be-d640-463f-b8b1-761514f6c025" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<comment><![CDATA[convert numeric to int2]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int2" id="05f86064-9653-4871-a6b0-e2a2986bba3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<comment><![CDATA[convert numeric to int2]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int2" id="87a3faf2-2d13-4f63-9733-b6267c003aef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<comment><![CDATA[convert numeric to int2]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int2" id="1378d043-c7cc-47ee-8090-14dc4d38087d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<comment><![CDATA[convert numeric to int2]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int2" id="13945eda-5498-4aa9-9d1e-94e46651c7ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<comment><![CDATA[convert numeric to int2]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="int2" id="f06d3644-0c99-4b56-a3c8-1109b1469c3d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<comment><![CDATA[convert numeric to int2]]></comment>
		</function>
		<function name="int24div" id="b9d8c817-2c9b-468f-9544-583d1adff7ef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24div(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int24eq" id="f22782c5-d62e-4ed4-aa04-505186d0ec1a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24eq(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int24ge" id="ed66ba8f-280b-48ee-874b-9cee1c6e09a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24ge(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int24gt" id="7a2eb17f-851f-4546-9ba4-94ccee041a37" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24gt(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int24le" id="ebd22541-1aa4-421c-becf-74a6a39dbf78" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24le(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int24lt" id="5f2d05c9-476e-4a11-805a-fff39986e671" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24lt(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int24mi" id="bf1159aa-0619-4087-a3b3-e3940f04a661" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24mi(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int24mul" id="294cb3b0-233e-44ef-a02b-ae11512fb385" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24mul(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int24ne" id="04dfb263-6ac3-40cb-bd61-2f123593813f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24ne(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int24pl" id="2e9b207c-8b30-446a-a4fb-06ee36f0c720" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24pl(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int28div" id="83135331-5b51-4d4a-826f-c6cba26f07ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28div(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int28eq" id="1223cd54-5adc-4061-adc6-e1cad9f24e90" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28eq(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int28ge" id="821bae69-493d-42bd-835b-72a14aed1f26" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28ge(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int28gt" id="ba001a21-3a4e-4c7c-afb5-3a3e2870ec3c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28gt(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int28le" id="0c0bd5da-6dd5-4cf9-9bdd-19f58d7d8842" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28le(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int28lt" id="e8304bfe-38eb-4003-81a0-cdf801ac03e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28lt(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int28mi" id="eb1d324a-1f7c-49b6-9756-655be14bc358" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28mi(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int28mul" id="2ee29411-b1a7-45f2-a19b-573eb7c6a3e2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28mul(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int28ne" id="e4e05d82-ad5c-4f58-a062-85a6cb89072c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28ne(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int28pl" id="be22e7d3-6cae-4355-be40-2045a4e3a4e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28pl(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int2_accum" id="c54b82ab-8d2c-4488-a365-786b75535e62" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_accum(internal, smallint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int2_accum_inv" id="8840fe45-8f3f-4bb2-948f-ece7bd8c6e61" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_accum_inv(internal, smallint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int2_avg_accum" id="8749ef15-1ff5-4633-9092-382b541a9003" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_avg_accum(bigint[], smallint)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int2_avg_accum_inv" id="c5a10da5-8877-4798-8c70-c3a641fe99a0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_avg_accum_inv(bigint[], smallint)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_avg_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int2_mul_cash" id="5b580e19-1a8a-4b14-9fc1-91df50922125" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_mul_cash(smallint, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int2_sum" id="a7ff6ea2-74ba-4eee-9235-d64edb70368b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_sum(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_sum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int2abs" id="49038228-c5b4-43d4-bbfe-33af7618e54e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2abs(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
		</function>
		<function name="int2and" id="d8fd54d4-e0e8-4f78-b9af-8655c66c789c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2and(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
		</function>
		<function name="int2div" id="e21ff3f6-7c2f-4fe7-8f5a-02cb2d6e36a0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2div(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int2eq" id="69a651ee-69a8-4baa-b2ad-1f284f5da174" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2eq(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int2ge" id="6e0b15a4-a50d-4289-9e76-6234a687da97" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2ge(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int2gt" id="e5db4c84-5b89-4ce3-af51-7dab6b650bbb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2gt(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int2in" id="3dd5aa0f-68d6-45cf-93a0-3d84e7cf66d2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2in(cstring)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2int4_sum" id="a9cb3acd-4da3-48f7-a497-279a73860604" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2int4_sum(bigint[])
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2int4_sum$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="int2larger" id="8b8f98d4-f522-4c91-bb65-947ce1c58747" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2larger(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="int2le" id="b9408e3c-0ce0-4443-bae0-75aa1937e7ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2le(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int2lt" id="63548d2f-c627-4b89-aed0-a9cc762aedeb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2lt(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int2mi" id="836fd9f4-2619-426f-ad4a-d3b2047b0f5d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mi(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int2mod" id="b05d7992-2e86-4b06-b78d-a007a02b1d46" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mod(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
		</function>
		<function name="int2mul" id="e8f6ebb3-8849-4c74-9d0c-a20f7166bc61" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mul(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int2ne" id="251fb997-887d-47a0-b13d-798c74c30429" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2ne(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int2not" id="22ff6883-564b-4bcf-985b-81f914ba55e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2not(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="int2or" id="1a60348a-b404-49d8-a1f3-cb42291a2ce8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2or(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
		</function>
		<function name="int2out" id="548ab5ce-1e49-4f80-997f-bc803159600e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2out(smallint)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2pl" id="9fad74a3-6d92-4850-b242-d1f7ff3d825a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2pl(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int2recv" id="9837df80-61be-4a54-93c8-349b53d17099" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2recv(internal)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2send" id="7303e095-112e-4cc9-8158-8fcee0383202" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2send(smallint)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2shl" id="509a5135-1589-4054-8f55-5e5a48b797d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2shl(smallint, integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2shl$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="int2shr" id="efc85564-5715-4a94-a5e1-e61bb1eb3551" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2shr(smallint, integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2shr$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="int2smaller" id="d1544efc-1172-4be8-839a-b8ae9f2fbb15" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2smaller(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="int2um" id="70c4403a-2ff0-448c-8f02-f925fff79453" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2um(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int2up" id="34a6dbff-0bbc-4984-85ec-2d115c05f566" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2up(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int2vectorin" id="17fdb6d0-4482-4550-b2ca-f09943a09974" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorin(cstring)
 RETURNS int2vector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2vectorout" id="6ffaeb06-55f1-416e-91af-bc0e10f6d811" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorout(int2vector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2vectorrecv" id="7a658685-1211-40f4-980e-45e00e1aff4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorrecv(internal)
 RETURNS int2vector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2vectorsend" id="0c5bb14e-dd0d-43c6-90f0-d51dddd9fe99" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorsend(int2vector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int2xor" id="c19c23f4-5b59-4af4-ad96-0421e93438ba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2xor(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2xor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="int4" id="a3b6b73f-03e1-445f-99a5-0c9c0e21d13e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="2a562f86-cc69-4a69-b164-13dbbc4b9b43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="9f7f9abd-65f0-4aad-af31-2fa41d1aa00f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="16599017-7bcd-4cd9-acb6-cae97c4115e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="89737668-7c8b-48be-80d5-9f5e607182ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="ab38e132-fe3c-4552-8bb8-ffdee50550ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="96f09344-2a36-4e65-9540-4299cf25f05f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="fbe60a92-452e-4655-9e1a-5ba6845eb978" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="int4" id="0f1c9337-eeec-4643-a197-531084eace5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
		</function>
		<function name="int42div" id="f6597ddc-95bd-4211-9cb5-54a45eb5155f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42div(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int42eq" id="f42335ef-b299-49e5-9830-60a9b7449a66" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42eq(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int42ge" id="83121d16-d768-4d10-a141-a6c0b8cd0367" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42ge(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int42gt" id="011df225-e211-407b-9659-7016f13a2912" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42gt(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int42le" id="1105c08c-cced-4fb1-81cd-e859c2cec92d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42le(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int42lt" id="b0af4b56-3498-4366-9fc2-a0db0b09d300" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42lt(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int42mi" id="8fbb728f-1eca-4201-9175-78b28597aaa3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42mi(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int42mul" id="f3e5970a-d000-4d62-8ab5-242b84c305ed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42mul(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int42ne" id="07bc7189-851b-4ad3-a047-48e59f870512" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42ne(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int42pl" id="2d6e6355-fd6b-4efc-bdb2-fddc3271dd33" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42pl(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int48div" id="18f74a12-dc32-486c-90e9-19ea4e5f2ab9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48div(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int48eq" id="9a6ddd51-c068-4581-bb87-89125c0e8fc3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48eq(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int48ge" id="600c976d-6d79-446c-a0f0-0c6a5d110717" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48ge(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int48gt" id="f518dff9-6449-4592-b5a6-737cc7cb6caa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48gt(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int48le" id="cf28d582-217c-416e-85d4-30e6932640d0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48le(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int48lt" id="4137e982-1d71-4b00-b533-1f400c5e66d7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48lt(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int48mi" id="4587220c-d2eb-4dcc-aba4-dccb3ec7fa44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48mi(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int48mul" id="e29ea60d-2278-4f7d-b098-91ef755878ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48mul(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int48ne" id="5b3c19d1-678c-4e85-90a4-3c95a22f681a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48ne(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int48pl" id="e66b3836-c9e3-4725-b91c-5936e9f640db" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48pl(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int4_accum" id="276c245e-34b5-4ac1-baee-517fc8d17c85" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_accum(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int4_accum_inv" id="67c9e8f7-83d6-4775-bd5f-35bd2cf4d052" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_accum_inv(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int4_avg_accum" id="2bf459e6-10cd-4944-a0c5-b6c84c3bb28a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_accum(bigint[], integer)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int4_avg_accum_inv" id="8986c6e4-e5bc-4523-b6df-83ab0d429dd3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_accum_inv(bigint[], integer)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int4_avg_combine" id="4191d9bc-eb0a-46b7-8fe2-845d3978a821" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_combine(bigint[], bigint[])
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="int4_mul_cash" id="b71ffb6f-e67d-45e7-8ba4-e26072a1c8bc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_mul_cash(integer, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int4_sum" id="1789d1c4-7a30-4634-a7c2-56a889f15d9e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_sum(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_sum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int4abs" id="f712d6cb-aa15-4fd0-9d6e-4ba278445f52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4abs(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
		</function>
		<function name="int4and" id="6b6a0c29-8ef0-41b1-82ff-162f333bd5b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4and(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
		</function>
		<function name="int4div" id="ed0604e8-a0df-4dd8-9157-047d16ff885d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4div(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int4eq" id="32cbb7f7-344a-4d65-8162-d85e78fa067a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4eq(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int4ge" id="59c26850-7172-49f4-aedb-85d5cf34d2cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4ge(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int4gt" id="49d03810-08c3-4f21-8c28-04e657fe2e7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4gt(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int4in" id="b01d3b7a-d866-42c8-a799-b1a4ba8607c3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4in(cstring)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int4inc" id="5a3117c0-e421-4146-b31b-cf8fe749bc47" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4inc(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4inc$function$
;]]></string>
			<comment><![CDATA[increment]]></comment>
		</function>
		<function name="int4larger" id="372cdacd-e198-4f21-bb32-6726bba19dd0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4larger(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="int4le" id="925e3601-638b-4698-a4cb-c1fff0abe4a6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4le(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int4lt" id="42b0d182-5511-4f30-9b23-edf4fa8b429b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4lt(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int4mi" id="a66e780f-35b3-4a15-ad05-b98f71913278" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mi(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int4mod" id="ef1ed0e8-71cb-487d-ad9d-dab4614f1c11" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mod(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
		</function>
		<function name="int4mul" id="c3c07441-0f1f-4510-862a-f97df175d3c3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mul(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int4multirange" id="a5f1251c-c304-40ca-8198-b2f0296a8f69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4multirange()
 RETURNS int4multirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[int4multirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="int4multirange" id="2cdb131e-33df-4a03-9235-b337af2de4fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4multirange()
 RETURNS int4multirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[int4multirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="int4multirange" id="ae102183-9122-4fe6-aa1e-9bd9394c164a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4multirange()
 RETURNS int4multirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[int4multirange constructor]]></comment>
		</function>
		<function name="int4ne" id="ca5963f1-30e1-4679-afc8-110cfb78f67d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4ne(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int4not" id="7fd5d4e1-c970-4810-93be-caec72b95b27" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4not(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="int4or" id="9d0bf3a4-f5af-4c08-8283-e00102314dc9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4or(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
		</function>
		<function name="int4out" id="8535b2ef-c867-41b5-b056-28c3ef8792b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4out(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int4pl" id="9fb87fef-7dd8-460c-9383-b019cf0c1293" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4pl(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int4range" id="18a7edb6-1999-4b0a-8837-a71c5ad3dbd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range(integer, integer)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[int4range constructor]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="int4range" id="936374f9-fc1a-4299-b227-1ebaa1b1aa6d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range(integer, integer)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[int4range constructor]]></comment>
		</function>
		<function name="int4range_canonical" id="83155029-ca80-448b-a828-eee6595815a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range_canonical(int4range)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4range_canonical$function$
;]]></string>
			<comment><![CDATA[convert an int4 range to canonical form]]></comment>
		</function>
		<function name="int4range_subdiff" id="e9c2ff67-0be3-4cc8-bc06-03f3c4bcf697" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range_subdiff(integer, integer)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4range_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two int4 values]]></comment>
		</function>
		<function name="int4recv" id="688ea30c-a803-444a-9460-8b7d3e7553c3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4recv(internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int4send" id="7fd89412-dbe7-461c-bf68-e44b203f5e8c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4send(integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int4shl" id="d281e0a7-2b65-457f-8e00-c40e59627824" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4shl(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4shl$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="int4shr" id="0847efea-c50c-4825-89e1-6add4e0451df" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4shr(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4shr$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="int4smaller" id="9d031c83-b6f4-4c99-b786-dded7f687dd9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4smaller(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="int4um" id="8ed56ae3-e23e-4e57-9db1-751fad6b84a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4um(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int4up" id="2e2d29f1-251e-4e2e-867c-e4df78662b7d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4up(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int4xor" id="22f5c54d-05b0-4e16-a18a-e308b985cb98" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4xor(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4xor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="int8" id="c4d334a1-0ba8-406f-a8bf-9649d1f3f933" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="55240ff9-098c-4125-b8b3-d881dff8ded7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="f0e4d567-8ed1-41c3-ba75-ac39c521c88d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="c009d9d1-7597-4a9e-9429-4c8447191598" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="54ce3152-51cb-4792-a96e-88df0ea19656" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="0b72f182-eb61-4cfd-aac4-c33dbd24d9db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="39a84795-7b7b-4f56-a080-62fa1556342f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="int8" id="ab4b4bec-bc3a-4906-8b94-6eaf544aa243" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
		</function>
		<function name="int82div" id="93a7fe12-60b7-4eac-a388-a02734c75529" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82div(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int82eq" id="82e6fd9b-18eb-45db-8596-ea5b643e8fd9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82eq(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int82ge" id="eb41aef1-15e9-4459-ac40-c95845386eca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82ge(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int82gt" id="70adb2f4-0678-4dfb-ac6c-ddfa0ea6bd50" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82gt(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int82le" id="43d0cd9b-0ddc-449a-815c-78544db3dc28" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82le(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int82lt" id="a4bc84df-f961-4635-8b85-996ed47678dc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82lt(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int82mi" id="fc18f847-000c-4531-afbb-61a0aae826fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82mi(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int82mul" id="fef8d7fa-3a08-44fc-81bb-6f4dfdadca56" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82mul(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int82ne" id="49ec3802-df10-46c0-8503-3017369896cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82ne(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int82pl" id="721ec1b4-d5c1-4ec2-8845-437840b17f45" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82pl(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int84div" id="1a9acebb-741e-49f2-a441-e5eec65fead8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84div(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int84eq" id="e208849d-2309-4eb2-b5ba-36727a8b8c6b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84eq(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int84ge" id="23e0214f-bda7-493d-a74a-686d9c3e93a7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84ge(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int84gt" id="a072d723-1102-49e4-9b23-41c81ae21059" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84gt(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int84le" id="be41d61c-7587-4b33-b0e6-7786d1b9ee27" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84le(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int84lt" id="04a2c205-85b8-47b5-bece-ef3cb8ef9b7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84lt(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int84mi" id="3c8587b8-87ce-4647-9185-fca68e874928" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84mi(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int84mul" id="78df5f54-b70e-44ad-b3b2-5e87f8e47237" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84mul(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int84ne" id="8243f0a2-8fa9-467c-92e5-3a866be1c632" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84ne(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int84pl" id="f3e82717-e9e6-4f37-89c9-2392742996e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84pl(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int8_accum" id="ca79b6eb-cd95-434f-aab4-f2863af8a7b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_accum(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int8_accum_inv" id="fcd8dffd-1016-4d1d-b658-d6a938a57c82" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_accum_inv(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int8_avg" id="1a5eca84-128d-4ad6-a08d-892873b3af44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg(bigint[])
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="int8_avg_accum" id="1afa6d4b-7b2b-499a-91dc-a2e3a274e85b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_accum(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int8_avg_accum_inv" id="26559c3a-c369-4b6f-b5a1-ba74a5b5f62f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_accum_inv(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int8_avg_combine" id="ec34bf05-42f7-4c4f-bbfc-d7b901665d08" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="int8_avg_deserialize" id="9a0142d6-0dc0-427e-a495-0c7888be1de7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="int8_avg_serialize" id="7dee2202-5db6-4a71-8431-1b72f94a4ed6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="int8_mul_cash" id="9f337490-6999-46c2-8443-84d4f1d4edf2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_mul_cash(bigint, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int8_sum" id="9b00d92f-0856-4aee-9700-b795824b9371" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_sum(numeric, bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_sum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int8abs" id="04e8cc79-c69a-462e-b72b-b152892fe937" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8abs(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
		</function>
		<function name="int8and" id="7a296ba5-6da8-4468-9efd-7e5e3bd0c78c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8and(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
		</function>
		<function name="int8dec" id="10f7c23a-59bf-4a2e-a506-155bdc843c54" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8dec(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8dec$function$
;]]></string>
			<comment><![CDATA[decrement]]></comment>
		</function>
		<function name="int8dec_any" id="480104d0-3b20-4156-9c9d-b21a779d7c64" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8dec_any(bigint, "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8dec_any$function$
;]]></string>
			<comment><![CDATA[decrement, ignores second argument]]></comment>
		</function>
		<function name="int8div" id="b542f645-3c32-43fb-acaf-d137921775ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8div(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="int8eq" id="d8a07882-c946-4bae-8834-a4c6c8fe4c97" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8eq(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="int8ge" id="db45d4ef-99ad-4c5a-b992-bc3e0f4fcd97" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8ge(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="int8gt" id="e9d56e27-9196-4019-85a0-027836e2c81d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8gt(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="int8in" id="9dcfde87-463c-4e59-b448-be9d745b7b46" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8in(cstring)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int8inc" id="74d33e18-e341-47fe-8da7-326745d238fe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc$function$
;]]></string>
			<comment><![CDATA[increment]]></comment>
		</function>
		<function name="int8inc_any" id="74eedaa0-9784-4ada-8a1a-432f8c329c78" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc_any(bigint, "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc_any$function$
;]]></string>
			<comment><![CDATA[increment, ignores second argument]]></comment>
		</function>
		<function name="int8inc_float8_float8" id="ef15c6ca-bb82-4864-b57d-6315176053fb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc_float8_float8(bigint, double precision, double precision)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc_float8_float8$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="int8inc_support" id="6792f6b5-8052-4a84-9072-1ba23b38d6b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc_support$function$
;]]></string>
			<comment><![CDATA[planner support for count run condition]]></comment>
		</function>
		<function name="int8larger" id="a975025a-4443-46e3-98ba-c81e93ab6c87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8larger(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="int8le" id="2546a1b7-79c6-4e20-b788-61d1073786c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8le(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="int8lt" id="0c68326c-875c-4317-9180-0286df544ecc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8lt(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="int8mi" id="cfb019c8-a165-4952-9775-760484fb7367" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mi(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int8mod" id="12b1fd64-56f2-40ce-abf7-2ef94288bf59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mod(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
		</function>
		<function name="int8mul" id="9dcfe16d-2c63-46e0-868a-975a004bf59d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mul(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="int8multirange" id="cae7b199-3383-4363-82c7-925262a4305b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8multirange()
 RETURNS int8multirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[int8multirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="int8multirange" id="e0fd5779-3a1b-45f3-9806-53e0de834d72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8multirange()
 RETURNS int8multirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[int8multirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="int8multirange" id="b59fdec8-8896-4c5f-93de-ef9244d24ef5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8multirange()
 RETURNS int8multirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[int8multirange constructor]]></comment>
		</function>
		<function name="int8ne" id="ff001fea-47ae-4da2-a62a-2ba0d8815065" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8ne(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="int8not" id="735cc59e-a82b-4216-b5a0-f615f09232e6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8not(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="int8or" id="630d5700-9daf-4ec2-8679-ef1438834b68" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8or(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
		</function>
		<function name="int8out" id="1dcd5fa8-355d-4f5e-a4af-f6b2ab6191e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8out(bigint)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int8pl" id="78ca7fac-3847-4db2-a495-06ef0d70b7b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8pl(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int8pl_inet" id="7d643415-166a-4370-a99c-e6b236edee08" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8pl_inet(bigint, inet)
 RETURNS inet
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int8range" id="c6dd6e49-2d60-470f-963e-63c642e9e330" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range(bigint, bigint)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[int8range constructor]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="int8range" id="59a177a7-c97c-410b-bed9-809c87c4e521" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range(bigint, bigint)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[int8range constructor]]></comment>
		</function>
		<function name="int8range_canonical" id="c3d30d10-042c-4fd0-ad71-49062576fffb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range_canonical(int8range)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8range_canonical$function$
;]]></string>
			<comment><![CDATA[convert an int8 range to canonical form]]></comment>
		</function>
		<function name="int8range_subdiff" id="6e98fc8a-7852-438c-b2cf-8026dbe401fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range_subdiff(bigint, bigint)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8range_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two int8 values]]></comment>
		</function>
		<function name="int8recv" id="30787e86-41de-4f3e-ab85-db20a1c7e1c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8recv(internal)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int8send" id="388831ec-9eae-44cb-9e11-de8b9ffbcd96" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8send(bigint)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="int8shl" id="2aaa2108-0cf3-4405-8604-95d9b450efd1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8shl(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8shl$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="int8shr" id="f7e586eb-d97b-474f-8fbd-6bf7090c64f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8shr(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8shr$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="int8smaller" id="b43bff8d-4e58-4e95-b64f-098b7918ab7d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8smaller(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="int8um" id="2fe0cc80-39bc-4996-8c2d-ae720adc1b8a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8um(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="int8up" id="db773874-35d0-4128-8a71-d728b3692882" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8up(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="int8xor" id="af10929d-b7c9-4723-99a0-c4a9b79837e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8xor(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8xor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="integer_pl_date" id="bac57234-d40f-4964-a36c-a4b307df6312" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.integer_pl_date(integer, date)
 RETURNS date
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="inter_lb" id="fbe6effa-0717-490a-8e27-2f2c051940f7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_lb(line, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_lb$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
		</function>
		<function name="inter_sb" id="468b05f6-042f-4eb4-a5ff-f13a9a7f1e14" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_sb(lseg, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_sb$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
		</function>
		<function name="inter_sl" id="55420f8f-acd3-4f2a-b20c-dd05fe7e552c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_sl(lseg, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_sl$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
		</function>
		<function name="internal_in" id="2677fc3b-0482-43cc-88c5-8c4897c2e39b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.internal_in(cstring)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$internal_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="internal_out" id="4e7c8265-d76f-4da7-b8f6-67b42a1b3645" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.internal_out(internal)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$internal_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="interval" id="c3b81863-a2cd-4596-9044-4a011fdc1094" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."interval"(interval, integer)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT interval_support
AS $function$interval_scale$function$
;]]></string>
			<comment><![CDATA[adjust interval precision]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="interval" id="3f3fcc2d-8bda-41d3-8864-a27833b06de2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."interval"(interval, integer)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT interval_support
AS $function$interval_scale$function$
;]]></string>
			<comment><![CDATA[adjust interval precision]]></comment>
		</function>
		<function name="interval_avg" id="f8fa6860-6764-4523-b61e-87577eaf37d0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg(internal)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$interval_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="interval_avg_accum" id="5f31a8a0-90fd-4711-bc5d-bb3c8177920c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg_accum(internal, interval)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$interval_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="interval_avg_accum_inv" id="0e36ddef-0b71-4168-8bdf-0960b4ee3308" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg_accum_inv(internal, interval)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$interval_avg_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="interval_avg_combine" id="c25a48b5-3792-44ac-88da-5371a3f67d1a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$interval_avg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="interval_avg_deserialize" id="54ab9930-e397-4ea1-8f28-66ef33508a4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_avg_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="interval_avg_serialize" id="898e6445-a049-4e93-ab56-270d7ed550e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_avg_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="interval_cmp" id="fa4cbae7-ff8c-4b64-b74b-6b636577262f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_cmp(interval, interval)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="interval_div" id="a6eafd2b-7aee-4fa5-b283-981adca87709" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_div(interval, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="interval_eq" id="e9ce8c3a-e303-48a8-a953-24dc372d3433" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_eq(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="interval_ge" id="6e35a99c-ff81-4b14-9554-33437a1357ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_ge(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="interval_gt" id="f6d4eea6-c2a8-4776-9bea-2ba2c5bcb6b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_gt(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="interval_hash" id="a5f66db4-786e-40d6-98aa-7dd2c3664e5f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_hash(interval)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="interval_hash_extended" id="6a9c7bc6-2123-4e71-9d88-629fd87dc9d2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_hash_extended(interval, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_hash_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="interval_in" id="ff8f0e3c-84aa-43a7-afb7-5b271b4d82c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_in(cstring, oid, integer)
 RETURNS interval
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="interval_larger" id="8ab898ca-d119-4721-822f-6a9bc93484c4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_larger(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="interval_le" id="25535aa4-61ff-4078-b30e-1d2131669a00" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_le(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="interval_lt" id="063ae8cc-f798-4130-818a-10fc33929090" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_lt(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="interval_mi" id="2ac461d7-8f30-400e-8b67-5dfa40c4c2a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_mi(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="interval_mul" id="89328d7c-9972-4166-ab12-1108c9a70866" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_mul(interval, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="interval_ne" id="6f38bbb0-7731-4d4e-beea-eea0547f9031" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_ne(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="interval_out" id="1b50e84a-8258-42f7-935c-36270605464b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_out(interval)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="interval_pl" id="448078fc-f0ec-4f13-a10d-27a45e706218" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="interval_pl_date" id="137d6373-c4e5-4557-b62c-043bdcf1b0bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_date(interval, date)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="interval_pl_time" id="1aea5d89-b1d9-4e7e-9504-e6e7304586eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_time(interval, time without time zone)
 RETURNS time without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="interval_pl_timestamp" id="3c5ac84d-c28b-42d1-af86-4943827ef8b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timestamp(interval, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="interval_pl_timestamptz" id="f1ff1bb2-9449-48df-8a2b-370263b95252" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timestamptz(interval, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="interval_pl_timetz" id="e117d461-a268-43c7-8b8b-1a0dd6e48eea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timetz(interval, time with time zone)
 RETURNS time with time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="interval_recv" id="6c05d7ce-25ee-4152-9c7f-d58b73981736" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_recv(internal, oid, integer)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="interval_send" id="318f6df7-b754-4ba0-883e-fe6b802beaa5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_send(interval)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="interval_smaller" id="91d563d2-46a9-4e4b-a357-25975780eb1b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_smaller(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="interval_sum" id="91fea237-82ea-41e0-a0a3-a876bbbbb0db" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_sum(internal)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$interval_sum$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="interval_support" id="92343484-1a53-4a20-83c4-9dc0a9c307ea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_support$function$
;]]></string>
			<comment><![CDATA[planner support for interval length coercion]]></comment>
		</function>
		<function name="interval_um" id="db51b501-6f19-48bf-b6fd-801fe22df4a7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_um(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="intervaltypmodin" id="18326f1a-99e8-416c-9f00-a68f9055973e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.intervaltypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$intervaltypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="intervaltypmodout" id="82fa33e3-8773-4a6e-aaad-9c0d7573964e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.intervaltypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$intervaltypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="is_normalized" id="0f8a6c19-294e-421e-a48d-1025f7638220" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.is_normalized(text, text DEFAULT 'NFC'::text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unicode_is_normalized$function$
;]]></string>
			<comment><![CDATA[check Unicode normalization]]></comment>
		</function>
		<function name="isclosed" id="3c49afe9-d842-4722-8d9f-fee20cc55dea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isclosed(path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_isclosed$function$
;]]></string>
			<comment><![CDATA[path closed?]]></comment>
		</function>
		<function name="isempty" id="2e931fa2-7591-4d37-8220-853af36460ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isempty(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_empty$function$
;]]></string>
			<comment><![CDATA[is the range empty?]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="isempty" id="a3682e72-8b9f-4b60-9a04-7cfd3d1cb9c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isempty(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_empty$function$
;]]></string>
			<comment><![CDATA[is the range empty?]]></comment>
		</function>
		<function name="isfinite" id="34a90a76-bc2d-42fa-a34d-9df009857aed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_finite$function$
;]]></string>
			<comment><![CDATA[finite date?]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="isfinite" id="a1407d86-3599-466b-9701-0a61ebf3b573" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_finite$function$
;]]></string>
			<comment><![CDATA[finite date?]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="isfinite" id="1fb97620-b3c8-43e9-96fd-3939fd3a515e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_finite$function$
;]]></string>
			<comment><![CDATA[finite date?]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="isfinite" id="0817c885-3f6d-4c0f-8be7-00c955145660" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_finite$function$
;]]></string>
			<comment><![CDATA[finite date?]]></comment>
		</function>
		<function name="ishorizontal" id="fa23a501-83d8-4d02-baf9-2c556b3bf708" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<comment><![CDATA[horizontally aligned]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="ishorizontal" id="ca332614-fb09-4176-b33f-46fc44dc38c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<comment><![CDATA[horizontally aligned]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="ishorizontal" id="f1270cf6-f132-4afb-afc4-11eb3ed0ded9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<comment><![CDATA[horizontally aligned]]></comment>
		</function>
		<function name="iso8859_1_to_utf8" id="24374b29-cd6e-4e40-a324-77594ea7e4cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso8859_1_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859_1', $function$iso8859_1_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN1 to UTF8]]></comment>
		</function>
		<function name="iso8859_to_utf8" id="c11b8566-a44e-4935-affe-12f5d81df909" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso8859_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859', $function$iso8859_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859 2-16 to UTF8]]></comment>
		</function>
		<function name="iso_to_koi8r" id="512eb07e-5815-40b7-a216-0ba5e048b867" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_koi8r(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to KOI8R]]></comment>
		</function>
		<function name="iso_to_mic" id="7216998a-e2d0-47c4-9300-c06436694db2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to MULE_INTERNAL]]></comment>
		</function>
		<function name="iso_to_win1251" id="ec0dbb9e-f0b4-4f0c-9c7b-0c8007b5a09c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_win1251(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to WIN1251]]></comment>
		</function>
		<function name="iso_to_win866" id="6ea6da0a-f65f-490a-b89c-a8cb54c8ef3c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_win866(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to WIN866]]></comment>
		</function>
		<function name="isopen" id="81ea9190-4239-432d-8d90-6a96f7d4c84d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isopen(path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_isopen$function$
;]]></string>
			<comment><![CDATA[path open?]]></comment>
		</function>
		<function name="isparallel" id="2cf48efa-04da-4171-9c5f-70d214695fba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isparallel(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_parallel$function$
;]]></string>
			<comment><![CDATA[parallel]]></comment>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="isparallel" id="7d7ad4bd-f54c-4fdc-8367-789f05e802ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isparallel(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_parallel$function$
;]]></string>
			<comment><![CDATA[parallel]]></comment>
		</function>
		<function name="isperp" id="39fe0723-627d-4df6-96aa-00a3081b6a7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isperp(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_perp$function$
;]]></string>
			<comment><![CDATA[perpendicular]]></comment>
			<input_param jt="-1" type="lseg" inOut="1" />
			<input_param jt="-1" type="lseg" inOut="1" />
		</function>
		<function name="isperp" id="f51f9d88-8cd4-4881-9729-735381e1223c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isperp(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_perp$function$
;]]></string>
			<comment><![CDATA[perpendicular]]></comment>
		</function>
		<function name="isvertical" id="0c2f6ef5-fa57-4d95-8840-1172abb64512" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<comment><![CDATA[vertically aligned]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="isvertical" id="1c28eac8-0201-425d-bbed-aba8aa33e84d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<comment><![CDATA[vertically aligned]]></comment>
			<input_param jt="-1" type="point" inOut="1" />
			<input_param jt="-1" type="point" inOut="1" />
		</function>
		<function name="isvertical" id="98699e21-b84f-4377-a81f-5dda171a5a96" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<comment><![CDATA[vertically aligned]]></comment>
		</function>
		<function name="johab_to_utf8" id="faaaf4ad-4690-4bbb-a3a0-785d5075b371" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.johab_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_johab', $function$johab_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for JOHAB to UTF8]]></comment>
		</function>
		<function name="json_agg_finalfn" id="41329031-d0c1-42e6-99f3-351e36c7b224" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_agg_finalfn(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$json_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[json aggregate final function]]></comment>
		</function>
		<function name="json_agg_strict_transfn" id="1b0bd2aa-7a7d-4cb4-924a-bca763692fa4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_agg_strict_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_agg_strict_transfn$function$
;]]></string>
			<comment><![CDATA[json aggregate transition function]]></comment>
		</function>
		<function name="json_agg_transfn" id="fc26e51c-57b8-4e88-8040-481861962621" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_agg_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_agg_transfn$function$
;]]></string>
			<comment><![CDATA[json aggregate transition function]]></comment>
		</function>
		<function name="json_array_element" id="b0d1b931-029a-47f1-9c2c-7b55ce467f78" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_element(from_json json, element_index integer)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_element$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
		</function>
		<function name="json_array_element_text" id="a6850984-a247-4972-95c5-5d1114737113" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_element_text(from_json json, element_index integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_element_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
		</function>
		<function name="json_array_elements" id="2497651e-6142-4cc9-bd06-926873d343ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_elements(from_json json, OUT value json)
 RETURNS SETOF json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_array_elements$function$
;]]></string>
			<comment><![CDATA[key value pairs of a json object]]></comment>
		</function>
		<function name="json_array_elements_text" id="6948f27d-debf-4929-85f0-f929f2420942" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_elements_text(from_json json, OUT value text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_array_elements_text$function$
;]]></string>
			<comment><![CDATA[elements of json array]]></comment>
		</function>
		<function name="json_array_length" id="24af68b0-0e88-4738-8224-97e98173f640" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_length(json)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_length$function$
;]]></string>
			<comment><![CDATA[length of json array]]></comment>
		</function>
		<function name="json_build_array" id="ecbd94a0-eab7-488f-8cf9-8b62379dea13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_array(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_array$function$
;]]></string>
			<comment><![CDATA[build a json array from any inputs]]></comment>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="json_build_array" id="5ed1b048-af40-444d-bac4-decffbfacd36" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_array(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_array$function$
;]]></string>
			<comment><![CDATA[build a json array from any inputs]]></comment>
		</function>
		<function name="json_build_object" id="01ba84b0-829a-452f-b587-05fd73cf0820" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_object(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_object$function$
;]]></string>
			<comment><![CDATA[build a json object from pairwise key/value inputs]]></comment>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="json_build_object" id="b25cd5a5-21b9-45ca-8eb0-d99259db8e62" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_object(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_object$function$
;]]></string>
			<comment><![CDATA[build a json object from pairwise key/value inputs]]></comment>
		</function>
		<function name="json_each" id="88e8d9d9-8b46-437a-992e-d37d8b82c3cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_each(from_json json, OUT key text, OUT value json)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_each$function$
;]]></string>
			<comment><![CDATA[key value pairs of a json object]]></comment>
		</function>
		<function name="json_each_text" id="3c05db2d-112f-4089-bb3c-2feee92cc831" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_each_text(from_json json, OUT key text, OUT value text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_each_text$function$
;]]></string>
			<comment><![CDATA[key value pairs of a json object]]></comment>
		</function>
		<function name="json_extract_path" id="c9f1fcf6-475b-47af-b9ae-ffe7ffa0c81d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_extract_path(from_json json, VARIADIC path_elems text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_extract_path$function$
;]]></string>
			<comment><![CDATA[get value from json with path elements]]></comment>
		</function>
		<function name="json_extract_path_text" id="649da4c2-665e-4793-94e0-9646b916a9c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_extract_path_text(from_json json, VARIADIC path_elems text[])
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_extract_path_text$function$
;]]></string>
			<comment><![CDATA[get value from json as text with path elements]]></comment>
		</function>
		<function name="json_in" id="e86413ab-e14d-4265-a332-303e988249a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_in(cstring)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="json_object" id="5999394d-dffe-406f-a1fc-4e948bff94ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."json_object"(text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object$function$
;]]></string>
			<comment><![CDATA[map text array of key value pairs to json object]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="json_object" id="188e1358-b7aa-4fd4-aa34-61093c3778cc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."json_object"(text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object$function$
;]]></string>
			<comment><![CDATA[map text array of key value pairs to json object]]></comment>
		</function>
		<function name="json_object_agg_finalfn" id="b2426c43-afb5-4cc0-90c6-a3e915cd98fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_finalfn(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$json_object_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[json object aggregate final function]]></comment>
		</function>
		<function name="json_object_agg_strict_transfn" id="486200dd-0954-4e14-bac5-5c8a91920b04" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_strict_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_object_agg_strict_transfn$function$
;]]></string>
			<comment><![CDATA[json object aggregate transition function]]></comment>
		</function>
		<function name="json_object_agg_transfn" id="1a96a4a6-deff-4459-83da-108f2a9ba9d6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_object_agg_transfn$function$
;]]></string>
			<comment><![CDATA[json object aggregate transition function]]></comment>
		</function>
		<function name="json_object_agg_unique_strict_transfn" id="82624fdf-d409-41cc-a8c2-7a07f386ca01" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_unique_strict_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_object_agg_unique_strict_transfn$function$
;]]></string>
			<comment><![CDATA[json object aggregate transition function]]></comment>
		</function>
		<function name="json_object_agg_unique_transfn" id="ea5ad9d3-7d82-4a2c-ab9c-73b9f2d4aa83" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_unique_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_object_agg_unique_transfn$function$
;]]></string>
			<comment><![CDATA[json object aggregate transition function]]></comment>
		</function>
		<function name="json_object_field" id="1428b810-ee4b-46f2-be9a-98aacc8d00bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_field(from_json json, field_name text)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_field$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
		</function>
		<function name="json_object_field_text" id="97e9b752-bf54-45dc-8d98-ded47af2ca88" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_field_text(from_json json, field_name text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_field_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
		</function>
		<function name="json_object_keys" id="749f2113-e956-4681-a899-5a9f482882a5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_keys(json)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_object_keys$function$
;]]></string>
			<comment><![CDATA[get json object keys]]></comment>
		</function>
		<function name="json_out" id="d95b85c9-0dc7-4b08-9697-c1a050106094" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_out(json)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="json_populate_record" id="58e43f26-0237-4a39-8eae-c8180f50db25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_populate_record(base anyelement, from_json json, use_json_as_text boolean DEFAULT false)
 RETURNS anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_populate_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a json object]]></comment>
		</function>
		<function name="json_populate_recordset" id="60b49a21-ccdd-4727-9f89-c45206f8ff42" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_populate_recordset(base anyelement, from_json json, use_json_as_text boolean DEFAULT false)
 RETURNS SETOF anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$json_populate_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a json array of objects]]></comment>
		</function>
		<function name="json_recv" id="6ed4042f-b9a7-425f-9c15-8cf5f0b8e7a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_recv(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="json_send" id="e008757b-97e5-4134-bf98-1c8098e0f904" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_send(json)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="json_strip_nulls" id="f0af1a1d-d924-49b3-bd54-afb618600128" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_strip_nulls(json)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_strip_nulls$function$
;]]></string>
			<comment><![CDATA[remove object fields with null values from json]]></comment>
		</function>
		<function name="json_to_record" id="27ceb6cf-de8e-401a-b536-dff998d0b90b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_record(json)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$json_to_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a json object]]></comment>
		</function>
		<function name="json_to_recordset" id="89d80139-724e-4473-8426-3edd402a588e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_recordset(json)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$json_to_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a json array of objects]]></comment>
		</function>
		<function name="json_to_tsvector" id="73773489-8325-4cbd-8c69-00df25535a3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_tsvector(json, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$json_to_tsvector$function$
;]]></string>
			<comment><![CDATA[transform specified values from json to tsvector]]></comment>
			<input_param jt="-1" type="json" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="json_to_tsvector" id="b5f0deac-c479-44b5-8413-d9b98869c3de" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_tsvector(json, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$json_to_tsvector$function$
;]]></string>
			<comment><![CDATA[transform specified values from json to tsvector]]></comment>
		</function>
		<function name="json_typeof" id="ff436787-f6f8-4dd3-8d0e-6b3dad911506" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_typeof(json)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_typeof$function$
;]]></string>
			<comment><![CDATA[get the type of a json value]]></comment>
		</function>
		<function name="jsonb_agg_finalfn" id="58130f54-47f0-4de3-b441-6bc3cf1d9975" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_agg_finalfn(internal)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[jsonb aggregate final function]]></comment>
		</function>
		<function name="jsonb_agg_strict_transfn" id="0caad059-dc52-4fe4-8780-7bec34fd1688" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_agg_strict_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_agg_strict_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb aggregate transition function]]></comment>
		</function>
		<function name="jsonb_agg_transfn" id="7d5f16d2-3c1a-45e8-9ecf-e84efe5779ba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_agg_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_agg_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb aggregate transition function]]></comment>
		</function>
		<function name="jsonb_array_element" id="022d8679-73b9-4322-8c86-982675fb5ed6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_element(from_json jsonb, element_index integer)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_element$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
		</function>
		<function name="jsonb_array_element_text" id="763074ae-34f9-4075-86ce-64d163e77375" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_element_text(from_json jsonb, element_index integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_element_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
		</function>
		<function name="jsonb_array_elements" id="6780f243-762e-4a26-91ac-795a12128f12" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_elements(from_json jsonb, OUT value jsonb)
 RETURNS SETOF jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_array_elements$function$
;]]></string>
			<comment><![CDATA[elements of a jsonb array]]></comment>
		</function>
		<function name="jsonb_array_elements_text" id="78e5f21c-2474-41bb-bffb-52214c33fa20" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_elements_text(from_json jsonb, OUT value text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_array_elements_text$function$
;]]></string>
			<comment><![CDATA[elements of jsonb array]]></comment>
		</function>
		<function name="jsonb_array_length" id="ddcd7468-d8db-46cb-9cb4-58d5cad9e174" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_length(jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_length$function$
;]]></string>
			<comment><![CDATA[length of jsonb array]]></comment>
		</function>
		<function name="jsonb_build_array" id="d4d0c460-e517-4eb2-9443-fe122022e7c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_array(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_array$function$
;]]></string>
			<comment><![CDATA[build a jsonb array from any inputs]]></comment>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="jsonb_build_array" id="8f817e13-f4a9-44fb-923f-60a33a4febda" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_array(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_array$function$
;]]></string>
			<comment><![CDATA[build a jsonb array from any inputs]]></comment>
		</function>
		<function name="jsonb_build_object" id="e4a5bfc9-7719-42dd-bc7b-3e473edf3a32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_object(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_object$function$
;]]></string>
			<comment><![CDATA[build a jsonb object from pairwise key/value inputs]]></comment>
			<input_param jt="-1" type="&quot;any&quot;" inOut="1" />
		</function>
		<function name="jsonb_build_object" id="c223136b-c732-477a-bd69-a826d0d6953b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_object(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_object$function$
;]]></string>
			<comment><![CDATA[build a jsonb object from pairwise key/value inputs]]></comment>
		</function>
		<function name="jsonb_cmp" id="1490efff-df41-4897-88e6-93a7e4608024" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_cmp(jsonb, jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="jsonb_concat" id="e243da73-af19-4631-8c5f-4fb8364dd68c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_concat(jsonb, jsonb)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_concat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="jsonb_contained" id="74ab27ac-abb3-406f-a797-2cf847766659" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_contained(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="jsonb_contains" id="2932d7f7-f2f0-406f-92a7-b1ade9b054cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_contains(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_contains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="jsonb_delete" id="feedd0ca-48e3-47e8-8fff-a8e9a9976ab8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(jsonb, text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="jsonb_delete" id="529c11a8-af6d-4897-9246-38f8e0390945" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(jsonb, text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="jsonb_delete" id="d5f009ca-9cc5-40bc-ba5b-b609ea186d43" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(jsonb, text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="jsonb_delete_path" id="9b5ffc43-9144-4538-ba7c-82105c275372" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete_path(jsonb, text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete_path$function$
;]]></string>
			<comment><![CDATA[implementation of #- operator]]></comment>
		</function>
		<function name="jsonb_each" id="6723044d-b8df-4ba1-8c54-65404815fb5e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_each(from_json jsonb, OUT key text, OUT value jsonb)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_each$function$
;]]></string>
			<comment><![CDATA[key value pairs of a jsonb object]]></comment>
		</function>
		<function name="jsonb_each_text" id="60b82c2a-95af-4c79-9884-9777922ae845" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_each_text(from_json jsonb, OUT key text, OUT value text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_each_text$function$
;]]></string>
			<comment><![CDATA[key value pairs of a jsonb object]]></comment>
		</function>
		<function name="jsonb_eq" id="3e73f3be-9110-4f04-bde7-6ad2270f2d55" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_eq(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="jsonb_exists" id="ab17a22b-e13c-4006-9d06-5cd6783acad8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists(jsonb, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists$function$
;]]></string>
			<comment><![CDATA[implementation of ? operator]]></comment>
		</function>
		<function name="jsonb_exists_all" id="70a3ff13-a74f-4cec-85ae-3a6a649c87e2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists_all(jsonb, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists_all$function$
;]]></string>
			<comment><![CDATA[implementation of ?& operator]]></comment>
		</function>
		<function name="jsonb_exists_any" id="4d07fa41-0a5a-4829-bf39-6dd2be0b2815" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists_any(jsonb, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists_any$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
		</function>
		<function name="jsonb_extract_path" id="cfbe7f2c-c21b-4378-b485-69e7ebb39419" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_extract_path(from_json jsonb, VARIADIC path_elems text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_extract_path$function$
;]]></string>
			<comment><![CDATA[get value from jsonb with path elements]]></comment>
		</function>
		<function name="jsonb_extract_path_text" id="30920e83-b760-4914-b254-d3b4ec7e4e3a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_extract_path_text(from_json jsonb, VARIADIC path_elems text[])
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_extract_path_text$function$
;]]></string>
			<comment><![CDATA[get value from jsonb as text with path elements]]></comment>
		</function>
		<function name="jsonb_ge" id="a867a526-0316-4e0b-9394-f7b81d45f08f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_ge(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="jsonb_gt" id="aa996f09-5a32-489a-a7fd-422e03679248" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_gt(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="jsonb_hash" id="c9e63dd2-7034-43ff-ad42-2f25e1f02a2c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_hash(jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="jsonb_hash_extended" id="b2666468-5b30-4c4a-b1b4-a8c264ceb9ed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_hash_extended(jsonb, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_hash_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="jsonb_in" id="d30c403d-94f2-4762-961d-0e875b807046" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_in(cstring)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="jsonb_insert" id="8cc475a4-1522-4031-b25e-4d23cd5efc17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_insert(jsonb_in jsonb, path text[], replacement jsonb, insert_after boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_insert$function$
;]]></string>
			<comment><![CDATA[Insert value into a jsonb]]></comment>
		</function>
		<function name="jsonb_le" id="0631575c-3c7b-4e41-9296-00995596fd4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_le(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="jsonb_lt" id="3350a1dd-273e-447d-b07c-7867e9e1c8ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_lt(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="jsonb_ne" id="2de94724-31e9-443d-8cfb-b0e33ab739e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_ne(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="jsonb_object" id="67844339-c7c0-49c2-858f-63a844c00fd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object(text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object$function$
;]]></string>
			<comment><![CDATA[map text array of key value pairs to jsonb object]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="jsonb_object" id="c04b6cd2-515a-4e6e-84a5-2fd3a91da74a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object(text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object$function$
;]]></string>
			<comment><![CDATA[map text array of key value pairs to jsonb object]]></comment>
		</function>
		<function name="jsonb_object_agg_finalfn" id="80e808c0-e291-44b8-b761-3d42c4a2f630" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_finalfn(internal)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[jsonb object aggregate final function]]></comment>
		</function>
		<function name="jsonb_object_agg_strict_transfn" id="ec2564c9-b9b2-4e70-a7d5-d9a335b4f92e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_strict_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_strict_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb object aggregate transition function]]></comment>
		</function>
		<function name="jsonb_object_agg_transfn" id="4136b6d6-f9e2-4a9a-9b49-1b3818160527" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb object aggregate transition function]]></comment>
		</function>
		<function name="jsonb_object_agg_unique_strict_transfn" id="914488f1-b2ee-4785-9148-8b3ad800e907" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_unique_strict_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_unique_strict_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb object aggregate transition function]]></comment>
		</function>
		<function name="jsonb_object_agg_unique_transfn" id="80580abf-ca9e-406e-a52c-c0c89a0f6c20" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_unique_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_unique_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb object aggregate transition function]]></comment>
		</function>
		<function name="jsonb_object_field" id="a8554c52-70fc-4e70-814f-30d486dbf81a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_field(from_json jsonb, field_name text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_field$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
		</function>
		<function name="jsonb_object_field_text" id="117ab6e8-ef86-4eab-a5c9-ec905d89e3b3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_field_text(from_json jsonb, field_name text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_field_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
		</function>
		<function name="jsonb_object_keys" id="c9e4b3ae-4c5a-449d-b08e-7a2fa2c23504" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_keys(jsonb)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_object_keys$function$
;]]></string>
			<comment><![CDATA[get jsonb object keys]]></comment>
		</function>
		<function name="jsonb_out" id="ec00925f-90ae-4555-8ccb-37c5325c6cb6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_out(jsonb)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="jsonb_path_exists" id="9e97f4cd-0f4e-4a60-86a0-e37d9eadc029" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_exists(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_exists$function$
;]]></string>
			<comment><![CDATA[jsonpath exists test]]></comment>
		</function>
		<function name="jsonb_path_exists_opr" id="fa94d377-9f8f-4af6-b3cb-b3c1f78cbefa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_exists_opr(jsonb, jsonpath)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_exists_opr$function$
;]]></string>
			<comment><![CDATA[implementation of @? operator]]></comment>
		</function>
		<function name="jsonb_path_exists_tz" id="da1f5422-b239-4ddd-a1d3-2139a5c4ec53" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_exists_tz(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_exists_tz$function$
;]]></string>
			<comment><![CDATA[jsonpath exists test with timezone]]></comment>
		</function>
		<function name="jsonb_path_match" id="2c65bf82-5d64-4cbb-95c5-a03c8bb5d971" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_match(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_match$function$
;]]></string>
			<comment><![CDATA[jsonpath match]]></comment>
		</function>
		<function name="jsonb_path_match_opr" id="d8b0afa1-dba6-4296-bc56-d062d3b6d3bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_match_opr(jsonb, jsonpath)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_match_opr$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="jsonb_path_match_tz" id="8e7f9a45-d36a-406d-b7e8-79904468102b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_match_tz(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_match_tz$function$
;]]></string>
			<comment><![CDATA[jsonpath match with timezone]]></comment>
		</function>
		<function name="jsonb_path_query" id="49f0edcd-e86e-4e0a-838a-58c93208fe88" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS SETOF jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query$function$
;]]></string>
			<comment><![CDATA[jsonpath query]]></comment>
		</function>
		<function name="jsonb_path_query_array" id="841d70cd-84d4-4e22-99a9-b4398fbf75c0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query_array(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query_array$function$
;]]></string>
			<comment><![CDATA[jsonpath query wrapped into array]]></comment>
		</function>
		<function name="jsonb_path_query_array_tz" id="35c34bc0-e29f-469b-a612-f13f0f3f6b17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query_array_tz(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query_array_tz$function$
;]]></string>
			<comment><![CDATA[jsonpath query wrapped into array with timezone]]></comment>
		</function>
		<function name="jsonb_path_query_first" id="c5bfc247-9fec-48f3-b38e-2cbfe75c381f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query_first(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query_first$function$
;]]></string>
			<comment><![CDATA[jsonpath query first item]]></comment>
		</function>
		<function name="jsonb_path_query_first_tz" id="34c7f7a4-012e-4ffa-bbe1-7a1ef1abdc03" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query_first_tz(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query_first_tz$function$
;]]></string>
			<comment><![CDATA[jsonpath query first item with timezone]]></comment>
		</function>
		<function name="jsonb_path_query_tz" id="14e023f2-9ec0-4584-afeb-8f21493ee207" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_path_query_tz(target jsonb, path jsonpath, vars jsonb DEFAULT '{}'::jsonb, silent boolean DEFAULT false)
 RETURNS SETOF jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_path_query_tz$function$
;]]></string>
			<comment><![CDATA[jsonpath query with timezone]]></comment>
		</function>
		<function name="jsonb_populate_record" id="af119413-b53f-4d8c-ba0e-96877a471042" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_populate_record(anyelement, jsonb)
 RETURNS anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_populate_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a jsonb object]]></comment>
		</function>
		<function name="jsonb_populate_record_valid" id="3b58967c-0db6-46de-9a4f-64edb1823c5a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_populate_record_valid(anyelement, jsonb)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_populate_record_valid$function$
;]]></string>
			<comment><![CDATA[test get record fields from a jsonb object]]></comment>
		</function>
		<function name="jsonb_populate_recordset" id="447ce164-bde0-482f-a7f6-d50e49377619" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_populate_recordset(anyelement, jsonb)
 RETURNS SETOF anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$jsonb_populate_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a jsonb array of objects]]></comment>
		</function>
		<function name="jsonb_pretty" id="55d0c1a8-6ec2-42cf-a11a-dd78d17ea0d1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_pretty(jsonb)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_pretty$function$
;]]></string>
			<comment><![CDATA[Indented text from jsonb]]></comment>
		</function>
		<function name="jsonb_recv" id="199c1447-a20d-4af0-b0d1-00bb35ffd692" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_recv(internal)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="jsonb_send" id="82188e2e-f3c9-43f1-96dc-e2304403e150" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_send(jsonb)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="jsonb_set" id="95700007-3eb3-419e-b460-caf4ee6fca29" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_set(jsonb_in jsonb, path text[], replacement jsonb, create_if_missing boolean DEFAULT true)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_set$function$
;]]></string>
			<comment><![CDATA[Set part of a jsonb]]></comment>
		</function>
		<function name="jsonb_set_lax" id="aae32f98-af19-4bda-98a9-ebc5428b0e22" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_set_lax(jsonb_in jsonb, path text[], replacement jsonb, create_if_missing boolean DEFAULT true, null_value_treatment text DEFAULT 'use_json_null'::text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$jsonb_set_lax$function$
;]]></string>
			<comment><![CDATA[Set part of a jsonb, handle NULL value]]></comment>
		</function>
		<function name="jsonb_strip_nulls" id="b461c35c-9d87-443e-8464-a39e9e448025" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_strip_nulls(jsonb)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_strip_nulls$function$
;]]></string>
			<comment><![CDATA[remove object fields with null values from jsonb]]></comment>
		</function>
		<function name="jsonb_subscript_handler" id="a5e87249-d913-400f-8e27-41a48e336442" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_subscript_handler(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_subscript_handler$function$
;]]></string>
			<comment><![CDATA[jsonb subscripting logic]]></comment>
		</function>
		<function name="jsonb_to_record" id="6ba36169-b2e6-47bf-809a-4feb3b3a69eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_record(jsonb)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_to_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a jsonb object]]></comment>
		</function>
		<function name="jsonb_to_recordset" id="b9a042b2-a2d2-47f8-9fb4-a33b36580cee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_recordset(jsonb)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$jsonb_to_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a jsonb array of objects]]></comment>
		</function>
		<function name="jsonb_to_tsvector" id="1aa8d465-660f-4080-95ff-36fabe0e72d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_tsvector(jsonb, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_to_tsvector$function$
;]]></string>
			<comment><![CDATA[transform specified values from jsonb to tsvector]]></comment>
			<input_param jt="-1" type="jsonb" inOut="1" />
			<input_param jt="-1" type="jsonb" inOut="1" />
		</function>
		<function name="jsonb_to_tsvector" id="54bcb1ba-1ccb-4daf-b01c-a388783b3d75" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_tsvector(jsonb, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_to_tsvector$function$
;]]></string>
			<comment><![CDATA[transform specified values from jsonb to tsvector]]></comment>
		</function>
		<function name="jsonb_typeof" id="aaf19f63-f69c-453d-a7b9-e909019be8e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_typeof(jsonb)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_typeof$function$
;]]></string>
			<comment><![CDATA[get the type of a jsonb value]]></comment>
		</function>
		<function name="jsonpath_in" id="b3695732-ab1f-4549-afef-3d7fcf89c969" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_in(cstring)
 RETURNS jsonpath
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="jsonpath_out" id="5de25380-c068-4cfa-89e5-987c087280ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_out(jsonpath)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="jsonpath_recv" id="a9bbe548-b534-4c33-a213-4f619348ce4c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_recv(internal)
 RETURNS jsonpath
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="jsonpath_send" id="a042ebda-44d7-4cf8-9cfb-e68138a05479" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonpath_send(jsonpath)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonpath_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="justify_days" id="96a147f1-b070-406a-97d1-40164869852e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_days(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_days$function$
;]]></string>
			<comment><![CDATA[promote groups of 30 days to numbers of months]]></comment>
		</function>
		<function name="justify_hours" id="d57cad1c-6211-47b8-8e41-55fa5db79d9a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_hours(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_hours$function$
;]]></string>
			<comment><![CDATA[promote groups of 24 hours to numbers of days]]></comment>
		</function>
		<function name="justify_interval" id="b5dac408-0369-4a70-940c-295cc13b0c60" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_interval(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_interval$function$
;]]></string>
			<comment><![CDATA[promote groups of 24 hours to numbers of days and promote groups of 30 days to numbers of months]]></comment>
		</function>
		<function name="koi8r_to_iso" id="6a066fb7-1f38-4716-8b56-ccbad6f391b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_iso(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to ISO-8859-5]]></comment>
		</function>
		<function name="koi8r_to_mic" id="36511214-235d-4473-981d-8188282c9e0c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to MULE_INTERNAL]]></comment>
		</function>
		<function name="koi8r_to_utf8" id="644210a4-be5d-4e7d-b949-c689a977e357" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$koi8r_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to UTF8]]></comment>
		</function>
		<function name="koi8r_to_win1251" id="d6104d5c-5a75-45fc-80a8-1391296d3313" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_win1251(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to WIN1251]]></comment>
		</function>
		<function name="koi8r_to_win866" id="9a5d1fb0-2d38-4c52-b4ea-791e7b0ff2fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_win866(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to WIN866]]></comment>
		</function>
		<function name="koi8u_to_utf8" id="c3c4c025-c951-4b7d-9e22-73e3d4deccdd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8u_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$koi8u_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8U to UTF8]]></comment>
		</function>
		<function name="lag" id="ce4db9b7-190b-4024-8fec-c2632e340d8a" isSystem="false" params_known="n" >
			<string><![CDATA[create function lag window_lag
create function lag window_lag_with_offset
create function lag window_lag_with_offset_and_default;]]></string>
		</function>
		<function name="language_handler_in" id="18130003-1d8d-4d6b-9e07-b98d89aa6735" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.language_handler_in(cstring)
 RETURNS language_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$language_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="language_handler_out" id="48a8e515-5fc7-4693-9406-077f6025eb86" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.language_handler_out(language_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$language_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="last_value" id="7a7853ee-79d5-4b8f-ad94-143e471d31a8" isSystem="false" params_known="n" >
			<string><![CDATA[create function last_value window_last_value;]]></string>
		</function>
		<function name="lastval" id="4c381611-38ee-4097-9fa5-f535273e1d2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lastval()
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$lastval$function$
;]]></string>
			<comment><![CDATA[current value from last used sequence]]></comment>
		</function>
		<function name="latin1_to_mic" id="482c34f0-4fb1-4892-9fd4-f50427fe3452" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin1_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin1_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN1 to MULE_INTERNAL]]></comment>
		</function>
		<function name="latin2_to_mic" id="8752c183-26b9-43d1-b6ee-3f4c1709b067" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin2_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$latin2_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN2 to MULE_INTERNAL]]></comment>
		</function>
		<function name="latin2_to_win1250" id="0d0c3f7d-7da6-4fd4-90b2-de53d08f34f0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin2_to_win1250(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$latin2_to_win1250$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN2 to WIN1250]]></comment>
		</function>
		<function name="latin3_to_mic" id="79cacdd2-af53-4504-afa1-68ea001e7407" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin3_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin3_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN3 to MULE_INTERNAL]]></comment>
		</function>
		<function name="latin4_to_mic" id="3f84be4a-8be3-4a0c-8e24-f1680836e878" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin4_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin4_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN4 to MULE_INTERNAL]]></comment>
		</function>
		<function name="lcm" id="0d5b9d52-501f-41ce-b127-98ff6e284a22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lcm(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4lcm$function$
;]]></string>
			<comment><![CDATA[least common multiple]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lcm" id="cb6cd52c-2ddd-4c52-975d-0daa2cd4417a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lcm(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4lcm$function$
;]]></string>
			<comment><![CDATA[least common multiple]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="lcm" id="cb88468f-843f-47a0-9bec-8c66ebbe9b2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lcm(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4lcm$function$
;]]></string>
			<comment><![CDATA[least common multiple]]></comment>
		</function>
		<function name="lead" id="25779c88-d3d7-4363-bb7f-a801b256bb81" isSystem="false" params_known="n" >
			<string><![CDATA[create function lead window_lead
create function lead window_lead_with_offset
create function lead window_lead_with_offset_and_default;]]></string>
		</function>
		<function name="left" id="cb828e88-b0db-4167-99f3-29a86fef8dec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."left"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_left$function$
;]]></string>
			<comment><![CDATA[extract the first n characters]]></comment>
		</function>
		<function name="length" id="9fa619c6-c3fc-44e4-942b-f10a62e2a109" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="5f093ef1-65c1-4bf1-a1ec-33fbc2ca464e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="181b292c-3f0b-44bb-b84c-eb33adbbf575" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="76592dc5-087d-4caa-9165-3192ca990e92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="818f9d51-54c2-434d-9539-8722dc1e3c7f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="7c4fe18d-ec49-4273-8591-50e831b3c10d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="74d99bfc-9b01-480d-a4e9-6e9bc50397a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="length" id="23b07aa8-fa6c-4134-a45e-e980168489b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
		</function>
		<function name="like" id="7e4627ad-0fce-4798-b755-72ecf4511a52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[matches LIKE expression]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="like" id="1c669036-73d7-4ec7-bec8-e99074abc6ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[matches LIKE expression]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="like" id="154d42cd-c79f-42cf-8e27-f9422d8b0ade" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[matches LIKE expression]]></comment>
		</function>
		<function name="like_escape" id="57597847-e80f-4a3e-84e2-f83bd6e32273" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.like_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$like_escape$function$
;]]></string>
			<comment><![CDATA[convert LIKE pattern to use backslash escapes]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="like_escape" id="b7652381-44d3-4ac0-b5d3-536fb633ef2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.like_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$like_escape$function$
;]]></string>
			<comment><![CDATA[convert LIKE pattern to use backslash escapes]]></comment>
		</function>
		<function name="likejoinsel" id="8f76ea7b-f18b-4015-9abe-1393e549bd1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.likejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$likejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of LIKE]]></comment>
		</function>
		<function name="likesel" id="11d7ced6-6aab-4a65-9864-7a3439c28113" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.likesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$likesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of LIKE]]></comment>
		</function>
		<function name="line" id="b8bc5f75-38e9-4200-8955-5981d07effba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line(point, point)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_construct_pp$function$
;]]></string>
			<comment><![CDATA[construct line from points]]></comment>
		</function>
		<function name="line_distance" id="033ecccb-31f1-415a-89ac-636994e69f7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_distance(line, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="line_eq" id="ce3ac7b1-f1fc-480d-86d0-5be17c1d1e18" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_eq(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="line_horizontal" id="5519ef85-d658-4cf8-97ef-8cc6fc2077bd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_horizontal(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_horizontal$function$
;]]></string>
			<comment><![CDATA[implementation of ?- operator]]></comment>
		</function>
		<function name="line_in" id="d72ffc3f-41e8-49a2-bfe9-6fdf5fdda528" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_in(cstring)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="line_interpt" id="3667bce4-72c2-41aa-a40b-c24436e3bf8e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_interpt(line, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_interpt$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="line_intersect" id="0841eaba-8d15-4210-89db-80c19ca7e8de" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_intersect(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
		</function>
		<function name="line_out" id="fa5ca4ee-1af0-4ae8-a15c-a03c88fa3ec6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_out(line)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="line_parallel" id="c85d5463-eafa-4adf-aaef-b70312f9b1a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_parallel(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_parallel$function$
;]]></string>
			<comment><![CDATA[implementation of ?|| operator]]></comment>
		</function>
		<function name="line_perp" id="13c1d1d1-7fc4-42ae-848b-a5e4caa8f12c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_perp(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_perp$function$
;]]></string>
			<comment><![CDATA[implementation of ?-| operator]]></comment>
		</function>
		<function name="line_recv" id="90b9b307-112a-410a-bc4f-71922a45febb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_recv(internal)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="line_send" id="623bb647-cb20-426f-8ace-2517152551a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_send(line)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="line_vertical" id="3e73ffa4-2f83-4d12-8a65-7e62ab98b693" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_vertical(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_vertical$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
		</function>
		<function name="ln" id="fcf86e4b-72bf-4288-877f-0a5c440f0c70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ln(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog1$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="ln" id="76352303-245e-45fd-a08b-446f2f6eba70" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ln(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog1$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
		</function>
		<function name="lo_close" id="6863844f-a194-4170-a826-c32757dc52f5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_close(integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_close$function$
;]]></string>
			<comment><![CDATA[large object close]]></comment>
		</function>
		<function name="lo_creat" id="99a7d494-1fc3-45d3-bb62-2b80a4bed221" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_creat(integer)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_creat$function$
;]]></string>
			<comment><![CDATA[large object create]]></comment>
		</function>
		<function name="lo_create" id="f477b397-ac48-45be-beeb-524a0c6fa541" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_create(oid)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_create$function$
;]]></string>
			<comment><![CDATA[large object create]]></comment>
		</function>
		<function name="lo_export" id="aa7c32d6-12f2-4988-9042-311f741cb102" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_export(oid, text)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_export$function$
;]]></string>
			<comment><![CDATA[large object export]]></comment>
		</function>
		<function name="lo_from_bytea" id="7378f9cf-08d1-434f-93ab-763b153f03a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_from_bytea(oid, bytea)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_from_bytea$function$
;]]></string>
			<comment><![CDATA[create new large object with given content]]></comment>
		</function>
		<function name="lo_get" id="6c388b59-4a78-4a76-98e9-426f1d308c76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_get(oid)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_lo_get$function$
;]]></string>
			<comment><![CDATA[read entire large object]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="lo_get" id="e6ebae12-7bfb-481a-a30a-22fd3f74e02a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_get(oid)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_lo_get$function$
;]]></string>
			<comment><![CDATA[read entire large object]]></comment>
		</function>
		<function name="lo_import" id="2e50b1ce-ef39-4489-bd1c-e6ab1ecdf8bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_import(text)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_import$function$
;]]></string>
			<comment><![CDATA[large object import]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="lo_import" id="44adaec4-f881-466f-9c56-1d2dd7e1b1e9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_import(text)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_import$function$
;]]></string>
			<comment><![CDATA[large object import]]></comment>
		</function>
		<function name="lo_lseek" id="d0ac9d23-1e3c-4ab7-8e83-e824bdbd2c62" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_lseek(integer, integer, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_lseek$function$
;]]></string>
			<comment><![CDATA[large object seek]]></comment>
		</function>
		<function name="lo_lseek64" id="6be63124-2cf1-4d3a-9df5-9e240b4bd646" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_lseek64(integer, bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$be_lo_lseek64$function$
;]]></string>
			<comment><![CDATA[large object seek (64 bit)]]></comment>
		</function>
		<function name="lo_open" id="c0967494-d23b-44c0-b7b0-c41161d988b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_open(oid, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_open$function$
;]]></string>
			<comment><![CDATA[large object open]]></comment>
		</function>
		<function name="lo_put" id="1e055d15-07bf-4d9f-9ea4-70fb92605db6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_put(oid, bigint, bytea)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$be_lo_put$function$
;]]></string>
			<comment><![CDATA[write data at offset]]></comment>
		</function>
		<function name="lo_tell" id="8c7e953c-dc01-4044-977b-49384b4945dc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_tell(integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_tell$function$
;]]></string>
			<comment><![CDATA[large object position]]></comment>
		</function>
		<function name="lo_tell64" id="76afadcd-bd28-4468-81ed-011ba10e38ab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_tell64(integer)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$be_lo_tell64$function$
;]]></string>
			<comment><![CDATA[large object position (64 bit)]]></comment>
		</function>
		<function name="lo_truncate" id="c3b84786-9fb9-481b-ad9c-fc2ca35f17ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_truncate(integer, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_truncate$function$
;]]></string>
			<comment><![CDATA[truncate large object]]></comment>
		</function>
		<function name="lo_truncate64" id="3e3bd908-a9b0-4992-89d4-0b4bb82cc621" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_truncate64(integer, bigint)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_truncate64$function$
;]]></string>
			<comment><![CDATA[truncate large object (64 bit)]]></comment>
		</function>
		<function name="lo_unlink" id="1ac41937-6db2-4b2d-b384-2efecac05a06" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_unlink(oid)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_unlink$function$
;]]></string>
			<comment><![CDATA[large object unlink (delete)]]></comment>
		</function>
		<function name="log" id="6ce5ea52-0c0c-43db-94d2-6d2beabff93f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="log" id="43337908-6fe2-4ea5-a239-5a7aaf0f81e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="log" id="bceb2dee-a068-4293-8255-7d4e0547cd32" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
		</function>
		<function name="log10" id="9aee9147-6908-4064-9786-26d517dab750" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log10(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="log10" id="8016139e-4dad-44c8-973c-b71b72e13d61" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log10(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
		</function>
		<function name="loread" id="c0706c03-d2a5-44d5-ade6-c5f48d1c87fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.loread(integer, integer)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_loread$function$
;]]></string>
			<comment><![CDATA[large object read]]></comment>
		</function>
		<function name="lower" id="acc3b974-9393-4738-910b-360a4e558d99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower$function$
;]]></string>
			<comment><![CDATA[lower bound of range]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="lower" id="078d48eb-e784-4ecc-b6b9-de84ef09749d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower$function$
;]]></string>
			<comment><![CDATA[lower bound of range]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="lower" id="c2557b64-654b-4b3b-afd4-2e1298992cb5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower$function$
;]]></string>
			<comment><![CDATA[lower bound of range]]></comment>
		</function>
		<function name="lower_inc" id="3288e52b-a64e-449c-a8d2-3cda7312339c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inc$function$
;]]></string>
			<comment><![CDATA[is the range's lower bound inclusive?]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="lower_inc" id="3f61c007-bba1-4e9b-8737-3c0064959c43" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inc$function$
;]]></string>
			<comment><![CDATA[is the range's lower bound inclusive?]]></comment>
		</function>
		<function name="lower_inf" id="0ce6816c-19f2-4954-b79f-9d4b93c1c4f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inf$function$
;]]></string>
			<comment><![CDATA[is the range's lower bound infinite?]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="lower_inf" id="222f98f1-4db6-43bc-abc0-2f8ab1c5be3a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inf$function$
;]]></string>
			<comment><![CDATA[is the range's lower bound infinite?]]></comment>
		</function>
		<function name="lowrite" id="5bd49306-596d-4f55-ab36-058e06cba6c3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lowrite(integer, bytea)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lowrite$function$
;]]></string>
			<comment><![CDATA[large object write]]></comment>
		</function>
		<function name="lpad" id="9a95c138-bdfc-46aa-a56b-ac409259a5d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lpad$function$
;]]></string>
			<comment><![CDATA[left-pad string to length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="lpad" id="4668eeb8-762e-4612-ac88-efe9bc1d74f2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lpad$function$
;]]></string>
			<comment><![CDATA[left-pad string to length]]></comment>
		</function>
		<function name="lseg" id="28e98aab-2220-4970-97ad-b39ceedebdec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg(box)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_diagonal$function$
;]]></string>
			<comment><![CDATA[diagonal of]]></comment>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="lseg" id="3fdc83a8-485a-4b36-bd37-688304200ea9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg(box)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_diagonal$function$
;]]></string>
			<comment><![CDATA[diagonal of]]></comment>
		</function>
		<function name="lseg_center" id="60f7ace6-0f10-437e-82f6-e89f7fafb96c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_center(lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="lseg_distance" id="e6218137-b473-4e37-82a9-de0c593b45cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_distance(lseg, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="lseg_eq" id="ae7ecbcf-bddd-42a3-81b7-19116e029589" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_eq(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="lseg_ge" id="e5ecc91e-f85d-4333-8d59-c257444263a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_ge(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="lseg_gt" id="30480094-699a-4729-991f-8fcf336947f6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_gt(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="lseg_horizontal" id="e5f07f5a-825e-4c6f-afce-68c787c04246" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_horizontal(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_horizontal$function$
;]]></string>
			<comment><![CDATA[implementation of ?- operator]]></comment>
		</function>
		<function name="lseg_in" id="f8f3be24-d5cd-4023-bad4-dd397289ae6b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_in(cstring)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="lseg_interpt" id="d5393fce-ec97-4c26-8f47-67f02a09b7bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_interpt(lseg, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_interpt$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="lseg_intersect" id="89b9077c-4ce2-4d7f-b212-9785da680204" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_intersect(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
		</function>
		<function name="lseg_le" id="84752e0c-4806-4e84-b455-9b6febefb3b9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_le(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="lseg_length" id="fa403737-f403-499b-9db0-c3fb90fb7893" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_length(lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_length$function$
;]]></string>
			<comment><![CDATA[implementation of @-@ operator]]></comment>
		</function>
		<function name="lseg_lt" id="3694a6d0-0ff6-4c8f-95ff-8b8020b9af4e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_lt(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="lseg_ne" id="f1ef22d0-f148-434c-9992-c3bc4dee4342" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_ne(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="lseg_out" id="1954a7db-242d-411c-8fbc-b0f065b2c31d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_out(lseg)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="lseg_parallel" id="5d01ca65-9a3f-4cdc-a6cc-bab687f71f10" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_parallel(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_parallel$function$
;]]></string>
			<comment><![CDATA[implementation of ?|| operator]]></comment>
		</function>
		<function name="lseg_perp" id="ffcea85d-58bd-4126-8011-3c6bb12e80ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_perp(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_perp$function$
;]]></string>
			<comment><![CDATA[implementation of ?-| operator]]></comment>
		</function>
		<function name="lseg_recv" id="5f688cc5-6620-4142-90a1-9a3f8cc93789" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_recv(internal)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="lseg_send" id="3b3f92c9-0050-4912-b733-aa66c545b974" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_send(lseg)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="lseg_vertical" id="aad753cb-a909-4a3a-840c-ae6174a17f0c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_vertical(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_vertical$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
		</function>
		<function name="ltrim" id="915b5a6c-fd81-410d-9f2d-160ff48ef4d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ltrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytealtrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from left end of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="ltrim" id="56d69617-ad13-4cbf-8183-6ac6f338cf8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ltrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytealtrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from left end of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="ltrim" id="06bf43be-dd4a-4bf2-84ca-19d54cd2eefa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ltrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytealtrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from left end of string]]></comment>
		</function>
		<function name="macaddr" id="ede3d8cc-3077-45e8-8b5f-f3d17f784e0b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr(macaddr8)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8tomacaddr$function$
;]]></string>
			<comment><![CDATA[convert macaddr8 to macaddr]]></comment>
		</function>
		<function name="macaddr8" id="bcf50049-4c6a-43a5-aeff-bba1dde22b77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8(macaddr)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddrtomacaddr8$function$
;]]></string>
			<comment><![CDATA[convert macaddr to macaddr8]]></comment>
		</function>
		<function name="macaddr8_and" id="60e28b94-5c86-48e0-9ef0-862c1c4d6e4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_and(macaddr8, macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
		</function>
		<function name="macaddr8_cmp" id="4c115ead-a72e-4bb0-b58e-fc67b6cb3a2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_cmp(macaddr8, macaddr8)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="macaddr8_eq" id="a0750437-1481-48fc-9145-933d9b3c225a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_eq(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="macaddr8_ge" id="4b527961-2282-48f1-a35c-466456fd5e5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_ge(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="macaddr8_gt" id="c6280184-e850-46bf-bc76-8e6127b1b860" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_gt(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="macaddr8_in" id="1c4d15cd-6f71-4b15-9c87-b7384a25cec3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_in(cstring)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr8_le" id="86bc7530-e652-49d8-a7ef-5ee7ac8ac5ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_le(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="macaddr8_lt" id="9bdbbf49-870c-4e60-a8fa-7631a1b2ad8b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_lt(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="macaddr8_ne" id="e5a23ba5-5b2a-438b-adfb-1892ce56641b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_ne(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="macaddr8_not" id="9b907b90-8170-4135-8af6-18b9f5a0b2aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_not(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="macaddr8_or" id="a0f392d4-e1cf-40cb-9d62-bd022894996f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_or(macaddr8, macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
		</function>
		<function name="macaddr8_out" id="adae318e-788b-4938-879a-2e880ec8c0d4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_out(macaddr8)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr8_recv" id="ea9e179a-09cf-4dd0-892f-4c5c40c2ba86" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_recv(internal)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr8_send" id="e5e42b2d-9a33-49c4-be61-fbc713161a2b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_send(macaddr8)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr8_set7bit" id="31202b59-f5c2-420d-870d-bd73cdcdc595" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_set7bit(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_set7bit$function$
;]]></string>
			<comment><![CDATA[set 7th bit in macaddr8]]></comment>
		</function>
		<function name="macaddr_and" id="bab8ac73-3f00-4462-bc66-2d8417fab000" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_and(macaddr, macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
		</function>
		<function name="macaddr_cmp" id="d0817437-0dd4-4d3c-a3a3-d23f28c1f7af" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_cmp(macaddr, macaddr)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="macaddr_eq" id="e31bfcc2-b113-45b2-aa92-7bd42556ff11" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_eq(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="macaddr_ge" id="54973774-7eb4-4d84-af39-b1b778c4eaf7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_ge(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="macaddr_gt" id="e5f245ff-9499-4df8-94a3-fd4672085dee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_gt(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="macaddr_in" id="2fe242ce-4bc9-4a7b-aa12-bc7a00c926f0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_in(cstring)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr_le" id="a611c0f2-eed6-4aaa-8630-937fe0690eab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_le(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="macaddr_lt" id="9328f0fa-6ddc-4552-9027-3ff913c13ba8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_lt(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="macaddr_ne" id="b8e20f44-6c7b-4043-96de-c23ff18b6176" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_ne(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="macaddr_not" id="65cff596-69ce-421c-9286-cb26c3204496" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_not(macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="macaddr_or" id="84fec3a4-f070-4881-93cf-bf096e6548aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_or(macaddr, macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
		</function>
		<function name="macaddr_out" id="43fe6eae-9890-4ff1-a62e-f64964557fdd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_out(macaddr)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr_recv" id="992c0391-684f-4527-8bcb-cee399bc424a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_recv(internal)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr_send" id="1522f634-844e-4802-8fd8-f8c884154edb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_send(macaddr)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="macaddr_sortsupport" id="2ef84bd4-9329-403f-b201-ecd21cd635dc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="make_date" id="b75e1568-7246-432a-b5d0-a56caa8bd935" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_date(year integer, month integer, day integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_date$function$
;]]></string>
			<comment><![CDATA[construct date]]></comment>
		</function>
		<function name="make_interval" id="aaf85e24-b586-4224-9960-fd9aca1cc2f8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_interval(years integer DEFAULT 0, months integer DEFAULT 0, weeks integer DEFAULT 0, days integer DEFAULT 0, hours integer DEFAULT 0, mins integer DEFAULT 0, secs double precision DEFAULT 0.0)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_interval$function$
;]]></string>
			<comment><![CDATA[construct interval]]></comment>
		</function>
		<function name="make_time" id="3cb57d44-c2cc-4237-aab0-70a4ca1c02c3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_time(hour integer, min integer, sec double precision)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_time$function$
;]]></string>
			<comment><![CDATA[construct time]]></comment>
		</function>
		<function name="make_timestamp" id="930fc4bc-f9cd-4eb8-ba1c-cfb67e53cd1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamp(year integer, month integer, mday integer, hour integer, min integer, sec double precision)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_timestamp$function$
;]]></string>
			<comment><![CDATA[construct timestamp]]></comment>
		</function>
		<function name="make_timestamptz" id="c4a0c646-9211-44fd-9f9d-d1245c73bb29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamptz(year integer, month integer, mday integer, hour integer, min integer, sec double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$make_timestamptz$function$
;]]></string>
			<comment><![CDATA[construct timestamp with time zone]]></comment>
			<input_param name="year" jt="-1" type="integer" inOut="1" />
			<input_param name="month" jt="-1" type="integer" inOut="1" />
			<input_param name="mday" jt="-1" type="integer" inOut="1" />
			<input_param name="hour" jt="-1" type="integer" inOut="1" />
			<input_param name="min" jt="-1" type="integer" inOut="1" />
			<input_param name="sec" jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="make_timestamptz" id="93ddb6f8-8410-4bdf-8680-1b8da9cbb38f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamptz(year integer, month integer, mday integer, hour integer, min integer, sec double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$make_timestamptz$function$
;]]></string>
			<comment><![CDATA[construct timestamp with time zone]]></comment>
		</function>
		<function name="makeaclitem" id="de5ec568-dcfe-4f37-bd0d-30eb8fcb83c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.makeaclitem(oid, oid, text, boolean)
 RETURNS aclitem
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$makeaclitem$function$
;]]></string>
			<comment><![CDATA[make ACL item]]></comment>
		</function>
		<function name="masklen" id="38933f0b-2ba1-497b-a1d6-dc74ca7a9ad7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.masklen(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_masklen$function$
;]]></string>
			<comment><![CDATA[netmask length]]></comment>
		</function>
		<function name="matchingjoinsel" id="fbe77f2b-f0fe-453b-964f-365404674001" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.matchingjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$matchingjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for generic matching operators]]></comment>
		</function>
		<function name="matchingsel" id="2071fbdd-9aa4-448e-ba08-5e2bb8477c84" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.matchingsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$matchingsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for generic matching operators]]></comment>
		</function>
		<function name="md5" id="3d093a16-2d8a-4d43-970f-8f12a5bd21d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.md5(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$md5_text$function$
;]]></string>
			<comment><![CDATA[MD5 hash]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="md5" id="55d66648-0d90-43f5-9bf8-cc72fc992bc8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.md5(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$md5_text$function$
;]]></string>
			<comment><![CDATA[MD5 hash]]></comment>
		</function>
		<function name="mic_to_big5" id="c98007f1-8487-4efd-9dd6-98fefd734c2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_big5(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$mic_to_big5$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to BIG5]]></comment>
		</function>
		<function name="mic_to_euc_cn" id="7d784cc4-1db3-4898-84ba-047199b7c52a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_cn(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_cn_and_mic', $function$mic_to_euc_cn$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_CN]]></comment>
		</function>
		<function name="mic_to_euc_jp" id="7da46ed9-dd47-4f3f-94bb-2b5549ae6fd9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_jp(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$mic_to_euc_jp$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_JP]]></comment>
		</function>
		<function name="mic_to_euc_kr" id="12738755-022c-4e41-a31f-16c8710ac5be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_kr(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_kr_and_mic', $function$mic_to_euc_kr$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_KR]]></comment>
		</function>
		<function name="mic_to_euc_tw" id="ab3e3518-adc3-4362-95e9-212320420b30" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_tw(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$mic_to_euc_tw$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_TW]]></comment>
		</function>
		<function name="mic_to_iso" id="37d32f41-ef85-4ba3-80b8-f570288287b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_iso(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to ISO-8859-5]]></comment>
		</function>
		<function name="mic_to_koi8r" id="d9515146-ea58-4a61-b98d-0780cc6a575b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_koi8r(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to KOI8R]]></comment>
		</function>
		<function name="mic_to_latin1" id="a36c2079-1582-4255-8ea2-72993569192c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin1(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin1$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN1]]></comment>
		</function>
		<function name="mic_to_latin2" id="cefe09df-22c6-46c3-9d15-2cfcc59cd337" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin2(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$mic_to_latin2$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN2]]></comment>
		</function>
		<function name="mic_to_latin3" id="9cecb5e6-98e1-4899-a167-f6f6d6a95fc2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin3(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin3$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN3]]></comment>
		</function>
		<function name="mic_to_latin4" id="131dbfa7-dd21-4e88-b1c0-8cc11b55401f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin4(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin4$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN4]]></comment>
		</function>
		<function name="mic_to_sjis" id="70e3a86a-3cdd-48bb-94f5-9fbe7f3ed2be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_sjis(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$mic_to_sjis$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to SJIS]]></comment>
		</function>
		<function name="mic_to_win1250" id="46af4314-4c11-4897-8a9b-6d96d85c070c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win1250(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$mic_to_win1250$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to WIN1250]]></comment>
		</function>
		<function name="mic_to_win1251" id="c6fd6e61-e06f-4a70-b707-8ecca839f9a6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win1251(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to WIN1251]]></comment>
		</function>
		<function name="mic_to_win866" id="315eaf6e-9c27-444b-ba5a-09b9c5354533" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win866(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to WIN866]]></comment>
		</function>
		<function name="min_scale" id="73f62d5a-3942-49d6-a8e9-98944d30368a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.min_scale(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_min_scale$function$
;]]></string>
			<comment><![CDATA[minimum scale needed to represent the value]]></comment>
		</function>
		<function name="mod" id="dd36d35d-b027-4f0e-a759-325513684301" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="mod" id="0f6ceeef-06e2-4d65-8bb8-6c76cedfe23a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="mod" id="96485237-45f5-4de1-afaf-f1e7f5d8ea2b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="mod" id="ac9dc91f-89a6-4fe6-8759-cfae5cf97aab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
		</function>
		<function name="mode_final" id="0af403c1-b0f7-4c51-85ef-30fe751393b4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mode_final(internal, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$mode_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="money" id="39cb2a0a-ab3c-430b-b9ce-7021d8eeba2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(integer)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int4_cash$function$
;]]></string>
			<comment><![CDATA[convert int4 to money]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="money" id="235ba4e2-f8e5-4145-b5f9-a01137b5db50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(integer)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int4_cash$function$
;]]></string>
			<comment><![CDATA[convert int4 to money]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="money" id="d77670f3-5b00-445f-ad35-3c7d372f7270" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(integer)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int4_cash$function$
;]]></string>
			<comment><![CDATA[convert int4 to money]]></comment>
		</function>
		<function name="mul_d_interval" id="01ed3b6b-8d84-4f33-a04c-785e679b4f3b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mul_d_interval(double precision, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$mul_d_interval$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="multirange" id="79d92234-7985-4d42-81c6-d085c7cf0aa3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange(anyrange)
 RETURNS anymultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor1$function$
;]]></string>
			<comment><![CDATA[anymultirange cast]]></comment>
		</function>
		<function name="multirange_adjacent_multirange" id="f59bf76d-f677-45d1-909b-6edde7cb648f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_adjacent_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_adjacent_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of -|- operator]]></comment>
		</function>
		<function name="multirange_adjacent_range" id="1b01caeb-39e5-4e84-80fe-e8b57f7ca08a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_adjacent_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_adjacent_range$function$
;]]></string>
			<comment><![CDATA[implementation of -|- operator]]></comment>
		</function>
		<function name="multirange_after_multirange" id="d33ce93a-35ef-4904-8f76-595179412b16" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_after_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_after_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="multirange_after_range" id="d3a1f7eb-8a19-48b9-ab18-6f96c2cb1de2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_after_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_after_range$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="multirange_agg_finalfn" id="23408e9b-324d-4d8a-baa7-02101f1c7387" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_agg_finalfn(internal, anymultirange)
 RETURNS anymultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="multirange_agg_transfn" id="24481fd1-e1f9-4a2e-a97e-3fc5e91e5f99" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_agg_transfn(internal, anymultirange)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$multirange_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="multirange_before_multirange" id="175e62ae-5b91-47eb-acb0-f86f7c230265" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_before_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_before_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="multirange_before_range" id="571e8dbb-ac8c-4c21-b354-624a53de19cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_before_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_before_range$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="multirange_cmp" id="cf53041a-875d-419c-a02f-a73fcfb30906" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_cmp(anymultirange, anymultirange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="multirange_contained_by_multirange" id="772f34dd-405d-4656-b28c-436a7a957cbb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_contained_by_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_contained_by_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="multirange_contained_by_range" id="67f3900f-b91d-46e9-9f06-5a5be22b0caa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_contained_by_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_contained_by_range$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="multirange_contains_elem" id="faea4397-cb65-4a70-910f-9379d3a5fa28" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_contains_elem(anymultirange, anyelement)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_contains_elem$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="multirange_contains_multirange" id="e5ea2437-3a53-4c5f-839a-d9ce3e331cfa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_contains_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_contains_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="multirange_contains_range" id="131e63e5-b9e6-4466-a512-bdf97820bb96" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_contains_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_contains_range$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="multirange_eq" id="d1f361cc-8b89-4881-af71-0517dfba804c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_eq(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="multirange_ge" id="84f083fb-9148-4a7b-b096-57f57c6477e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_ge(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="multirange_gist_compress" id="51e8a54d-0eba-42c2-9a43-144d5422c383" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_gist_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_gist_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="multirange_gist_consistent" id="7ab46a72-d186-49b3-bce2-47ab15f3bacf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_gist_consistent(internal, anymultirange, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_gist_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="multirange_gt" id="26b6c140-940e-4686-9246-3c0c50f71678" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_gt(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="multirange_in" id="6729b704-dcd5-45d7-a76c-a1a473dcf138" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_in(cstring, oid, integer)
 RETURNS anymultirange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$multirange_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="multirange_intersect" id="5a024d75-40ad-47a0-a3b5-05a3fbab969d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_intersect(anymultirange, anymultirange)
 RETURNS anymultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="multirange_intersect_agg_transfn" id="befa1f3a-50ce-44d2-8e53-2905aaf1c6cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_intersect_agg_transfn(anymultirange, anymultirange)
 RETURNS anymultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_intersect_agg_transfn$function$
;]]></string>
			<comment><![CDATA[range aggregate by intersecting]]></comment>
		</function>
		<function name="multirange_le" id="14bf2014-f47e-41a7-ba30-5c593cfdf0e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_le(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="multirange_lt" id="0f82b691-fa48-4f0b-9447-8567a354c179" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_lt(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="multirange_minus" id="bb96b745-376e-451d-bb35-081d7eb959c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_minus(anymultirange, anymultirange)
 RETURNS anymultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_minus$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="multirange_ne" id="325cd9fa-d3f6-400b-9453-1eb42a7a3bef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_ne(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="multirange_out" id="74e2a918-750d-4fa6-b329-ad47876dd7a9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_out(anymultirange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$multirange_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="multirange_overlaps_multirange" id="bdaf1423-ba0b-42cb-a46a-764e113c7641" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_overlaps_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_overlaps_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="multirange_overlaps_range" id="813a83d5-2fc2-4d25-a0d4-d9407f0e728e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_overlaps_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_overlaps_range$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="multirange_overleft_multirange" id="74ddd483-defd-4e1d-8c97-b53a541887b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_overleft_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_overleft_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
		</function>
		<function name="multirange_overleft_range" id="9abe8fa4-c03a-4cd5-be01-5ae507e1ea5e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_overleft_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_overleft_range$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
		</function>
		<function name="multirange_overright_multirange" id="83ad7732-1851-4a6e-9795-354495dc9ad5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_overright_multirange(anymultirange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_overright_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
		</function>
		<function name="multirange_overright_range" id="ab0060a1-20dc-45f7-b6e4-f42d0eebaf69" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_overright_range(anymultirange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_overright_range$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
		</function>
		<function name="multirange_recv" id="b94cf746-b0c9-46e6-9e65-5e9f6131863a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_recv(internal, oid, integer)
 RETURNS anymultirange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$multirange_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="multirange_send" id="e0667fb0-6227-4359-8ee9-d508f1c01788" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_send(anymultirange)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$multirange_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="multirange_typanalyze" id="f411c516-a518-4090-8cab-a7c8d09d8a44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$multirange_typanalyze$function$
;]]></string>
			<comment><![CDATA[multirange typanalyze]]></comment>
		</function>
		<function name="multirange_union" id="5fefbacb-e0a1-492e-b1d8-03f5917c349b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirange_union(anymultirange, anymultirange)
 RETURNS anymultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_union$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="multirangesel" id="a56c9f25-d810-4a98-850d-91d52720d824" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.multirangesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$multirangesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for multirange operators]]></comment>
		</function>
		<function name="mxid_age" id="768eaa0e-547e-4fb8-9f4e-00b21a5a03fb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mxid_age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$mxid_age$function$
;]]></string>
			<comment><![CDATA[age of a multi-transaction ID, in multi-transactions before current multi-transaction]]></comment>
		</function>
		<function name="name" id="34730898-b696-48a2-b460-f40ec244e3f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(character varying)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_name$function$
;]]></string>
			<comment><![CDATA[convert varchar to name]]></comment>
			<input_param jt="-1" type="character varying" inOut="1" />
		</function>
		<function name="name" id="37dcd056-7d50-416f-93c1-e3a956133454" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(character varying)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_name$function$
;]]></string>
			<comment><![CDATA[convert varchar to name]]></comment>
			<input_param jt="-1" type="character varying" inOut="1" />
		</function>
		<function name="name" id="9a4c5593-2a5a-4b0f-b4a4-d71c62797f20" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(character varying)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_name$function$
;]]></string>
			<comment><![CDATA[convert varchar to name]]></comment>
		</function>
		<function name="nameconcatoid" id="76ec9397-a8d5-477e-9f10-262fc546e366" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameconcatoid(name, oid)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameconcatoid$function$
;]]></string>
			<comment><![CDATA[concatenate name and oid]]></comment>
		</function>
		<function name="nameeq" id="616a7b95-ef69-40e8-9ab7-2b7dc92db716" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameeq(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$nameeq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="nameeqtext" id="3d3c0087-cafc-4c49-8c78-04ec9be9c06a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameeqtext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$nameeqtext$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="namege" id="2f143ee6-f7fa-4e7e-a208-9fcdec1b3071" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namege(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namege$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="namegetext" id="b9bec632-e8a8-44a8-944b-b07aabac4fc5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namegetext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namegetext$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="namegt" id="cd7d6f92-d473-4053-92c2-43c0206e65e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namegt(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namegt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="namegttext" id="4a28a54a-0832-4ac6-8b4f-e78ac157d8ab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namegttext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namegttext$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="nameiclike" id="f1e79ab7-5272-4883-af35-f9618a9ffc46" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameiclike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticlike_support
AS $function$nameiclike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~* operator]]></comment>
		</function>
		<function name="nameicnlike" id="98ffff86-7b21-413d-a2b5-c97b24cbc6a1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicnlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameicnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~* operator]]></comment>
		</function>
		<function name="nameicregexeq" id="d95254b7-5f52-4147-9e68-6669d0cd3efa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicregexeq(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticregexeq_support
AS $function$nameicregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~* operator]]></comment>
		</function>
		<function name="nameicregexne" id="46cd78e2-8b7c-45fc-82e6-90a5d2673811" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicregexne(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameicregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~* operator]]></comment>
		</function>
		<function name="namein" id="23c28891-6c1b-49bd-b6d8-7d6b9331a54e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namein(cstring)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="namele" id="d24aa69a-54ee-4158-a80f-19c0a5e719ab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namele(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namele$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="nameletext" id="edc46605-f2e1-4932-9ccd-0f6ae1828205" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameletext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$nameletext$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="namelike" id="ec5b70a8-fd55-469d-9f23-16b515c81d37" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$namelike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
		</function>
		<function name="namelt" id="b8c3db41-ba54-46cc-99b7-53cdb61447e5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelt(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namelt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="namelttext" id="af6ca564-9144-4e43-a0e5-fcabee5d79c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelttext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namelttext$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="namene" id="7e3bdc72-90b5-458a-aee5-a5ca13d910ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namene(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namene$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="namenetext" id="8a74a608-ee62-4ed4-b9d6-ef83b372f6cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namenetext(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namenetext$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="namenlike" id="2303f9e7-83f5-414f-b690-71a5b4ef0ba5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namenlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namenlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
		</function>
		<function name="nameout" id="5070143a-04b7-4132-95cc-d414892aeb93" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameout(name)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="namerecv" id="950cd081-8734-4d22-86ab-cf07556a189f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namerecv(internal)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$namerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="nameregexeq" id="115dea86-17c0-4357-8617-a20a4b94af4c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameregexeq(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textregexeq_support
AS $function$nameregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="nameregexne" id="99cc4fb5-a74a-4ce5-9327-94368221bbea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameregexne(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~ operator]]></comment>
		</function>
		<function name="namesend" id="db1ce7de-b197-404b-a36c-b848653b1156" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namesend(name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$namesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="neqjoinsel" id="75ab6228-4b6d-4fe6-a38a-f11beb29ad52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.neqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$neqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of <> and related operators]]></comment>
		</function>
		<function name="neqsel" id="4d4b5691-3de2-4eb3-b56e-6b0905757459" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.neqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$neqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of <> and related operators]]></comment>
		</function>
		<function name="netmask" id="d4826996-a716-4feb-8069-47bd7be44c8e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.netmask(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_netmask$function$
;]]></string>
			<comment><![CDATA[netmask of address]]></comment>
		</function>
		<function name="network" id="7ba9dbb8-fcb5-4294-ab25-9fcc7d71922a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network(inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_network$function$
;]]></string>
			<comment><![CDATA[network part of address]]></comment>
		</function>
		<function name="network_cmp" id="f1010910-13b8-4c0e-b967-854ff4af914e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_cmp(inet, inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="network_eq" id="be4a1296-cd71-4e4b-8386-e96ff3d7e175" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_eq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="network_ge" id="b4bfcf9f-4f5f-4c04-ba22-ec00b16e66c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_ge(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="network_gt" id="42269ac1-631d-4771-aa14-b34d3953a30a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_gt(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="network_larger" id="98b04836-773b-4146-ab5a-7f157fbd5fc6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_larger(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="network_le" id="71985bb6-4b59-4b46-ba06-9b58e9725fcb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_le(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="network_lt" id="b748f108-d627-4aa6-99c2-cb720eeb3736" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_lt(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="network_ne" id="43a57b8d-f309-4def-a4ac-081bbe837027" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_ne(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="network_overlap" id="a8627048-d021-471b-8cfe-d784b6e27b44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_overlap(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="network_smaller" id="2f4ced20-bccc-4eac-ad21-faa76bf19746" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_smaller(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="network_sortsupport" id="d66a319c-efa3-4abd-99be-f355dbabfc59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="network_sub" id="9c374107-c736-4125-b0c8-f388e411c913" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_sub(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_sub$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="network_subeq" id="d56f01ea-cf60-40ba-8a4d-1019ec96bb44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_subeq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_subeq$function$
;]]></string>
			<comment><![CDATA[implementation of <<= operator]]></comment>
		</function>
		<function name="network_subset_support" id="57ccb315-4db8-4bb8-81c1-5d6ee2b1fa3d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_subset_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_subset_support$function$
;]]></string>
			<comment><![CDATA[planner support for network_sub/superset]]></comment>
		</function>
		<function name="network_sup" id="70e89306-01db-41c9-bbe4-477281c42e60" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_sup(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_sup$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="network_supeq" id="917d0481-90f6-4cc1-9dd6-92152e56c601" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_supeq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT network_subset_support
AS $function$network_supeq$function$
;]]></string>
			<comment><![CDATA[implementation of >>= operator]]></comment>
		</function>
		<function name="networkjoinsel" id="91e11a59-fd9b-4e0f-8d9a-75ddb38a6ee0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.networkjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$networkjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for network operators]]></comment>
		</function>
		<function name="networksel" id="454234ab-79f3-4ae8-9043-df19985a1b0f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.networksel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$networksel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for network operators]]></comment>
		</function>
		<function name="nextval" id="9d0a16c0-31d3-4277-a6c2-6af6fe3e4722" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nextval(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$nextval_oid$function$
;]]></string>
			<comment><![CDATA[sequence next value]]></comment>
		</function>
		<function name="nlikejoinsel" id="550f8b7d-9bed-473c-876f-7906b7776864" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nlikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$nlikejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of NOT LIKE]]></comment>
		</function>
		<function name="nlikesel" id="8b250e7d-aeaf-4c3f-8d3a-e605a3633927" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nlikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$nlikesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of NOT LIKE]]></comment>
		</function>
		<function name="normalize" id="d36185dd-f634-4efa-a2fb-51e547e68d7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."normalize"(text, text DEFAULT 'NFC'::text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unicode_normalize_func$function$
;]]></string>
			<comment><![CDATA[Unicode normalization]]></comment>
		</function>
		<function name="notlike" id="b03f9c5e-cf77-43be-bf33-d4ea551d7c32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[does not match LIKE expression]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="notlike" id="870ffb15-8767-4d3f-8837-c31f347f1a64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[does not match LIKE expression]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="notlike" id="d7bb26ff-c4a4-4382-9b4d-516ee8cc7b68" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[does not match LIKE expression]]></comment>
		</function>
		<function name="now" id="785f2e27-1f95-42d3-8a1a-87f487575fbe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.now()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$now$function$
;]]></string>
			<comment><![CDATA[current transaction time]]></comment>
		</function>
		<function name="npoints" id="6241b589-bcc0-4f81-8b58-bd561e5b8a34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.npoints(path)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_npoints$function$
;]]></string>
			<comment><![CDATA[number of points]]></comment>
			<input_param jt="-1" type="path" inOut="1" />
		</function>
		<function name="npoints" id="d9b3438e-3553-4b32-abc6-7b30498d77d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.npoints(path)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_npoints$function$
;]]></string>
			<comment><![CDATA[number of points]]></comment>
		</function>
		<function name="nth_value" id="da8da9ac-06f0-4d2f-b288-69f04c3ca8b1" isSystem="false" params_known="n" >
			<string><![CDATA[create function nth_value window_nth_value;]]></string>
		</function>
		<function name="ntile" id="e12fead2-318c-4037-84dc-395e9d5d2a40" isSystem="false" params_known="n" >
			<string><![CDATA[create function ntile window_ntile;]]></string>
		</function>
		<function name="num_nonnulls" id="316df820-f9c9-41b8-9c26-501075642f9c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.num_nonnulls(VARIADIC "any")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$pg_num_nonnulls$function$
;]]></string>
			<comment><![CDATA[count the number of non-NULL arguments]]></comment>
		</function>
		<function name="num_nulls" id="950c778b-c874-4525-b652-ec33ae829d43" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.num_nulls(VARIADIC "any")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$pg_num_nulls$function$
;]]></string>
			<comment><![CDATA[count the number of NULL arguments]]></comment>
		</function>
		<function name="numeric" id="39df0505-58ac-45de-b4d9-e179c0129888" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="3818ddb7-6396-4b2f-a1a7-d6648c71f922" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="59926f13-cde4-4117-bcf6-f017158bb22d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="540952de-2776-484f-8d1e-4572d161686a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="edf3ecd5-ee18-47b3-8aa2-6d1aab2e0dde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="3c332954-b5a5-4935-a4cf-5e3e54df1653" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="0efa029c-7fca-404f-9736-32c69fb376f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="numeric" id="af889252-a805-4e3c-ad72-62d55f1d082b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT numeric_support
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
		</function>
		<function name="numeric_abs" id="3d595f82-906e-479d-b479-aa62a33fb3e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_abs(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
		</function>
		<function name="numeric_accum" id="6d30c463-07a7-440b-812a-14b31ae13511" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_accum(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="numeric_accum_inv" id="f343c79d-d217-4a75-bd4c-43b232ce68d5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_accum_inv(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="numeric_add" id="fcbf6343-2c13-4a23-8d25-c24bdfdcd659" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_add(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="numeric_avg" id="84f943d2-5911-41b5-92d5-61787c0c4117" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_avg_accum" id="50adeb58-08b3-479c-a989-778c6ab6779b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_accum(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="numeric_avg_combine" id="8928d6e6-0fe3-4c53-b1ef-10584c586547" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="numeric_avg_deserialize" id="b4fb8639-77d5-413e-8a85-93a7fea254ed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_avg_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="numeric_avg_serialize" id="940ac143-1d70-4847-a565-8501a10c19ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_avg_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="numeric_cmp" id="bbf59019-b540-4e41-9586-66e6775e097d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_cmp(numeric, numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="numeric_combine" id="c119d442-9095-40d6-b8f6-7fe74e4ae332" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="numeric_deserialize" id="eda2e12f-8b1a-44ab-b958-4f6b9180d8ba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="numeric_div" id="85ee60a4-f71a-4485-8402-001b925396f4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_div(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="numeric_div_trunc" id="4185da9d-c907-4d3f-840e-846d9c54b28c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_div_trunc(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div_trunc$function$
;]]></string>
			<comment><![CDATA[trunc(x/y)]]></comment>
		</function>
		<function name="numeric_eq" id="c08fd2c9-2733-4937-93ed-4c134eea2b7c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_eq(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="numeric_exp" id="8f669fab-3479-45e6-8091-f0c05bb75702" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_exp(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_exp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
		</function>
		<function name="numeric_ge" id="4501beac-ce4c-4c3a-afe7-091cc8d4aed0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ge(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="numeric_gt" id="1cbb24cd-dfc7-47e8-82b9-3b51db60d18b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_gt(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="numeric_in" id="8c11cf7e-684f-43eb-8a2f-bf4b2e5f47c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_in(cstring, oid, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="numeric_inc" id="dabf092c-3b1d-4b85-9e9d-4ac97beeecd5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_inc(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_inc$function$
;]]></string>
			<comment><![CDATA[increment by one]]></comment>
		</function>
		<function name="numeric_larger" id="8569553c-28e6-4fb5-b851-3b72aa41e37b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_larger(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="numeric_le" id="11ad569e-2a84-4c33-b607-65678fb9cf58" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_le(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="numeric_ln" id="f7c9710c-814a-432f-9529-a180897de937" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ln(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ln$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
		</function>
		<function name="numeric_log" id="59162517-6632-4650-9ddb-1c0124c76bf2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_log(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_log$function$
;]]></string>
			<comment><![CDATA[logarithm base m of n]]></comment>
		</function>
		<function name="numeric_lt" id="530749e6-2e83-427d-88f8-e9a3c04da3b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_lt(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="numeric_mod" id="0972515a-ac81-47d6-aedd-547850c1d9fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
		</function>
		<function name="numeric_mul" id="0b506c08-a2b6-41af-b786-e54f547d0519" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_mul(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="numeric_ne" id="d496a888-5a7d-4db4-a697-bc68cb9ae5a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ne(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="numeric_out" id="04dfe29c-920e-41c3-85bb-31badba3b014" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_out(numeric)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="numeric_pl_pg_lsn" id="11f9a631-a12b-4acb-ac42-05e6eb150d25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_pl_pg_lsn(numeric, pg_lsn)
 RETURNS pg_lsn
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="numeric_poly_avg" id="587da169-dbe7-4dc2-85ad-e08eb64106e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_avg(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_poly_combine" id="c652ac08-efb6-4a64-866f-996dec4eb366" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="numeric_poly_deserialize" id="b6b0929a-f728-4ac6-a0af-ccec33ff56e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_poly_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="numeric_poly_serialize" id="ac035cf0-7129-4bcc-86da-cdad81ad0d04" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_poly_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="numeric_poly_stddev_pop" id="9085d02d-3789-4197-87f5-170d4bcf3d27" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_stddev_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_stddev_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_poly_stddev_samp" id="7405cab2-3d5c-4b1d-87a4-2bc3bcefaef4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_stddev_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_stddev_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_poly_sum" id="07cfbd79-a81f-4d52-bd49-c4d74b9b5da5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_sum(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_sum$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_poly_var_pop" id="8e048077-85d7-405d-8c11-2fbd4cee944c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_var_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_var_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_poly_var_samp" id="6ba2820c-6c92-4201-88b0-14dfc1f5ddd5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_var_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_var_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_power" id="98d62738-b828-4db3-a697-8874929f962d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_power(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_power$function$
;]]></string>
			<comment><![CDATA[implementation of ^ operator]]></comment>
		</function>
		<function name="numeric_recv" id="ce99bdf8-adcf-4dc8-87d3-7ad2683cc035" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_recv(internal, oid, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="numeric_send" id="672e67d8-a4e4-432a-ae88-976dbc59c12d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_send(numeric)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="numeric_serialize" id="498732ce-650c-4702-bd39-83584d3dc37b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="numeric_smaller" id="0c4fa61f-ddc0-414c-9b39-647273d5a381" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_smaller(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="numeric_sortsupport" id="e426e9a3-aa15-4290-91ea-4ede038c493f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="numeric_sqrt" id="cc95a6b2-e104-4ba3-ab5b-2e99904adbfb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sqrt(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sqrt$function$
;]]></string>
			<comment><![CDATA[square root]]></comment>
		</function>
		<function name="numeric_stddev_pop" id="47cd6ec3-40c4-43b5-9cf6-5fe986b59691" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_stddev_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_stddev_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_stddev_samp" id="99eb7299-b315-49d3-bdfb-b9899efe3dd9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_stddev_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_stddev_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_sub" id="d4ee223f-8eb3-4282-9361-93645475e704" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sub(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sub$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="numeric_sum" id="a064cd19-d450-4e48-883a-f9b1c186ae44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sum(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_sum$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_support" id="da2afd25-539a-4ee1-93cd-f6a65b98bdea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_support$function$
;]]></string>
			<comment><![CDATA[planner support for numeric length coercion]]></comment>
		</function>
		<function name="numeric_uminus" id="82907c74-b4df-481d-85e0-cf5ddcaf92e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_uminus(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_uminus$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="numeric_uplus" id="1d66cd90-5865-4402-8430-6a02c5eb323e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_uplus(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_uplus$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="numeric_var_pop" id="fb73ed02-4531-49b6-918f-69dc77198e89" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_var_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_var_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numeric_var_samp" id="217223c2-1e86-4001-8a9e-6c459a24b868" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_var_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_var_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="numerictypmodin" id="53369b16-55da-471c-9a42-243a42e57fa9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numerictypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numerictypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="numerictypmodout" id="2ed448b9-7212-4b26-9651-12f1224aad77" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numerictypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numerictypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="nummultirange" id="6617f93c-2138-4068-abc0-1e294df825af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nummultirange()
 RETURNS nummultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[nummultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="nummultirange" id="0d55e8a3-e6b0-44b1-be62-40c2dbadbaf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nummultirange()
 RETURNS nummultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[nummultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="nummultirange" id="e7575416-5259-442f-a741-7cc203e3f9ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nummultirange()
 RETURNS nummultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[nummultirange constructor]]></comment>
		</function>
		<function name="numnode" id="8a17e467-a741-4480-8418-8d6910e0cce5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numnode(tsquery)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_numnode$function$
;]]></string>
			<comment><![CDATA[number of nodes]]></comment>
		</function>
		<function name="numrange" id="b81dd21f-d92a-430a-87b0-cc631cab832b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange(numeric, numeric)
 RETURNS numrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[numrange constructor]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="numrange" id="0629b6c2-64f0-40bd-94d2-759ccfc39d38" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange(numeric, numeric)
 RETURNS numrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[numrange constructor]]></comment>
		</function>
		<function name="numrange_subdiff" id="186c517a-6f76-449a-a805-b0bf74df8587" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange_subdiff(numeric, numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numrange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two numeric values]]></comment>
		</function>
		<function name="obj_description" id="90115e83-96e9-45e6-9172-9e25f5a21b16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.obj_description(oid, name)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
BEGIN ATOMIC
 SELECT pg_description.description
    FROM pg_description
   WHERE ((pg_description.objoid = $1) AND (pg_description.classoid = ( SELECT pg_class.oid
            FROM pg_class
           WHERE ((pg_class.relname = $2) AND (pg_class.relnamespace = ('pg_catalog'::regnamespace)::oid)))) AND (pg_description.objsubid = 0));
END
;]]></string>
			<comment><![CDATA[get description for object id and catalog name]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="obj_description" id="28d0d523-a625-4a95-877d-90a312c80f9b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.obj_description(oid, name)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
BEGIN ATOMIC
 SELECT pg_description.description
    FROM pg_description
   WHERE ((pg_description.objoid = $1) AND (pg_description.classoid = ( SELECT pg_class.oid
            FROM pg_class
           WHERE ((pg_class.relname = $2) AND (pg_class.relnamespace = ('pg_catalog'::regnamespace)::oid)))) AND (pg_description.objsubid = 0));
END
;]]></string>
			<comment><![CDATA[get description for object id and catalog name]]></comment>
		</function>
		<function name="octet_length" id="85b15560-9c05-414a-b38e-3885606cd11a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="octet_length" id="142d8a48-01bd-4ebf-95d9-cbf27282a1e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="octet_length" id="4a59e3bd-7222-45d7-a86d-f2dd9e4ac749" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="octet_length" id="14fc41d9-c3cb-4c05-94d7-3f53b5675f1b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
		</function>
		<function name="oid" id="ab8f3c52-cbf0-474c-acef-13c25cb2a739" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oid(bigint)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i8tooid$function$
;]]></string>
			<comment><![CDATA[convert int8 to oid]]></comment>
		</function>
		<function name="oideq" id="fa5807ef-30bc-4181-8c23-4025a8ba221b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oideq(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="oidge" id="590bf2fa-7f85-4ee7-984a-7a8647af024e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidge(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="oidgt" id="0e83f3ad-e772-4383-b8b9-f08b2b84ff39" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidgt(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="oidin" id="61e5c65d-69f9-41c6-af36-dbb65bfd3b21" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidin(cstring)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidlarger" id="d8ee0d84-cba1-4ae6-890c-d80df7615887" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidlarger(oid, oid)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidlarger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="oidle" id="8f8b0d9e-336e-4a03-8b8b-258c0e94918a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidle(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="oidlt" id="3a5a9fd5-0916-4e9e-b93a-5f2eed0206da" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidlt(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="oidne" id="50fe5b76-80cb-4417-a32a-5375789c7fb0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidne(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="oidout" id="a11f8a43-445f-441b-91fc-581efd59e177" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidout(oid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidrecv" id="825849ac-7101-4608-ad18-9d65947f155a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidrecv(internal)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidsend" id="ae09802e-d7b2-4381-9ced-e0a43e459d3d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidsend(oid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidsmaller" id="90447784-955c-46ca-abe3-0088b796e175" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidsmaller(oid, oid)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidsmaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="oidvectoreq" id="8ef4c270-7c21-412f-ba60-c0f879133372" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectoreq(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectoreq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="oidvectorge" id="5d1056ff-0aa7-4545-8818-410f99e6c4b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorge(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="oidvectorgt" id="bba0bf05-637a-4457-bfd8-f98480ca30e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorgt(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="oidvectorin" id="dc7bf7f4-3baa-43fc-9d1a-300a5a7b16d5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorin(cstring)
 RETURNS oidvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidvectorle" id="3a8bbd99-654e-4d30-b6db-2d6a16640248" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorle(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="oidvectorlt" id="09289e90-f968-4482-aaec-c3b6784093d4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorlt(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="oidvectorne" id="363a1cff-64ba-4904-b282-9337a9b47be8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorne(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidvectorne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="oidvectorout" id="31f82337-fe95-475f-acec-a2d61661de45" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorout(oidvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidvectorrecv" id="dd27d537-6edd-4ac8-ba08-ec86ce721a7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorrecv(internal)
 RETURNS oidvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidvectorsend" id="166bf1bf-eac7-4ca0-9dd9-87073940db63" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorsend(oidvector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="oidvectortypes" id="397b0914-ac73-44b6-bf7d-f863881c6917" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectortypes(oidvector)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$oidvectortypes$function$
;]]></string>
			<comment><![CDATA[print type names of oidvector field]]></comment>
		</function>
		<function name="on_pb" id="72c69b99-8c49-4ef7-a488-c418cae1daf1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_pb(point, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_pb$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="on_pl" id="b174ab03-efa6-4c43-b862-a0d0e3e5bd58" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_pl(point, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_pl$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="on_ppath" id="d60bc4c9-7597-4125-9e79-e0bed28ca616" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_ppath(point, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_ppath$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="on_ps" id="d04c5dc4-56ae-4693-a7f3-57fc0730219a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_ps(point, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_ps$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="on_sb" id="d35d8f86-a435-4b3e-8219-5ed0e46eb537" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_sb(lseg, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_sb$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="on_sl" id="27011330-0551-4912-8cb7-04fd73f72fa8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_sl(lseg, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_sl$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="ordered_set_transition" id="0c4df310-a58a-4763-aa93-588a0fc298a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ordered_set_transition(internal, "any")
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$ordered_set_transition$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="ordered_set_transition_multi" id="42b2b94b-89a0-40fc-8bd9-8bfd1661ba69" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ordered_set_transition_multi(internal, VARIADIC "any")
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$ordered_set_transition_multi$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="overlaps" id="78cac73f-5531-475b-978b-e7fb490b56ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="6e92e6fd-2994-45e0-acdc-d38252f5c597" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="72396802-38b2-42d9-b8f4-080f01638138" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="b4620e9b-bc37-4e14-a396-e33d84f8b268" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="9d2f23e6-d5a6-4a79-8816-278157d7531e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="9099a868-8e26-486f-b9f4-275bd62eb56b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="db550158-3fa1-4519-b519-8e886a1cd69f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="86b8aa70-2817-48e8-a954-65d0b69601c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="70bb4267-00f4-4eae-a73c-e05f33496774" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="ebb6c86b-8e9d-4b7c-9b0a-261309f230ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="dab88014-fd60-44ea-b455-0eb1413da60c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="c36e31a5-0d3e-499a-8985-f546cc317183" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
			<input_param jt="-1" type="time with time zone" inOut="1" />
		</function>
		<function name="overlaps" id="6eb505b4-d1a9-4c9b-9502-731eec54bb03" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
		</function>
		<function name="overlay" id="7133c0df-3a78-4ca2-8eb9-0ce5ac6dc3fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="ee21a802-ae5b-49a1-8982-9d39d1e963f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="bb29ffb1-f4d3-4747-a9fe-b7c3719fb47d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="0237a5f8-9c1a-4dc9-b01d-071e977ad536" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="9cb44fd5-722f-49e5-ab8e-5389d7e7cbbc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="overlay" id="23f761dd-dac2-4ac3-b6d5-366e6f5bd80a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
		</function>
		<function name="parse_ident" id="c90bd281-7f97-4325-b552-e3da59bddce9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.parse_ident(str text, strict boolean DEFAULT true)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$parse_ident$function$
;]]></string>
			<comment><![CDATA[parse qualified identifier to array of identifiers]]></comment>
		</function>
		<function name="path" id="9dc7e919-37df-4779-acff-7c022bd13a61" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path(polygon)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_path$function$
;]]></string>
			<comment><![CDATA[convert polygon to path]]></comment>
		</function>
		<function name="path_add" id="ec010637-e918-48d2-8286-99f9df8b368a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_add(path, path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="path_add_pt" id="b1be5364-3b25-4898-92c8-b30d61cecc78" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_add_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_add_pt$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="path_contain_pt" id="230fabdc-7fc7-4f9c-b17e-05bdf7c73f44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_contain_pt(path, point)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN on_ppath($2, $1)
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="path_distance" id="8163c2f0-897c-4c83-8316-8ae5d5983273" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_distance(path, path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="path_div_pt" id="2434a528-25ab-49ce-8a48-bbb24ac53c44" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_div_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_div_pt$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="path_in" id="aa165508-b42e-4ae5-9994-df422348bc05" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_in(cstring)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="path_inter" id="5d1d502a-c468-485d-94f4-844ed4c76ad0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_inter(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_inter$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
		</function>
		<function name="path_length" id="248035c9-654d-4d98-bd26-826e56c4cd5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_length(path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_length$function$
;]]></string>
			<comment><![CDATA[implementation of @-@ operator]]></comment>
		</function>
		<function name="path_mul_pt" id="cfb6fb13-5150-4735-af7a-45faab392db2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_mul_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_mul_pt$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="path_n_eq" id="42cdc867-f6c6-4ce4-ae3f-2dff21fac000" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_eq(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="path_n_ge" id="0bf27e88-bf28-45fd-b395-2769230273cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_ge(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="path_n_gt" id="6e473a3d-64f7-46f6-9e85-ad2926a0275e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_gt(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="path_n_le" id="a6f293f2-5e44-419b-8501-f9484bfefd1f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_le(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="path_n_lt" id="6df82a96-ebc2-4ae7-8a0e-2a809b76ac4b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_lt(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="path_npoints" id="6ab148ef-bc78-4fef-b06c-68f47a929d6a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_npoints(path)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_npoints$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="path_out" id="07729fad-a1dc-431a-b451-8b9001bb34c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_out(path)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="path_recv" id="7446265d-4970-40a1-a562-d27a89a685af" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_recv(internal)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="path_send" id="afa395ad-426d-4297-9e9b-ab5ed31ffe39" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_send(path)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="path_sub_pt" id="7c30e8d8-d1a3-4df3-bd5a-0e214dcab1d2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_sub_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_sub_pt$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="pclose" id="2856fad0-1f87-4507-bc11-e6e10067f639" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pclose(path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_close$function$
;]]></string>
			<comment><![CDATA[close path]]></comment>
		</function>
		<function name="percent_rank" id="56b88d88-c403-409b-a38f-6d0cde461a8b" isSystem="false" params_known="n" >
			<string><![CDATA[create function percent_rank window_percent_rank;]]></string>
		</function>
		<function name="percent_rank_final" id="e7997c4b-10f3-4ebd-96bd-69cb6e114bb8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percent_rank_final(internal, VARIADIC "any")
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_percent_rank_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="percentile_cont_float8_final" id="1bb23c68-a9fa-4f75-aafd-d9462eba25e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_float8_final(internal, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_float8_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="percentile_cont_float8_multi_final" id="cad70f27-2189-40e6-afde-c1a721bb82a0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_float8_multi_final(internal, double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_float8_multi_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="percentile_cont_interval_final" id="48fe38f6-fe1e-4635-a8aa-7122e275e858" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_interval_final(internal, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_interval_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="percentile_cont_interval_multi_final" id="c72b353c-f1e4-419d-974b-919264cb38f4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_interval_multi_final(internal, double precision[])
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_interval_multi_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="percentile_disc_final" id="a72aec09-c9ac-4a3e-97cb-bdb33916f0e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_disc_final(internal, double precision, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_disc_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="percentile_disc_multi_final" id="c6510bb1-00fd-4aaf-bce9-0d15dc1d9d4a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_disc_multi_final(internal, double precision[], anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_disc_multi_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="pg_advisory_lock" id="e5a15ba2-4e03-4248-9cdd-78ac53e34d4b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_lock" id="fd410716-3921-4c8d-aefd-0dacc1480931" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
		</function>
		<function name="pg_advisory_lock_shared" id="112c0117-0555-4edc-a599-5a8a7c5d41c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_lock_shared" id="00ff889b-13c9-4e1c-a23f-18fde24c672f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
		</function>
		<function name="pg_advisory_unlock" id="64dd1025-5122-48e9-b80d-ecd691e4255e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_unlock_int8$function$
;]]></string>
			<comment><![CDATA[release exclusive advisory lock]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_unlock" id="a89194fe-3abe-4544-9a79-55d5bdae94fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_unlock_int8$function$
;]]></string>
			<comment><![CDATA[release exclusive advisory lock]]></comment>
		</function>
		<function name="pg_advisory_unlock_all" id="5db5e9de-c3c1-44bc-b993-97f6bb49c1c4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_all()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_unlock_all$function$
;]]></string>
			<comment><![CDATA[release all advisory locks]]></comment>
		</function>
		<function name="pg_advisory_unlock_shared" id="d35a763d-dc80-4e7f-83c4-2bb184a49d74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_unlock_shared_int8$function$
;]]></string>
			<comment><![CDATA[release shared advisory lock]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_unlock_shared" id="2f8c1081-d9c0-42d5-a329-cade20722bc6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_unlock_shared_int8$function$
;]]></string>
			<comment><![CDATA[release shared advisory lock]]></comment>
		</function>
		<function name="pg_advisory_xact_lock" id="65b374df-58b3-4bfa-b76a-7bb5bdc53d27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_xact_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_xact_lock" id="2a607116-ccac-4907-bbd6-05eb927aaa6c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_xact_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
		</function>
		<function name="pg_advisory_xact_lock_shared" id="05f7dfc8-57f3-43a6-ab3b-2406d6301a20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_xact_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_advisory_xact_lock_shared" id="ff7031a8-7adf-46d4-bcee-020530daa210" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_advisory_xact_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
		</function>
		<function name="pg_available_extension_versions" id="19294fc8-e9cb-4a17-93a5-2352f8d7dfc2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_available_extension_versions(OUT name name, OUT version text, OUT superuser boolean, OUT trusted boolean, OUT relocatable boolean, OUT schema name, OUT requires name[], OUT comment text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_available_extension_versions$function$
;]]></string>
			<comment><![CDATA[list available extension versions]]></comment>
		</function>
		<function name="pg_available_extensions" id="46121913-6259-4045-8109-10a23ade0b09" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_available_extensions(OUT name name, OUT default_version text, OUT comment text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_available_extensions$function$
;]]></string>
			<comment><![CDATA[list available extensions]]></comment>
		</function>
		<function name="pg_available_wal_summaries" id="203f644c-7806-4eef-95e4-1358ec522896" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_available_wal_summaries(OUT tli bigint, OUT start_lsn pg_lsn, OUT end_lsn pg_lsn)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT ROWS 100
AS $function$pg_available_wal_summaries$function$
;]]></string>
			<comment><![CDATA[list of available WAL summary files]]></comment>
		</function>
		<function name="pg_backend_pid" id="025c6089-e925-4aba-8459-30ae225608c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_backend_pid()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_backend_pid$function$
;]]></string>
			<comment><![CDATA[statistics: current backend PID]]></comment>
		</function>
		<function name="pg_backup_start" id="0ed62fac-5b6d-4354-96ba-ab5738d4a047" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_backup_start(label text, fast boolean DEFAULT false)
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_backup_start$function$
;]]></string>
			<comment><![CDATA[prepare for taking an online backup]]></comment>
		</function>
		<function name="pg_backup_stop" id="d29f48ff-5a5c-4ecd-a607-a060a7f0fe11" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_backup_stop(wait_for_archive boolean DEFAULT true, OUT lsn pg_lsn, OUT labelfile text, OUT spcmapfile text)
 RETURNS record
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_backup_stop$function$
;]]></string>
			<comment><![CDATA[finish taking an online backup]]></comment>
		</function>
		<function name="pg_basetype" id="80f93ffa-6da6-4c2c-9143-b5d65a6493ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_basetype(regtype)
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_basetype$function$
;]]></string>
			<comment><![CDATA[base type of a domain type]]></comment>
		</function>
		<function name="pg_blocking_pids" id="64bec1bd-528c-4877-bc68-20763ae4955a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_blocking_pids(integer)
 RETURNS integer[]
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_blocking_pids$function$
;]]></string>
			<comment><![CDATA[get array of PIDs of sessions blocking specified backend PID from acquiring a heavyweight lock]]></comment>
		</function>
		<function name="pg_cancel_backend" id="c34d6f21-a8f7-40f5-b640-233105622fff" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_cancel_backend(integer)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_cancel_backend$function$
;]]></string>
			<comment><![CDATA[cancel a server process' current query]]></comment>
		</function>
		<function name="pg_char_to_encoding" id="75a05ec5-214c-4fdb-a6b8-3ed90218cdbb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_char_to_encoding(name)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$PG_char_to_encoding$function$
;]]></string>
			<comment><![CDATA[convert encoding name to encoding id]]></comment>
		</function>
		<function name="pg_client_encoding" id="dd1bd88f-75d3-4ceb-a7d1-545695eb5095" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_client_encoding()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_client_encoding$function$
;]]></string>
			<comment><![CDATA[encoding name of current database]]></comment>
		</function>
		<function name="pg_collation_actual_version" id="cc10b6e6-2969-4318-ade1-8cf7a24e129a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_actual_version(oid)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 100
AS $function$pg_collation_actual_version$function$
;]]></string>
			<comment><![CDATA[get actual version of collation from operating system]]></comment>
		</function>
		<function name="pg_collation_for" id="5e7dff38-3533-484d-86ef-ba42a9aa3a88" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_for("any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$pg_collation_for$function$
;]]></string>
			<comment><![CDATA[collation of the argument; implementation of the COLLATION FOR expression]]></comment>
		</function>
		<function name="pg_collation_is_visible" id="645f0372-2ad8-4183-982a-b3a933b16e5f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_collation_is_visible$function$
;]]></string>
			<comment><![CDATA[is collation visible in search path?]]></comment>
		</function>
		<function name="pg_column_compression" id="9b0603fa-03ca-4972-9d29-43c9eb55c944" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_compression("any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_column_compression$function$
;]]></string>
			<comment><![CDATA[compression method for the compressed datum]]></comment>
		</function>
		<function name="pg_column_is_updatable" id="df08eba6-42ef-410d-8a3c-33d2b0668c78" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_is_updatable(regclass, smallint, boolean)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_column_is_updatable$function$
;]]></string>
			<comment><![CDATA[is a column updatable]]></comment>
		</function>
		<function name="pg_column_size" id="95925a36-51de-4e4c-83da-7e73a6e615b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_size("any")
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_column_size$function$
;]]></string>
			<comment><![CDATA[bytes required to store the value, perhaps with compression]]></comment>
		</function>
		<function name="pg_column_toast_chunk_id" id="d790e106-91d6-49ec-b17b-f8a4d26c5d1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_toast_chunk_id("any")
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_column_toast_chunk_id$function$
;]]></string>
			<comment><![CDATA[chunk ID of on-disk TOASTed value]]></comment>
		</function>
		<function name="pg_conf_load_time" id="0fb08b4b-06c4-421b-9d0a-236ed9f1fb8d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_conf_load_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_conf_load_time$function$
;]]></string>
			<comment><![CDATA[configuration load time]]></comment>
		</function>
		<function name="pg_config" id="ef72fec0-3f04-40e7-af9e-481bd0370273" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_config(OUT name text, OUT setting text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 23
AS $function$pg_config$function$
;]]></string>
			<comment><![CDATA[pg_config binary as a function]]></comment>
		</function>
		<function name="pg_control_checkpoint" id="0d05af7a-e375-48f5-9a51-fb8bbf2a5783" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_checkpoint(OUT checkpoint_lsn pg_lsn, OUT redo_lsn pg_lsn, OUT redo_wal_file text, OUT timeline_id integer, OUT prev_timeline_id integer, OUT full_page_writes boolean, OUT next_xid text, OUT next_oid oid, OUT next_multixact_id xid, OUT next_multi_offset xid, OUT oldest_xid xid, OUT oldest_xid_dbid oid, OUT oldest_active_xid xid, OUT oldest_multi_xid xid, OUT oldest_multi_dbid oid, OUT oldest_commit_ts_xid xid, OUT newest_commit_ts_xid xid, OUT checkpoint_time timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_checkpoint$function$
;]]></string>
			<comment><![CDATA[pg_controldata checkpoint state information as a function]]></comment>
		</function>
		<function name="pg_control_init" id="ab0c2234-3be2-4816-a111-00c79f20376c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_init(OUT max_data_alignment integer, OUT database_block_size integer, OUT blocks_per_segment integer, OUT wal_block_size integer, OUT bytes_per_wal_segment integer, OUT max_identifier_length integer, OUT max_index_columns integer, OUT max_toast_chunk_size integer, OUT large_object_chunk_size integer, OUT float8_pass_by_value boolean, OUT data_page_checksum_version integer)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_init$function$
;]]></string>
			<comment><![CDATA[pg_controldata init state information as a function]]></comment>
		</function>
		<function name="pg_control_recovery" id="2e350c6b-c793-406f-a9c9-03569865384c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_recovery(OUT min_recovery_end_lsn pg_lsn, OUT min_recovery_end_timeline integer, OUT backup_start_lsn pg_lsn, OUT backup_end_lsn pg_lsn, OUT end_of_backup_record_required boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_recovery$function$
;]]></string>
			<comment><![CDATA[pg_controldata recovery state information as a function]]></comment>
		</function>
		<function name="pg_control_system" id="cc8f016d-29b5-4658-839a-34b3ecfebceb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_system(OUT pg_control_version integer, OUT catalog_version_no integer, OUT system_identifier bigint, OUT pg_control_last_modified timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_system$function$
;]]></string>
			<comment><![CDATA[pg_controldata general state information as a function]]></comment>
		</function>
		<function name="pg_conversion_is_visible" id="c07490b8-1ac3-4635-9975-8f59397d8a9d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_conversion_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_conversion_is_visible$function$
;]]></string>
			<comment><![CDATA[is conversion visible in search path?]]></comment>
		</function>
		<function name="pg_copy_logical_replication_slot" id="c323dee9-ee6c-48ff-bcb4-c8e389d2eabb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_logical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, plugin name, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_logical_replication_slot_a$function$
;]]></string>
			<comment><![CDATA[copy a logical replication slot, changing temporality and plugin]]></comment>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="plugin" jt="-1" type="name" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_copy_logical_replication_slot" id="4f509a70-add1-418d-833f-bd1ebb0251e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_logical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, plugin name, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_logical_replication_slot_a$function$
;]]></string>
			<comment><![CDATA[copy a logical replication slot, changing temporality and plugin]]></comment>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="plugin" jt="-1" type="name" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_copy_logical_replication_slot" id="cfd8eaf7-eee4-416d-87fe-9df2e253df09" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_logical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, plugin name, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_logical_replication_slot_a$function$
;]]></string>
			<comment><![CDATA[copy a logical replication slot, changing temporality and plugin]]></comment>
		</function>
		<function name="pg_copy_physical_replication_slot" id="dfdaef40-1fba-47f7-b4d8-1f7af0ef3e74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_physical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_physical_replication_slot_a$function$
;]]></string>
			<comment><![CDATA[copy a physical replication slot, changing temporality]]></comment>
			<input_param name="src_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="dst_slot_name" jt="-1" type="name" inOut="1" />
			<input_param name="temporary" jt="-1" type="boolean" inOut="1" />
			<input_param name="slot_name" jt="-1" type="name" inOut="3" />
			<input_param name="lsn" jt="-1" type="pg_lsn" inOut="3" />
		</function>
		<function name="pg_copy_physical_replication_slot" id="24084d93-f060-4f96-930a-4f59410cee20" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_copy_physical_replication_slot(src_slot_name name, dst_slot_name name, temporary boolean, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_copy_physical_replication_slot_a$function$
;]]></string>
			<comment><![CDATA[copy a physical replication slot, changing temporality]]></comment>
		</function>
		<function name="pg_create_logical_replication_slot" id="0d25df61-13e2-4c5e-8865-9480d2975cf7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_logical_replication_slot(slot_name name, plugin name, temporary boolean DEFAULT false, twophase boolean DEFAULT false, failover boolean DEFAULT false, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_create_logical_replication_slot$function$
;]]></string>
			<comment><![CDATA[set up a logical replication slot]]></comment>
		</function>
		<function name="pg_create_physical_replication_slot" id="3cbde8db-13a6-4e70-9ab0-a3beccc9089d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_physical_replication_slot(slot_name name, immediately_reserve boolean DEFAULT false, temporary boolean DEFAULT false, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_create_physical_replication_slot$function$
;]]></string>
			<comment><![CDATA[create a physical replication slot]]></comment>
		</function>
		<function name="pg_create_restore_point" id="9e32c11b-85a1-43f6-b52e-05c9d12da600" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_restore_point(text)
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_create_restore_point$function$
;]]></string>
			<comment><![CDATA[create a named restore point]]></comment>
		</function>
		<function name="pg_current_logfile" id="d39fb097-a19a-40a3-a856-5b6ff365c504" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_logfile()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_current_logfile$function$
;]]></string>
			<comment><![CDATA[current logging collector file location]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="pg_current_logfile" id="0ef4e9ec-b398-4a00-9b27-8cd635e048ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_logfile()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_current_logfile$function$
;]]></string>
			<comment><![CDATA[current logging collector file location]]></comment>
		</function>
		<function name="pg_current_snapshot" id="5b34ed1c-bea1-415f-bc95-03f646f26eca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_snapshot()
 RETURNS pg_snapshot
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_current_snapshot$function$
;]]></string>
			<comment><![CDATA[get current snapshot]]></comment>
		</function>
		<function name="pg_current_wal_flush_lsn" id="4d3baf63-0bcd-410f-8da1-51ca23cf6fa6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_flush_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_flush_lsn$function$
;]]></string>
			<comment><![CDATA[current wal flush location]]></comment>
		</function>
		<function name="pg_current_wal_insert_lsn" id="222dd951-23da-4a94-9cd3-6f72aec13e68" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_insert_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_insert_lsn$function$
;]]></string>
			<comment><![CDATA[current wal insert location]]></comment>
		</function>
		<function name="pg_current_wal_lsn" id="38cf8b9d-ce53-402b-975f-8c1f7c12eb41" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_lsn$function$
;]]></string>
			<comment><![CDATA[current wal write location]]></comment>
		</function>
		<function name="pg_current_xact_id" id="bfb0f95c-15b7-47d2-9945-d590503be2de" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_xact_id()
 RETURNS xid8
 LANGUAGE internal
 STABLE STRICT
AS $function$pg_current_xact_id$function$
;]]></string>
			<comment><![CDATA[get current transaction ID]]></comment>
		</function>
		<function name="pg_current_xact_id_if_assigned" id="72a42243-8f0b-45af-a68f-bcf4c00cddd6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_xact_id_if_assigned()
 RETURNS xid8
 LANGUAGE internal
 STABLE STRICT
AS $function$pg_current_xact_id_if_assigned$function$
;]]></string>
			<comment><![CDATA[get current transaction ID]]></comment>
		</function>
		<function name="pg_cursor" id="bc095b87-a3ab-4538-b50c-497be192eaa6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_cursor(OUT name text, OUT statement text, OUT is_holdable boolean, OUT is_binary boolean, OUT is_scrollable boolean, OUT creation_time timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_cursor$function$
;]]></string>
			<comment><![CDATA[get the open cursors for this session]]></comment>
		</function>
		<function name="pg_database_collation_actual_version" id="9a408bb2-07be-44fa-be66-bbe771d1b6d7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_database_collation_actual_version(oid)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 100
AS $function$pg_database_collation_actual_version$function$
;]]></string>
			<comment><![CDATA[get actual version of database collation from operating system]]></comment>
		</function>
		<function name="pg_database_size" id="1ce2c3a7-7dca-4359-8e02-1f60e80e5880" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_database_size(name)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_database_size_name$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified database]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="pg_database_size" id="b827e474-a892-42f8-8565-5c76a2d8e4d7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_database_size(name)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_database_size_name$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified database]]></comment>
		</function>
		<function name="pg_ddl_command_in" id="bd42b42c-46dd-4115-a949-7c5e19350d7f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_in(cstring)
 RETURNS pg_ddl_command
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_ddl_command_out" id="1c18d6da-d56a-4e07-83cb-0e1da0f9d9b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_out(pg_ddl_command)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_ddl_command_recv" id="68f70309-eaea-43bd-9964-d37c1205560c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_recv(internal)
 RETURNS pg_ddl_command
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_ddl_command_send" id="09ba70fa-677d-42f1-96a9-7bb59338d150" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_send(pg_ddl_command)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_dependencies_in" id="9356c97a-6ed3-4ff2-8a89-a3e208099b0b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_in(cstring)
 RETURNS pg_dependencies
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_dependencies_out" id="74632522-907f-4c12-80fc-55d702ba944e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_out(pg_dependencies)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_dependencies_recv" id="1dd2f33e-4f85-4122-b066-f6f780a95fab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_recv(internal)
 RETURNS pg_dependencies
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_dependencies_send" id="b18a6de8-4151-4f1c-87a8-52eff21279e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_send(pg_dependencies)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_describe_object" id="1cce3ab1-94bc-48e1-aaf7-a63bd596c14e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_describe_object(oid, oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_describe_object$function$
;]]></string>
			<comment><![CDATA[get identification of SQL object]]></comment>
		</function>
		<function name="pg_drop_replication_slot" id="83a06418-f536-4e03-8c3d-b5895d8ffb0d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_drop_replication_slot(name)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_drop_replication_slot$function$
;]]></string>
			<comment><![CDATA[drop a replication slot]]></comment>
		</function>
		<function name="pg_encoding_max_length" id="b0cb2da0-b25b-4142-8c59-4a7034e91c9e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_encoding_max_length(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_encoding_max_length_sql$function$
;]]></string>
			<comment><![CDATA[maximum octet length of a character in given encoding]]></comment>
		</function>
		<function name="pg_encoding_to_char" id="066f22d0-142a-4a76-920f-54a7599697a6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_encoding_to_char(integer)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$PG_encoding_to_char$function$
;]]></string>
			<comment><![CDATA[convert encoding id to encoding name]]></comment>
		</function>
		<function name="pg_event_trigger_ddl_commands" id="f882b457-fc54-4433-950e-152472238356" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_ddl_commands(OUT classid oid, OUT objid oid, OUT objsubid integer, OUT command_tag text, OUT object_type text, OUT schema_name text, OUT object_identity text, OUT in_extension boolean, OUT command pg_ddl_command)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 10 ROWS 100
AS $function$pg_event_trigger_ddl_commands$function$
;]]></string>
			<comment><![CDATA[list DDL actions being executed by the current command]]></comment>
		</function>
		<function name="pg_event_trigger_dropped_objects" id="91d84a59-80c4-4c26-839e-ed30c011c642" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_dropped_objects(OUT classid oid, OUT objid oid, OUT objsubid integer, OUT original boolean, OUT normal boolean, OUT is_temporary boolean, OUT object_type text, OUT schema_name text, OUT object_name text, OUT object_identity text, OUT address_names text[], OUT address_args text[])
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 10 ROWS 100
AS $function$pg_event_trigger_dropped_objects$function$
;]]></string>
			<comment><![CDATA[list objects dropped by the current command]]></comment>
		</function>
		<function name="pg_event_trigger_table_rewrite_oid" id="0d6d226e-7a2e-4e6a-8915-27fb4520770d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_table_rewrite_oid(OUT oid oid)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_event_trigger_table_rewrite_oid$function$
;]]></string>
			<comment><![CDATA[return Oid of the table getting rewritten]]></comment>
		</function>
		<function name="pg_event_trigger_table_rewrite_reason" id="ff48b1ba-0f1b-48c7-b611-0bfc5926fb9a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_table_rewrite_reason()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_event_trigger_table_rewrite_reason$function$
;]]></string>
			<comment><![CDATA[return reason code for table getting rewritten]]></comment>
		</function>
		<function name="pg_export_snapshot" id="1627552f-2f32-4ca2-8d47-42fc3cc1ad75" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_export_snapshot()
 RETURNS text
 LANGUAGE internal
 STRICT
AS $function$pg_export_snapshot$function$
;]]></string>
			<comment><![CDATA[export a snapshot]]></comment>
		</function>
		<function name="pg_extension_config_dump" id="552074a7-d313-45e7-8a1b-0174129c92c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_extension_config_dump(regclass, text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_extension_config_dump$function$
;]]></string>
			<comment><![CDATA[flag an extension's table contents to be emitted by pg_dump]]></comment>
		</function>
		<function name="pg_extension_update_paths" id="67992c8b-41b5-42ae-8c0f-a1068333b389" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_extension_update_paths(name name, OUT source text, OUT target text, OUT path text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_extension_update_paths$function$
;]]></string>
			<comment><![CDATA[list an extension's version update paths]]></comment>
		</function>
		<function name="pg_filenode_relation" id="00c40e35-dc29-428c-86a0-522f0c6cbb82" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_filenode_relation(oid, oid)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_filenode_relation$function$
;]]></string>
			<comment><![CDATA[relation OID for filenode and tablespace]]></comment>
		</function>
		<function name="pg_function_is_visible" id="e4cf72ca-3aae-48e1-83d5-80b3dde874b3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_function_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_function_is_visible$function$
;]]></string>
			<comment><![CDATA[is function visible in search path?]]></comment>
		</function>
		<function name="pg_get_backend_memory_contexts" id="6561ad2c-1d10-4bef-94f2-ca0cff300da2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_backend_memory_contexts(OUT name text, OUT ident text, OUT parent text, OUT level integer, OUT total_bytes bigint, OUT total_nblocks bigint, OUT free_bytes bigint, OUT free_chunks bigint, OUT used_bytes bigint)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT ROWS 100
AS $function$pg_get_backend_memory_contexts$function$
;]]></string>
			<comment><![CDATA[information about all memory contexts of local backend]]></comment>
		</function>
		<function name="pg_get_catalog_foreign_keys" id="f457b58d-fea9-4be5-80da-6a1e977e6e32" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_catalog_foreign_keys(OUT fktable regclass, OUT fkcols text[], OUT pktable regclass, OUT pkcols text[], OUT is_array boolean, OUT is_opt boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 250
AS $function$pg_get_catalog_foreign_keys$function$
;]]></string>
			<comment><![CDATA[list of catalog foreign key relationships]]></comment>
		</function>
		<function name="pg_get_constraintdef" id="5cf92e39-66fa-4a58-81d5-9647b2a6ae4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_constraintdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_constraintdef$function$
;]]></string>
			<comment><![CDATA[constraint description]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_constraintdef" id="f61569e3-7b84-44a1-a851-78ecb4f8b078" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_constraintdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_constraintdef$function$
;]]></string>
			<comment><![CDATA[constraint description]]></comment>
		</function>
		<function name="pg_get_expr" id="f564fa77-87c2-454e-9641-2c6c567eb53c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_expr(pg_node_tree, oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_expr$function$
;]]></string>
			<comment><![CDATA[deparse an encoded expression]]></comment>
			<input_param jt="-1" type="pg_node_tree" inOut="1" />
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_expr" id="4d5a9427-9971-4162-9690-7be616e4c542" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_expr(pg_node_tree, oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_expr$function$
;]]></string>
			<comment><![CDATA[deparse an encoded expression]]></comment>
		</function>
		<function name="pg_get_function_arg_default" id="0c395a3e-7c62-4bc1-9c6b-98f04a3eaef8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_arg_default(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_arg_default$function$
;]]></string>
			<comment><![CDATA[function argument default]]></comment>
		</function>
		<function name="pg_get_function_arguments" id="b56612fd-43b7-439b-bdb3-533b7b3c28a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_arguments(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_arguments$function$
;]]></string>
			<comment><![CDATA[argument list of a function]]></comment>
		</function>
		<function name="pg_get_function_identity_arguments" id="5e8d672a-0dea-44ce-9156-74421887980d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_identity_arguments(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_identity_arguments$function$
;]]></string>
			<comment><![CDATA[identity argument list of a function]]></comment>
		</function>
		<function name="pg_get_function_result" id="208fef4e-5960-401b-9e17-ac0fb22d47ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_result(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_result$function$
;]]></string>
			<comment><![CDATA[result type of a function]]></comment>
		</function>
		<function name="pg_get_function_sqlbody" id="f06da325-fe8d-47c7-a6a6-ad6add54e7b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_sqlbody(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_sqlbody$function$
;]]></string>
			<comment><![CDATA[function SQL body]]></comment>
		</function>
		<function name="pg_get_functiondef" id="698e31c2-6da8-4426-888c-342724b8721a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_functiondef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_functiondef$function$
;]]></string>
			<comment><![CDATA[definition of a function]]></comment>
		</function>
		<function name="pg_get_indexdef" id="42c2d65b-2895-4568-b85b-6029b0374507" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_indexdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_indexdef$function$
;]]></string>
			<comment><![CDATA[index description]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_indexdef" id="c3c6b45c-ff19-439e-95b6-7bb30631e999" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_indexdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_indexdef$function$
;]]></string>
			<comment><![CDATA[index description]]></comment>
		</function>
		<function name="pg_get_keywords" id="d3edf49f-5539-4254-9ba0-435152379067" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_keywords(OUT word text, OUT catcode "char", OUT barelabel boolean, OUT catdesc text, OUT baredesc text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 500
AS $function$pg_get_keywords$function$
;]]></string>
			<comment><![CDATA[list of SQL keywords]]></comment>
		</function>
		<function name="pg_get_multixact_members" id="afd62248-2e16-45c7-9ce9-d3a7ecbb078d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_multixact_members(multixid xid, OUT xid xid, OUT mode text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_get_multixact_members$function$
;]]></string>
			<comment><![CDATA[view members of a multixactid]]></comment>
		</function>
		<function name="pg_get_object_address" id="cdccdbf7-8c6f-49cc-9d1c-84cbd67a9171" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_object_address(type text, object_names text[], object_args text[], OUT classid oid, OUT objid oid, OUT objsubid integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_object_address$function$
;]]></string>
			<comment><![CDATA[get OID-based object address from name/args arrays]]></comment>
		</function>
		<function name="pg_get_partition_constraintdef" id="c1e7d58c-0af9-42ae-bd9d-58a95267fd66" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_partition_constraintdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_partition_constraintdef$function$
;]]></string>
			<comment><![CDATA[partition constraint description]]></comment>
		</function>
		<function name="pg_get_partkeydef" id="e39088dc-6230-4fc7-887f-80f0eba1657b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_partkeydef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_partkeydef$function$
;]]></string>
			<comment><![CDATA[partition key description]]></comment>
		</function>
		<function name="pg_get_publication_tables" id="b489fab7-b4e1-4e2b-94a7-49b6d0fa87e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_publication_tables(VARIADIC pubname text[], OUT pubid oid, OUT relid oid, OUT attrs int2vector, OUT qual pg_node_tree)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_publication_tables$function$
;]]></string>
			<comment><![CDATA[get information of the tables that are part of the specified publications]]></comment>
		</function>
		<function name="pg_get_replica_identity_index" id="bdf8a6cb-d933-4da9-969d-fc5d93977210" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_replica_identity_index(regclass)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_get_replica_identity_index$function$
;]]></string>
			<comment><![CDATA[oid of replica identity index if any]]></comment>
		</function>
		<function name="pg_get_replication_slots" id="00e2abb9-7b31-4869-a773-5672c6227178" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_replication_slots(OUT slot_name name, OUT plugin name, OUT slot_type text, OUT datoid oid, OUT temporary boolean, OUT active boolean, OUT active_pid integer, OUT xmin xid, OUT catalog_xmin xid, OUT restart_lsn pg_lsn, OUT confirmed_flush_lsn pg_lsn, OUT wal_status text, OUT safe_wal_size bigint, OUT two_phase boolean, OUT inactive_since timestamp with time zone, OUT conflicting boolean, OUT invalidation_reason text, OUT failover boolean, OUT synced boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 10
AS $function$pg_get_replication_slots$function$
;]]></string>
			<comment><![CDATA[information about replication slots currently in use]]></comment>
		</function>
		<function name="pg_get_ruledef" id="b7a0fc0c-def0-4607-acb4-54218bc73550" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_ruledef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_ruledef$function$
;]]></string>
			<comment><![CDATA[source text of a rule]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_ruledef" id="72fd0569-9f54-441b-aa91-97df61432e7c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_ruledef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_ruledef$function$
;]]></string>
			<comment><![CDATA[source text of a rule]]></comment>
		</function>
		<function name="pg_get_serial_sequence" id="7a468001-b444-46ad-a053-ab39db6d1f29" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_serial_sequence(text, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_serial_sequence$function$
;]]></string>
			<comment><![CDATA[name of sequence for a serial column]]></comment>
		</function>
		<function name="pg_get_shmem_allocations" id="73fa2ab2-345d-44ea-ae99-fb7ab2537ca6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_shmem_allocations(OUT name text, OUT off bigint, OUT size bigint, OUT allocated_size bigint)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT ROWS 50
AS $function$pg_get_shmem_allocations$function$
;]]></string>
			<comment><![CDATA[allocations from the main shared memory segment]]></comment>
		</function>
		<function name="pg_get_statisticsobjdef" id="0969b9e9-702a-457d-8eb2-c1e9b514c768" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_statisticsobjdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_statisticsobjdef$function$
;]]></string>
			<comment><![CDATA[extended statistics object description]]></comment>
		</function>
		<function name="pg_get_statisticsobjdef_columns" id="5530d3e0-9b98-44c3-b4a8-4e0ddefff562" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_statisticsobjdef_columns(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_statisticsobjdef_columns$function$
;]]></string>
			<comment><![CDATA[extended statistics columns]]></comment>
		</function>
		<function name="pg_get_statisticsobjdef_expressions" id="6ecd8d67-995a-4e05-ae83-6cc7435a9764" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_statisticsobjdef_expressions(oid)
 RETURNS text[]
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_statisticsobjdef_expressions$function$
;]]></string>
			<comment><![CDATA[extended statistics expressions]]></comment>
		</function>
		<function name="pg_get_triggerdef" id="ff69c688-d248-409a-acd6-d1d657cba6c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_triggerdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_triggerdef$function$
;]]></string>
			<comment><![CDATA[trigger description]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_get_triggerdef" id="b8cd593d-5223-4003-acfc-579bfe3e11d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_triggerdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_triggerdef$function$
;]]></string>
			<comment><![CDATA[trigger description]]></comment>
		</function>
		<function name="pg_get_userbyid" id="2a310329-91af-4200-96fd-10db42a67c20" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_userbyid(oid)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_userbyid$function$
;]]></string>
			<comment><![CDATA[role name by OID (with fallback)]]></comment>
		</function>
		<function name="pg_get_viewdef" id="672437f6-3f2e-4965-92db-cf7d3c6121a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name$function$
;]]></string>
			<comment><![CDATA[select statement of a view]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="f2331752-464b-4727-9042-ec3714bfa268" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name$function$
;]]></string>
			<comment><![CDATA[select statement of a view]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="b5bdc180-453c-4317-95e8-79947df4d975" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name$function$
;]]></string>
			<comment><![CDATA[select statement of a view]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="a60ecba7-edbd-4ed6-86dc-ffd69f5b7d0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name$function$
;]]></string>
			<comment><![CDATA[select statement of a view]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_get_viewdef" id="0244ff54-a590-4581-ad48-97cf384bf124" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name$function$
;]]></string>
			<comment><![CDATA[select statement of a view]]></comment>
		</function>
		<function name="pg_get_wait_events" id="489d4cc1-ef76-47aa-9ab2-10106cd52c4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_wait_events(OUT type text, OUT name text, OUT description text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 250
AS $function$pg_get_wait_events$function$
;]]></string>
			<comment><![CDATA[describe wait events]]></comment>
		</function>
		<function name="pg_get_wal_replay_pause_state" id="a029cafa-aa70-4fe9-b3b2-374074a442e6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_wal_replay_pause_state()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_get_wal_replay_pause_state$function$
;]]></string>
			<comment><![CDATA[get wal replay pause state]]></comment>
		</function>
		<function name="pg_get_wal_resource_managers" id="dfb35c05-e122-4e09-ae49-d732d0da8320" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_wal_resource_managers(OUT rm_id integer, OUT rm_name text, OUT rm_builtin boolean)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT ROWS 50
AS $function$pg_get_wal_resource_managers$function$
;]]></string>
			<comment><![CDATA[get resource managers loaded in system]]></comment>
		</function>
		<function name="pg_get_wal_summarizer_state" id="0a8e2fa6-eef8-4264-80b6-ca71d4487421" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_wal_summarizer_state(OUT summarized_tli bigint, OUT summarized_lsn pg_lsn, OUT pending_lsn pg_lsn, OUT summarizer_pid integer)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_get_wal_summarizer_state$function$
;]]></string>
			<comment><![CDATA[WAL summarizer state]]></comment>
		</function>
		<function name="pg_has_role" id="a7c21d02-a5e3-4de5-ace9-17302f6c644b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="6e391f14-b299-48e6-8987-cbce57b43cd6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="27a5199e-629d-4bf9-8f93-6fa7335abdbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="a2466e47-9a6e-4aae-9217-77d050c291b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="d8e5caf3-0349-44b6-bc31-86e373e3a66d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role name]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="name" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_has_role" id="bf36fcc8-e4af-4fa2-ab1e-88c1983bea74" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role name]]></comment>
		</function>
		<function name="pg_hba_file_rules" id="6b631e0e-07b0-44a1-a598-ff2ee77aa220" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_hba_file_rules(OUT rule_number integer, OUT file_name text, OUT line_number integer, OUT type text, OUT database text[], OUT user_name text[], OUT address text, OUT netmask text, OUT auth_method text, OUT options text[], OUT error text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_hba_file_rules$function$
;]]></string>
			<comment><![CDATA[show pg_hba.conf rules]]></comment>
		</function>
		<function name="pg_ident_file_mappings" id="19f1e47b-6c84-4c8f-af84-8d0c49055c68" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ident_file_mappings(OUT map_number integer, OUT file_name text, OUT line_number integer, OUT map_name text, OUT sys_name text, OUT pg_username text, OUT error text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_ident_file_mappings$function$
;]]></string>
			<comment><![CDATA[show pg_ident.conf mappings]]></comment>
		</function>
		<function name="pg_identify_object" id="f58704b3-4301-4d48-9f12-9e086da3e27e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_identify_object(classid oid, objid oid, objsubid integer, OUT type text, OUT schema text, OUT name text, OUT identity text)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_identify_object$function$
;]]></string>
			<comment><![CDATA[get machine-parseable identification of SQL object]]></comment>
		</function>
		<function name="pg_identify_object_as_address" id="ef145e66-c130-4368-95d6-dadeada64fbc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_identify_object_as_address(classid oid, objid oid, objsubid integer, OUT type text, OUT object_names text[], OUT object_args text[])
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_identify_object_as_address$function$
;]]></string>
			<comment><![CDATA[get identification of SQL object for pg_get_object_address()]]></comment>
		</function>
		<function name="pg_import_system_collations" id="f6cd5fff-91c6-431a-95bc-f06adb135d5f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_import_system_collations(regnamespace)
 RETURNS integer
 LANGUAGE internal
 STRICT COST 100
AS $function$pg_import_system_collations$function$
;]]></string>
			<comment><![CDATA[import collations from operating system]]></comment>
		</function>
		<function name="pg_index_column_has_property" id="e33b3047-cf38-4024-b490-b7a2ca3542bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_index_column_has_property(regclass, integer, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_index_column_has_property$function$
;]]></string>
			<comment><![CDATA[test property of an index column]]></comment>
		</function>
		<function name="pg_index_has_property" id="d7970d00-033b-480c-b837-197cf9969836" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_index_has_property(regclass, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_index_has_property$function$
;]]></string>
			<comment><![CDATA[test property of an index]]></comment>
		</function>
		<function name="pg_indexam_has_property" id="c7767bd7-4959-4a4b-a90b-f020f27fabb5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexam_has_property(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_indexam_has_property$function$
;]]></string>
			<comment><![CDATA[test property of an index access method]]></comment>
		</function>
		<function name="pg_indexam_progress_phasename" id="ad6ba2b3-f96a-401a-957a-a314f9a607c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexam_progress_phasename(oid, bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_indexam_progress_phasename$function$
;]]></string>
			<comment><![CDATA[return name of given index build phase]]></comment>
		</function>
		<function name="pg_indexes_size" id="2a2c556f-23cf-44b1-9f5e-ee1ff5ab2fd5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexes_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_indexes_size$function$
;]]></string>
			<comment><![CDATA[disk space usage for all indexes attached to the specified table]]></comment>
		</function>
		<function name="pg_input_error_info" id="c0d82bc9-8c6c-4874-b717-6a61dc4e1816" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_input_error_info(value text, type_name text, OUT message text, OUT detail text, OUT hint text, OUT sql_error_code text)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_input_error_info$function$
;]]></string>
			<comment><![CDATA[get error details if string is not valid input for data type]]></comment>
		</function>
		<function name="pg_input_is_valid" id="4c61802c-d67e-44d3-8d41-6963f44124eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_input_is_valid(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_input_is_valid$function$
;]]></string>
			<comment><![CDATA[test whether string is valid input for data type]]></comment>
		</function>
		<function name="pg_is_in_recovery" id="c112993e-064b-4dcf-9c78-9f95e6806f36" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_in_recovery()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_in_recovery$function$
;]]></string>
			<comment><![CDATA[true if server is in recovery]]></comment>
		</function>
		<function name="pg_is_other_temp_schema" id="e76dbd77-346b-4ca0-acaa-2b18a6284638" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_other_temp_schema(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_is_other_temp_schema$function$
;]]></string>
			<comment><![CDATA[is schema another session's temp schema?]]></comment>
		</function>
		<function name="pg_is_wal_replay_paused" id="bf0a6c38-bd91-4da1-8e6b-403b3a14540c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_wal_replay_paused()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_wal_replay_paused$function$
;]]></string>
			<comment><![CDATA[true if wal replay is paused]]></comment>
		</function>
		<function name="pg_isolation_test_session_is_blocked" id="567294d5-3138-4e09-a2bc-fe0310abff52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_isolation_test_session_is_blocked(integer, integer[])
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_isolation_test_session_is_blocked$function$
;]]></string>
			<comment><![CDATA[isolationtester support function]]></comment>
		</function>
		<function name="pg_jit_available" id="b7f0a039-1d72-453c-8d5e-aa745d0495e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_jit_available()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_jit_available$function$
;]]></string>
			<comment><![CDATA[Is JIT compilation available in this session?]]></comment>
		</function>
		<function name="pg_last_committed_xact" id="2c30bae0-c265-4ea2-a926-d10cb8807135" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_committed_xact(OUT xid xid, OUT "timestamp" timestamp with time zone, OUT roident oid)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_committed_xact$function$
;]]></string>
			<comment><![CDATA[get transaction Id, commit timestamp and replication origin of latest transaction commit]]></comment>
		</function>
		<function name="pg_last_wal_receive_lsn" id="a22cd8aa-6ad2-4beb-9afa-9a41dd99dd0d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_wal_receive_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_wal_receive_lsn$function$
;]]></string>
			<comment><![CDATA[current wal flush location]]></comment>
		</function>
		<function name="pg_last_wal_replay_lsn" id="101be164-cc8f-4afd-af83-cfa3249f635a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_wal_replay_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_wal_replay_lsn$function$
;]]></string>
			<comment><![CDATA[last wal replay location]]></comment>
		</function>
		<function name="pg_last_xact_replay_timestamp" id="03e8c39f-efde-4002-b43c-5d3edecbc51b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_xact_replay_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_xact_replay_timestamp$function$
;]]></string>
			<comment><![CDATA[timestamp of last replay xact]]></comment>
		</function>
		<function name="pg_listening_channels" id="b2175e98-be5d-483f-af9c-9273a50bb2f4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_listening_channels()
 RETURNS SETOF text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 10
AS $function$pg_listening_channels$function$
;]]></string>
			<comment><![CDATA[get the channels that the current backend listens to]]></comment>
		</function>
		<function name="pg_lock_status" id="86e69249-e277-4a7d-be8f-4d34e819c5a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lock_status(OUT locktype text, OUT database oid, OUT relation oid, OUT page integer, OUT tuple smallint, OUT virtualxid text, OUT transactionid xid, OUT classid oid, OUT objid oid, OUT objsubid smallint, OUT virtualtransaction text, OUT pid integer, OUT mode text, OUT granted boolean, OUT fastpath boolean, OUT waitstart timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_lock_status$function$
;]]></string>
			<comment><![CDATA[view system lock information]]></comment>
		</function>
		<function name="pg_log_backend_memory_contexts" id="d916d673-240f-42ea-b983-e143befe3ced" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_log_backend_memory_contexts(integer)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_log_backend_memory_contexts$function$
;]]></string>
			<comment><![CDATA[log memory contexts of the specified backend]]></comment>
		</function>
		<function name="pg_log_standby_snapshot" id="dd8bd049-8dd6-4f0c-a90d-a5be79368169" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_log_standby_snapshot()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_log_standby_snapshot$function$
;]]></string>
			<comment><![CDATA[log details of the current snapshot to WAL]]></comment>
		</function>
		<function name="pg_logical_emit_message" id="b782fe6a-51d0-4e5e-8b3c-6e67c814dc27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_emit_message(transactional boolean, prefix text, message text, flush boolean DEFAULT false)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_logical_emit_message_text$function$
;]]></string>
			<comment><![CDATA[emit a textual logical decoding message]]></comment>
			<input_param name="transactional" jt="-1" type="boolean" inOut="1" />
			<input_param name="prefix" jt="-1" type="text" inOut="1" />
			<input_param name="message" jt="-1" type="text" inOut="1" />
			<input_param name="flush" jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_logical_emit_message" id="6b011340-72f5-4712-974f-20fdb00399e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_emit_message(transactional boolean, prefix text, message text, flush boolean DEFAULT false)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_logical_emit_message_text$function$
;]]></string>
			<comment><![CDATA[emit a textual logical decoding message]]></comment>
		</function>
		<function name="pg_logical_slot_get_binary_changes" id="0d4d2a33-df70-4d55-af98-ba6e61e4b8e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_get_binary_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data bytea)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_get_binary_changes$function$
;]]></string>
			<comment><![CDATA[get binary changes from replication slot]]></comment>
		</function>
		<function name="pg_logical_slot_get_changes" id="5496bd7c-fdb6-4353-b0dc-adab5e1ca4ef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_get_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data text)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_get_changes$function$
;]]></string>
			<comment><![CDATA[get changes from replication slot]]></comment>
		</function>
		<function name="pg_logical_slot_peek_binary_changes" id="81769ce1-308d-436e-8e54-34dc2edb31b4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_peek_binary_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data bytea)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_peek_binary_changes$function$
;]]></string>
			<comment><![CDATA[peek at binary changes from replication slot]]></comment>
		</function>
		<function name="pg_logical_slot_peek_changes" id="519f84f9-e7ef-4bca-963a-83a07ec8afd1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_peek_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data text)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_peek_changes$function$
;]]></string>
			<comment><![CDATA[peek at changes from replication slot]]></comment>
		</function>
		<function name="pg_ls_archive_statusdir" id="92ffd944-ca39-444d-b878-b7c2e3574f52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_archive_statusdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_archive_statusdir$function$
;]]></string>
			<comment><![CDATA[list of files in the archive_status directory]]></comment>
		</function>
		<function name="pg_ls_dir" id="93a7cf6c-72f2-4431-8999-6fd28ee01d2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_dir(text)
 RETURNS SETOF text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_ls_dir_1arg$function$
;]]></string>
			<comment><![CDATA[list all files in a directory]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="pg_ls_dir" id="ec954d74-2ab5-4bd0-b663-116b36a64ad4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_dir(text)
 RETURNS SETOF text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_ls_dir_1arg$function$
;]]></string>
			<comment><![CDATA[list all files in a directory]]></comment>
		</function>
		<function name="pg_ls_logdir" id="bd19675f-c28c-4f42-a26c-39f330f184a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_logdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_logdir$function$
;]]></string>
			<comment><![CDATA[list files in the log directory]]></comment>
		</function>
		<function name="pg_ls_logicalmapdir" id="ead99463-fa63-4a61-a777-8b0c36410215" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_logicalmapdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_logicalmapdir$function$
;]]></string>
			<comment><![CDATA[list of files in the pg_logical/mappings directory]]></comment>
		</function>
		<function name="pg_ls_logicalsnapdir" id="83f0912a-c5a6-4158-868d-9fdad3e7b4bc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_logicalsnapdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_logicalsnapdir$function$
;]]></string>
			<comment><![CDATA[list of files in the pg_logical/snapshots directory]]></comment>
		</function>
		<function name="pg_ls_replslotdir" id="be5466dd-8def-4267-a535-99c9185a1d87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_replslotdir(slot_name text, OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_replslotdir$function$
;]]></string>
			<comment><![CDATA[list of files in the pg_replslot/slot_name directory]]></comment>
		</function>
		<function name="pg_ls_tmpdir" id="30e450f4-61d9-41c6-a5e1-65aab3a924e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_tmpdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_tmpdir_noargs$function$
;]]></string>
			<comment><![CDATA[list files in the pgsql_tmp directory]]></comment>
			<input_param name="name" jt="-1" type="text" inOut="3" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
		</function>
		<function name="pg_ls_tmpdir" id="861d44c4-7837-42e8-bc08-62239f05a157" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_tmpdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_tmpdir_noargs$function$
;]]></string>
			<comment><![CDATA[list files in the pgsql_tmp directory]]></comment>
		</function>
		<function name="pg_ls_waldir" id="293b8d7d-3685-4354-a026-6c700d76aa3b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_waldir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_waldir$function$
;]]></string>
			<comment><![CDATA[list of files in the WAL directory]]></comment>
		</function>
		<function name="pg_lsn" id="74a8b2bf-28b2-49bb-949b-f030762046aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn(numeric)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_pg_lsn$function$
;]]></string>
			<comment><![CDATA[convert numeric to pg_lsn]]></comment>
		</function>
		<function name="pg_lsn_cmp" id="8575f2bb-92dc-46fa-b9bd-bed617e8d1dd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_cmp(pg_lsn, pg_lsn)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="pg_lsn_eq" id="25489e51-b174-4c62-929a-08a279c92468" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_eq(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="pg_lsn_ge" id="109ca6dc-d36d-4f1e-8a7e-372fd488f439" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_ge(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="pg_lsn_gt" id="891c7175-7d6e-46e4-ac40-41deebab4418" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_gt(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="pg_lsn_hash" id="ee3f3381-282b-41d2-8770-132fcf66266e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_hash(pg_lsn)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="pg_lsn_hash_extended" id="b4dcfd2b-813d-4ed0-a6b1-2e4fb5718fe6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_hash_extended(pg_lsn, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_hash_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="pg_lsn_in" id="0e3a584f-c6c8-4464-9f59-d9d011d24243" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_in(cstring)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_lsn_larger" id="857322c4-f2cf-4150-a082-8660613f1d98" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_larger(pg_lsn, pg_lsn)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="pg_lsn_le" id="4a70fc44-ef20-4fcc-9b00-6a01c5b8bae6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_le(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="pg_lsn_lt" id="b8577f69-23db-46c2-8a0b-c59c51b1ec68" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_lt(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="pg_lsn_mi" id="155c395d-ea85-40dd-94e1-f50e98ff2011" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_mi(pg_lsn, pg_lsn)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="pg_lsn_mii" id="771c3e21-28d8-40ea-b1a8-5936e6868b19" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_mii(pg_lsn, numeric)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_mii$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="pg_lsn_ne" id="cfadd516-f631-48d2-b408-d986b7cfb5b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_ne(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$pg_lsn_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="pg_lsn_out" id="33bca884-056d-4873-9488-a09c77b7d0f4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_out(pg_lsn)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_lsn_pli" id="e173e455-cf69-43ef-a203-dfbbaefc8855" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_pli(pg_lsn, numeric)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_pli$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="pg_lsn_recv" id="66e04397-832c-4eb9-90bd-01497f27bef9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_recv(internal)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_lsn_send" id="d69f84c6-57ac-497d-9be9-272776e0cfce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_send(pg_lsn)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_lsn_smaller" id="4ce3a6ab-496d-4109-b1af-de491bc5b144" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_smaller(pg_lsn, pg_lsn)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="pg_mcv_list_in" id="f9ce7666-99d6-4968-8b90-dddef978f2b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_in(cstring)
 RETURNS pg_mcv_list
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_mcv_list_items" id="65306154-8661-4ef9-81d2-9ceb3ebfcec2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_items(mcv_list pg_mcv_list, OUT index integer, OUT "values" text[], OUT nulls boolean[], OUT frequency double precision, OUT base_frequency double precision)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_stats_ext_mcvlist_items$function$
;]]></string>
			<comment><![CDATA[details about MCV list items]]></comment>
		</function>
		<function name="pg_mcv_list_out" id="e8b56f4b-1c82-4e08-b961-d829eba0be28" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_out(pg_mcv_list)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_mcv_list_recv" id="366bc4fe-2a4c-4d33-b9c0-18713165fc87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_recv(internal)
 RETURNS pg_mcv_list
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_mcv_list_send" id="69f2b83c-5605-4f7b-b5d4-bf4a8a2f0656" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_mcv_list_send(pg_mcv_list)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_mcv_list_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_my_temp_schema" id="47d34130-ce41-4a72-bcc6-e72370f28f33" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_my_temp_schema()
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_my_temp_schema$function$
;]]></string>
			<comment><![CDATA[get OID of current session's temp schema, if any]]></comment>
		</function>
		<function name="pg_ndistinct_in" id="39510bb3-286a-433d-a16b-ee6f9a6483c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_in(cstring)
 RETURNS pg_ndistinct
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_ndistinct_out" id="2c0b69b2-7dd3-4798-bc2e-f0ed2c3bf5ed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_out(pg_ndistinct)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_ndistinct_recv" id="364203ac-864c-403b-8623-658b28ff8a6f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_recv(internal)
 RETURNS pg_ndistinct
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_ndistinct_send" id="01539734-6f8b-4790-859c-01f234c5d9cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_send(pg_ndistinct)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_nextoid" id="69d946fb-5ccc-4935-8c7d-0ae5fdd04134" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_nextoid(regclass, name, regclass)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$pg_nextoid$function$
;]]></string>
			<comment><![CDATA[return the next oid for a system table]]></comment>
		</function>
		<function name="pg_node_tree_in" id="e2fbdf8d-1794-4745-ab07-db37086a2d17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_in(cstring)
 RETURNS pg_node_tree
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_node_tree_out" id="688d3f2b-7c01-4422-aef7-406c093130d5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_out(pg_node_tree)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_node_tree_recv" id="1a1d3371-67e0-423e-8855-a5cbb522463f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_recv(internal)
 RETURNS pg_node_tree
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_node_tree_send" id="19bafea0-f49a-4856-bc55-5d02bdcc7aba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_send(pg_node_tree)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_notification_queue_usage" id="64a4e527-850c-48b8-9911-19a4349061aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_notification_queue_usage()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_notification_queue_usage$function$
;]]></string>
			<comment><![CDATA[get the fraction of the asynchronous notification queue currently in use]]></comment>
		</function>
		<function name="pg_notify" id="6ad68084-724f-4810-811c-01b5dd8eee05" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_notify(text, text)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$pg_notify$function$
;]]></string>
			<comment><![CDATA[send a notification event]]></comment>
		</function>
		<function name="pg_opclass_is_visible" id="0f817964-f847-4c59-8df8-c98bfbaaa363" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_opclass_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_opclass_is_visible$function$
;]]></string>
			<comment><![CDATA[is opclass visible in search path?]]></comment>
		</function>
		<function name="pg_operator_is_visible" id="78161a5f-bcaa-4725-a4f3-9d1b5977a615" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_operator_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_operator_is_visible$function$
;]]></string>
			<comment><![CDATA[is operator visible in search path?]]></comment>
		</function>
		<function name="pg_opfamily_is_visible" id="b9536d13-b2a8-4caf-a493-2fe70650286e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_opfamily_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_opfamily_is_visible$function$
;]]></string>
			<comment><![CDATA[is opfamily visible in search path?]]></comment>
		</function>
		<function name="pg_options_to_table" id="cace503d-a981-4be0-8342-b092a3714c30" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_options_to_table(options_array text[], OUT option_name text, OUT option_value text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 3
AS $function$pg_options_to_table$function$
;]]></string>
			<comment><![CDATA[convert generic options array to name/value table]]></comment>
		</function>
		<function name="pg_partition_ancestors" id="783d61a2-ba92-4ad1-801a-a73f4a946f42" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_partition_ancestors(partitionid regclass, OUT relid regclass)
 RETURNS SETOF regclass
 LANGUAGE internal
 PARALLEL SAFE STRICT ROWS 10
AS $function$pg_partition_ancestors$function$
;]]></string>
			<comment><![CDATA[view ancestors of the partition]]></comment>
		</function>
		<function name="pg_partition_root" id="4902c99c-578f-44f4-a13e-2ceccc5be013" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_partition_root(regclass)
 RETURNS regclass
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_partition_root$function$
;]]></string>
			<comment><![CDATA[get top-most partition root parent]]></comment>
		</function>
		<function name="pg_partition_tree" id="be4f8322-9621-4a0a-8fd3-92bcd3edf44e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_partition_tree(rootrelid regclass, OUT relid regclass, OUT parentrelid regclass, OUT isleaf boolean, OUT level integer)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_partition_tree$function$
;]]></string>
			<comment><![CDATA[view partition tree tables]]></comment>
		</function>
		<function name="pg_postmaster_start_time" id="014e93a5-5fd9-4627-8f8e-3c2797d9a549" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_postmaster_start_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_postmaster_start_time$function$
;]]></string>
			<comment><![CDATA[postmaster start time]]></comment>
		</function>
		<function name="pg_prepared_statement" id="aaea6ee5-0087-4b74-9c87-1660b13a2658" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_prepared_statement(OUT name text, OUT statement text, OUT prepare_time timestamp with time zone, OUT parameter_types regtype[], OUT result_types regtype[], OUT from_sql boolean, OUT generic_plans bigint, OUT custom_plans bigint)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_prepared_statement$function$
;]]></string>
			<comment><![CDATA[get the prepared statements for this session]]></comment>
		</function>
		<function name="pg_prepared_xact" id="b5b3bada-8952-45b6-aae3-08ce0e795624" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_prepared_xact(OUT transaction xid, OUT gid text, OUT prepared timestamp with time zone, OUT ownerid oid, OUT dbid oid)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_prepared_xact$function$
;]]></string>
			<comment><![CDATA[view two-phase transactions]]></comment>
		</function>
		<function name="pg_promote" id="4c5cfff3-8d80-4d96-abca-4fd4bee661b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_promote(wait boolean DEFAULT true, wait_seconds integer DEFAULT 60)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_promote$function$
;]]></string>
			<comment><![CDATA[promote standby server]]></comment>
		</function>
		<function name="pg_read_binary_file" id="fe9a5b5f-2a1a-4b48-bb2e-6c8fef27292a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_off_len_missing$function$
;]]></string>
			<comment><![CDATA[read bytea from a file]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_read_binary_file" id="a72fef18-adf2-4fc8-bc3c-30e98859bcea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_off_len_missing$function$
;]]></string>
			<comment><![CDATA[read bytea from a file]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_read_binary_file" id="dab24514-6dfe-4d0c-b25a-b1cc8db29b45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_off_len_missing$function$
;]]></string>
			<comment><![CDATA[read bytea from a file]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="boolean" inOut="1" />
		</function>
		<function name="pg_read_binary_file" id="7a3b9df1-9978-4083-b24b-983ee1385375" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_off_len_missing$function$
;]]></string>
			<comment><![CDATA[read bytea from a file]]></comment>
		</function>
		<function name="pg_read_file" id="a938130e-a62c-4aaf-bce3-2d14b3cf5524" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_off_len$function$
;]]></string>
			<comment><![CDATA[read text from a file]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_read_file" id="8f06b553-f787-4afe-948d-adb6af3612a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_off_len$function$
;]]></string>
			<comment><![CDATA[read text from a file]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_read_file" id="6c7c3eb7-9c7a-4ce9-91a8-f19a9f88ba47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_off_len$function$
;]]></string>
			<comment><![CDATA[read text from a file]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_read_file" id="956b39da-cba7-48ed-9ae8-3ddd679b4761" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_off_len$function$
;]]></string>
			<comment><![CDATA[read text from a file]]></comment>
		</function>
		<function name="pg_relation_filenode" id="67a32f07-4170-4b79-b2de-c566e64d6068" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_filenode(regclass)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_filenode$function$
;]]></string>
			<comment><![CDATA[filenode identifier of relation]]></comment>
		</function>
		<function name="pg_relation_filepath" id="61fb4731-553c-4668-b10e-cd98ec0ee469" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_filepath(regclass)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_filepath$function$
;]]></string>
			<comment><![CDATA[file path of relation]]></comment>
		</function>
		<function name="pg_relation_is_publishable" id="1cf27dfd-505c-4687-90c4-c9a34e40afbc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_is_publishable(regclass)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_is_publishable$function$
;]]></string>
			<comment><![CDATA[returns whether a relation can be part of a publication]]></comment>
		</function>
		<function name="pg_relation_is_updatable" id="9e92f2b9-8b62-4db5-988e-dbe0f79547e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_is_updatable(regclass, boolean)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_relation_is_updatable$function$
;]]></string>
			<comment><![CDATA[is a relation insertable/updatable/deletable]]></comment>
		</function>
		<function name="pg_relation_size" id="cef8b369-2a87-4baa-b082-d81e06d28481" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_size(regclass)
 RETURNS bigint
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
RETURN pg_relation_size($1, 'main'::text)
;]]></string>
			<comment><![CDATA[disk space usage for the main fork of the specified table or index]]></comment>
			<input_param jt="-1" type="regclass" inOut="1" />
		</function>
		<function name="pg_relation_size" id="48265fe7-c013-4879-89af-eca1855800a7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_size(regclass)
 RETURNS bigint
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
RETURN pg_relation_size($1, 'main'::text)
;]]></string>
			<comment><![CDATA[disk space usage for the main fork of the specified table or index]]></comment>
		</function>
		<function name="pg_reload_conf" id="4b38be6c-5d2b-4576-9f84-d4a11365fbfa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_reload_conf()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_reload_conf$function$
;]]></string>
			<comment><![CDATA[reload configuration files]]></comment>
		</function>
		<function name="pg_replication_origin_advance" id="670d8159-4c89-41ee-b4b9-1e4b8cf38ed6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_advance(text, pg_lsn)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_advance$function$
;]]></string>
			<comment><![CDATA[advance replication origin to specific location]]></comment>
		</function>
		<function name="pg_replication_origin_create" id="640a0eef-7833-41ad-abcc-bf89e3aa6596" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_create(text)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_create$function$
;]]></string>
			<comment><![CDATA[create a replication origin]]></comment>
		</function>
		<function name="pg_replication_origin_drop" id="fc4cef8a-597a-4117-bea0-bd9672e70a3c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_drop(text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_drop$function$
;]]></string>
			<comment><![CDATA[drop replication origin identified by its name]]></comment>
		</function>
		<function name="pg_replication_origin_oid" id="90f7c2fd-2878-4299-9e62-8eddf3cee307" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_oid(text)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_replication_origin_oid$function$
;]]></string>
			<comment><![CDATA[translate the replication origin's name to its id]]></comment>
		</function>
		<function name="pg_replication_origin_progress" id="8b258117-fbe1-4dd4-8c1d-6370cdb78070" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_progress(text, boolean)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_progress$function$
;]]></string>
			<comment><![CDATA[get an individual replication origin's replication progress]]></comment>
		</function>
		<function name="pg_replication_origin_session_is_setup" id="a353cea3-ed87-4115-a4f7-4c447daab29a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_is_setup()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_session_is_setup$function$
;]]></string>
			<comment><![CDATA[is a replication origin configured in this session]]></comment>
		</function>
		<function name="pg_replication_origin_session_progress" id="0c8e700f-3631-4c8a-9e85-f40dd903d5e5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_progress(boolean)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_progress$function$
;]]></string>
			<comment><![CDATA[get the replication progress of the current session]]></comment>
		</function>
		<function name="pg_replication_origin_session_reset" id="62163f37-e1bf-4792-a922-167acb11d023" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_reset()
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_reset$function$
;]]></string>
			<comment><![CDATA[teardown configured replication progress tracking]]></comment>
		</function>
		<function name="pg_replication_origin_session_setup" id="1987f5d1-39ac-4723-b482-1d74038e1f3c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_setup(text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_setup$function$
;]]></string>
			<comment><![CDATA[configure session to maintain replication progress tracking for the passed in origin]]></comment>
		</function>
		<function name="pg_replication_origin_xact_reset" id="877775c0-bfa9-49d0-bb6f-bd7bd2a1dacd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_xact_reset()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_xact_reset$function$
;]]></string>
			<comment><![CDATA[reset the transaction's origin lsn and timestamp]]></comment>
		</function>
		<function name="pg_replication_origin_xact_setup" id="88376439-0962-4a7f-8f23-04e4d6209b1a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_xact_setup(pg_lsn, timestamp with time zone)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_xact_setup$function$
;]]></string>
			<comment><![CDATA[setup the transaction's origin lsn and timestamp]]></comment>
		</function>
		<function name="pg_replication_slot_advance" id="f0581897-59ad-426a-b44f-3e1ca7bdf206" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_slot_advance(slot_name name, upto_lsn pg_lsn, OUT slot_name name, OUT end_lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_replication_slot_advance$function$
;]]></string>
			<comment><![CDATA[advance logical replication slot]]></comment>
		</function>
		<function name="pg_rotate_logfile" id="f62fa7a0-a889-446d-90b5-6cbd7e7daf65" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_rotate_logfile()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_rotate_logfile$function$
;]]></string>
			<comment><![CDATA[rotate log file]]></comment>
		</function>
		<function name="pg_safe_snapshot_blocking_pids" id="99612f83-87ed-4d34-98b0-5612517f138c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_safe_snapshot_blocking_pids(integer)
 RETURNS integer[]
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_safe_snapshot_blocking_pids$function$
;]]></string>
			<comment><![CDATA[get array of PIDs of sessions blocking specified backend PID from acquiring a safe snapshot]]></comment>
		</function>
		<function name="pg_sequence_last_value" id="88a0a36d-f0fc-4c39-b39e-c7b5c6625561" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sequence_last_value(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$pg_sequence_last_value$function$
;]]></string>
			<comment><![CDATA[sequence last value]]></comment>
		</function>
		<function name="pg_sequence_parameters" id="0656d57b-7779-40e2-834f-1de18ebb17bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sequence_parameters(sequence_oid oid, OUT start_value bigint, OUT minimum_value bigint, OUT maximum_value bigint, OUT increment bigint, OUT cycle_option boolean, OUT cache_size bigint, OUT data_type oid)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_sequence_parameters$function$
;]]></string>
			<comment><![CDATA[sequence parameters, for use by information schema]]></comment>
		</function>
		<function name="pg_settings_get_flags" id="0962b577-8839-4d9d-bb87-422c2191ce0a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_settings_get_flags(text)
 RETURNS text[]
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_settings_get_flags$function$
;]]></string>
			<comment><![CDATA[return flags for specified GUC]]></comment>
		</function>
		<function name="pg_show_all_file_settings" id="94321959-ccf0-4a5a-9fa3-3a9e04ea6cbb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_all_file_settings(OUT sourcefile text, OUT sourceline integer, OUT seqno integer, OUT name text, OUT setting text, OUT applied boolean, OUT error text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$show_all_file_settings$function$
;]]></string>
			<comment><![CDATA[show config file settings]]></comment>
		</function>
		<function name="pg_show_all_settings" id="80dd5872-5181-4c72-bcb8-db28808eddeb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_all_settings(OUT name text, OUT setting text, OUT unit text, OUT category text, OUT short_desc text, OUT extra_desc text, OUT context text, OUT vartype text, OUT source text, OUT min_val text, OUT max_val text, OUT enumvals text[], OUT boot_val text, OUT reset_val text, OUT sourcefile text, OUT sourceline integer, OUT pending_restart boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_all_settings$function$
;]]></string>
			<comment><![CDATA[SHOW ALL as a function]]></comment>
		</function>
		<function name="pg_show_replication_origin_status" id="0dda98fb-2325-4cb5-bf9a-99e873017144" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_replication_origin_status(OUT local_id oid, OUT external_id text, OUT remote_lsn pg_lsn, OUT local_lsn pg_lsn)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL RESTRICTED ROWS 100
AS $function$pg_show_replication_origin_status$function$
;]]></string>
			<comment><![CDATA[get progress for all replication origins]]></comment>
		</function>
		<function name="pg_size_bytes" id="4a42f18c-2a72-41d4-9b41-57f510bd0a3c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_bytes(text)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_bytes$function$
;]]></string>
			<comment><![CDATA[convert a size in human-readable format with size units into bytes]]></comment>
		</function>
		<function name="pg_size_pretty" id="07342452-6f00-4600-b01b-5c0d7b303eb9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_pretty(bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_pretty$function$
;]]></string>
			<comment><![CDATA[convert a long int to a human readable text using size units]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_size_pretty" id="9ae5e8df-2a48-4e5c-82b3-b4a6a6dc6a4d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_pretty(bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_pretty$function$
;]]></string>
			<comment><![CDATA[convert a long int to a human readable text using size units]]></comment>
		</function>
		<function name="pg_sleep" id="dbf35e4d-ea69-4dd3-9127-c69dabe9520b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep(double precision)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_sleep$function$
;]]></string>
			<comment><![CDATA[sleep for the specified time in seconds]]></comment>
		</function>
		<function name="pg_sleep_for" id="cff686a0-7f09-425a-981f-95884eb8bd8c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep_for(interval)
 RETURNS void
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
RETURN pg_sleep(((EXTRACT(epoch FROM (clock_timestamp() + $1)) - EXTRACT(epoch FROM clock_timestamp())))::double precision)
;]]></string>
			<comment><![CDATA[sleep for the specified interval]]></comment>
		</function>
		<function name="pg_sleep_until" id="f8807c1f-a76d-4d87-a055-df912b0c5236" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep_until(timestamp with time zone)
 RETURNS void
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
RETURN pg_sleep(((EXTRACT(epoch FROM $1) - EXTRACT(epoch FROM clock_timestamp())))::double precision)
;]]></string>
			<comment><![CDATA[sleep until the specified time]]></comment>
		</function>
		<function name="pg_snapshot_in" id="c208576c-5d4e-48b5-bbbb-eec6deebb7ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_snapshot_in(cstring)
 RETURNS pg_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_snapshot_out" id="f66998f3-07f6-4217-981d-6af9282304f6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_snapshot_out(pg_snapshot)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_snapshot_recv" id="e45785b8-860f-430e-a7ed-65f30bc9bda4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_snapshot_recv(internal)
 RETURNS pg_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_snapshot_send" id="34c585b5-2542-4c70-89ca-876563cf9cef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_snapshot_send(pg_snapshot)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="pg_snapshot_xip" id="b4dde75a-4e3c-4b79-9db2-94ab7595ccf8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_snapshot_xip(pg_snapshot)
 RETURNS SETOF xid8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 50
AS $function$pg_snapshot_xip$function$
;]]></string>
			<comment><![CDATA[get set of in-progress transactions in snapshot]]></comment>
		</function>
		<function name="pg_snapshot_xmax" id="a946cd51-da2c-4066-9381-26235c628bcc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_snapshot_xmax(pg_snapshot)
 RETURNS xid8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_xmax$function$
;]]></string>
			<comment><![CDATA[get xmax of snapshot]]></comment>
		</function>
		<function name="pg_snapshot_xmin" id="c018aa27-eb2a-457a-9dd3-6487bb74a8f6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_snapshot_xmin(pg_snapshot)
 RETURNS xid8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_xmin$function$
;]]></string>
			<comment><![CDATA[get xmin of snapshot]]></comment>
		</function>
		<function name="pg_split_walfile_name" id="7728b970-6731-4580-9664-43d98cd1bbfe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_split_walfile_name(file_name text, OUT segment_number numeric, OUT timeline_id bigint)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_split_walfile_name$function$
;]]></string>
			<comment><![CDATA[sequence number and timeline ID given a wal filename]]></comment>
		</function>
		<function name="pg_stat_clear_snapshot" id="200d5168-5769-40ca-9210-d5d246e3bf31" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_clear_snapshot()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$pg_stat_clear_snapshot$function$
;]]></string>
			<comment><![CDATA[statistics: discard current transaction's statistics snapshot]]></comment>
		</function>
		<function name="pg_stat_file" id="9e1fac3c-2365-4f3d-bc39-9ff5370d8b1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_file(filename text, OUT size bigint, OUT access timestamp with time zone, OUT modification timestamp with time zone, OUT change timestamp with time zone, OUT creation timestamp with time zone, OUT isdir boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_file_1arg$function$
;]]></string>
			<comment><![CDATA[get information about file]]></comment>
			<input_param name="filename" jt="-1" type="text" inOut="1" />
			<input_param name="size" jt="-1" type="bigint" inOut="3" />
			<input_param name="access" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="modification" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="change" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="creation" jt="-1" type="timestamp with time zone" inOut="3" />
			<input_param name="isdir" jt="-1" type="boolean" inOut="3" />
		</function>
		<function name="pg_stat_file" id="41232a52-00db-44de-b0a1-ebb88416817f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_file(filename text, OUT size bigint, OUT access timestamp with time zone, OUT modification timestamp with time zone, OUT change timestamp with time zone, OUT creation timestamp with time zone, OUT isdir boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_file_1arg$function$
;]]></string>
			<comment><![CDATA[get information about file]]></comment>
		</function>
		<function name="pg_stat_force_next_flush" id="dc22aa30-1eb6-4149-a4e2-7b76416793cc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_force_next_flush()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$pg_stat_force_next_flush$function$
;]]></string>
			<comment><![CDATA[statistics: force stats to be flushed after the next commit]]></comment>
		</function>
		<function name="pg_stat_get_activity" id="7007e9db-fa99-4448-95cc-ca258a38aebd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_activity(pid integer, OUT datid oid, OUT pid integer, OUT usesysid oid, OUT application_name text, OUT state text, OUT query text, OUT wait_event_type text, OUT wait_event text, OUT xact_start timestamp with time zone, OUT query_start timestamp with time zone, OUT backend_start timestamp with time zone, OUT state_change timestamp with time zone, OUT client_addr inet, OUT client_hostname text, OUT client_port integer, OUT backend_xid xid, OUT backend_xmin xid, OUT backend_type text, OUT ssl boolean, OUT sslversion text, OUT sslcipher text, OUT sslbits integer, OUT ssl_client_dn text, OUT ssl_client_serial numeric, OUT ssl_issuer_dn text, OUT gss_auth boolean, OUT gss_princ text, OUT gss_enc boolean, OUT gss_delegation boolean, OUT leader_pid integer, OUT query_id bigint)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 100
AS $function$pg_stat_get_activity$function$
;]]></string>
			<comment><![CDATA[statistics: information about currently active backends]]></comment>
		</function>
		<function name="pg_stat_get_analyze_count" id="d96540dc-e09b-4051-b13e-3bc735eb31eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_analyze_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_analyze_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of manual analyzes for a table]]></comment>
		</function>
		<function name="pg_stat_get_archiver" id="5d3e2c44-7885-4c81-86b2-85c6c85f15fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_archiver(OUT archived_count bigint, OUT last_archived_wal text, OUT last_archived_time timestamp with time zone, OUT failed_count bigint, OUT last_failed_wal text, OUT last_failed_time timestamp with time zone, OUT stats_reset timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_archiver$function$
;]]></string>
			<comment><![CDATA[statistics: information about WAL archiver]]></comment>
		</function>
		<function name="pg_stat_get_autoanalyze_count" id="1e839609-0942-4d65-9828-7b5dac91305b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_autoanalyze_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_autoanalyze_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of auto analyzes for a table]]></comment>
		</function>
		<function name="pg_stat_get_autovacuum_count" id="452706b8-55d4-4ad6-aed7-348e12739bc6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_autovacuum_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_autovacuum_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of auto vacuums for a table]]></comment>
		</function>
		<function name="pg_stat_get_backend_activity" id="e1770183-be5d-478a-8274-44ba0b606a2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_activity(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_activity$function$
;]]></string>
			<comment><![CDATA[statistics: current query of backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_activity_start" id="15542142-5efd-4060-aea9-7b98d6a7cdcc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_activity_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_activity_start$function$
;]]></string>
			<comment><![CDATA[statistics: start time for current query of backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_client_addr" id="0bf6cc32-a234-4626-9a37-dbe5f3ee54a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_client_addr(integer)
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_client_addr$function$
;]]></string>
			<comment><![CDATA[statistics: address of client connected to backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_client_port" id="b9123cfb-c24a-4ead-b667-49a396e0c085" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_client_port(integer)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_client_port$function$
;]]></string>
			<comment><![CDATA[statistics: port number of client connected to backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_dbid" id="6238676d-c1df-44b1-8eb8-1380850a5985" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_dbid(integer)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_dbid$function$
;]]></string>
			<comment><![CDATA[statistics: database ID of backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_idset" id="107a6b9e-6cf1-457b-bf80-8dd079c4c9c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_idset()
 RETURNS SETOF integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 100
AS $function$pg_stat_get_backend_idset$function$
;]]></string>
			<comment><![CDATA[statistics: currently active backend IDs]]></comment>
		</function>
		<function name="pg_stat_get_backend_pid" id="f57ee71b-4c6d-4e3d-92f2-68b5081355d1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_pid(integer)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_pid$function$
;]]></string>
			<comment><![CDATA[statistics: PID of backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_start" id="7d6d26c8-5526-479e-aa19-3429350f735a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_start$function$
;]]></string>
			<comment><![CDATA[statistics: start time for current backend session]]></comment>
		</function>
		<function name="pg_stat_get_backend_subxact" id="ae58a85d-e312-4714-beaa-ba5daf48f263" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_subxact(bid integer, OUT subxact_count integer, OUT subxact_overflowed boolean)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_subxact$function$
;]]></string>
			<comment><![CDATA[statistics: get subtransaction status of backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_userid" id="8f384cb6-ad11-4323-a3b2-0d83ea81c8a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_userid(integer)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_userid$function$
;]]></string>
			<comment><![CDATA[statistics: user ID of backend]]></comment>
		</function>
		<function name="pg_stat_get_backend_wait_event" id="fccd09ee-bdfa-4d64-91db-b9fd496f9b16" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_wait_event(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_wait_event$function$
;]]></string>
			<comment><![CDATA[statistics: wait event on which backend is currently waiting]]></comment>
		</function>
		<function name="pg_stat_get_backend_wait_event_type" id="f41046ea-1b6e-452a-977f-3faf30f45027" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_wait_event_type(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_wait_event_type$function$
;]]></string>
			<comment><![CDATA[statistics: wait event type on which backend is currently waiting]]></comment>
		</function>
		<function name="pg_stat_get_backend_xact_start" id="6483533d-3bf0-4652-b218-c15262f84529" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_xact_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_xact_start$function$
;]]></string>
			<comment><![CDATA[statistics: start time for backend's current transaction]]></comment>
		</function>
		<function name="pg_stat_get_bgwriter_buf_written_clean" id="208c5a36-6b08-4546-a3d6-6b93094a3464" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_buf_written_clean()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_buf_written_clean$function$
;]]></string>
			<comment><![CDATA[statistics: number of buffers written by the bgwriter for cleaning dirty buffers]]></comment>
		</function>
		<function name="pg_stat_get_bgwriter_maxwritten_clean" id="372ad954-fb78-4eb9-8ef5-8a2f876b36a5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_maxwritten_clean()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_maxwritten_clean$function$
;]]></string>
			<comment><![CDATA[statistics: number of times the bgwriter stopped processing when it had written too many buffers while cleaning]]></comment>
		</function>
		<function name="pg_stat_get_bgwriter_stat_reset_time" id="de39f746-cb2a-45ed-922a-2a513e25f808" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_stat_reset_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_stat_reset_time$function$
;]]></string>
			<comment><![CDATA[statistics: last reset for the bgwriter]]></comment>
		</function>
		<function name="pg_stat_get_blocks_fetched" id="ce545163-dc03-4775-a48e-4abdf8ac950a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_blocks_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks fetched]]></comment>
		</function>
		<function name="pg_stat_get_blocks_hit" id="1b6ed8e2-2f0d-48e8-ba0b-4c869afad178" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_blocks_hit$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks found in cache]]></comment>
		</function>
		<function name="pg_stat_get_buf_alloc" id="fa39e82e-c71f-4396-b556-f8b9e1dc0888" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_buf_alloc()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_buf_alloc$function$
;]]></string>
			<comment><![CDATA[statistics: number of buffer allocations]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_buffers_written" id="f9ca3fc1-d27b-417c-bfdf-401b44a4573c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_buffers_written()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_buffers_written$function$
;]]></string>
			<comment><![CDATA[statistics: number of buffers written during checkpoints and restartpoints]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_num_requested" id="6ddfaacf-6041-4c97-98e9-7b315e11fa74" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_num_requested()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_num_requested$function$
;]]></string>
			<comment><![CDATA[statistics: number of backend requested checkpoints started by the checkpointer]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_num_timed" id="a96563af-6785-4de8-8f7a-c9046abca98e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_num_timed()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_num_timed$function$
;]]></string>
			<comment><![CDATA[statistics: number of timed checkpoints started by the checkpointer]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_restartpoints_performed" id="74524ade-470f-4ed5-abe3-27a2fa0df1b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_restartpoints_performed()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_restartpoints_performed$function$
;]]></string>
			<comment><![CDATA[statistics: number of backend performed restartpoints]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_restartpoints_requested" id="2de2f107-ecc9-40a9-ad8f-28f2f35c6a14" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_restartpoints_requested()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_restartpoints_requested$function$
;]]></string>
			<comment><![CDATA[statistics: number of backend requested restartpoints started by the checkpointer]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_restartpoints_timed" id="1927bb71-04e1-416e-ad07-6d5494818b17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_restartpoints_timed()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_restartpoints_timed$function$
;]]></string>
			<comment><![CDATA[statistics: number of timed restartpoints started by the checkpointer]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_stat_reset_time" id="cd50b984-89ed-4137-bbf8-577fb5f9908f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_stat_reset_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_stat_reset_time$function$
;]]></string>
			<comment><![CDATA[statistics: last reset for the checkpointer]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_sync_time" id="015d2bc2-edef-455b-b428-66fa10eee4eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_sync_time()
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_sync_time$function$
;]]></string>
			<comment><![CDATA[statistics: checkpoint/restartpoint time spent synchronizing buffers to disk, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_checkpointer_write_time" id="b42d5db7-7014-4cae-92a8-fb450e604781" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpointer_write_time()
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpointer_write_time$function$
;]]></string>
			<comment><![CDATA[statistics: checkpoint/restartpoint time spent writing buffers to disk, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_db_active_time" id="5e3330e5-160d-4871-afcd-e2c35d5264c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_active_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_active_time$function$
;]]></string>
			<comment><![CDATA[statistics: session active time, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_db_blk_read_time" id="20b9b3a9-1355-40a5-a45f-76ecb1e38778" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blk_read_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blk_read_time$function$
;]]></string>
			<comment><![CDATA[statistics: block read time, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_db_blk_write_time" id="4cb15f7a-52d8-4879-974e-547a5fd1d7b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blk_write_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blk_write_time$function$
;]]></string>
			<comment><![CDATA[statistics: block write time, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_db_blocks_fetched" id="b48e174c-18a6-4504-8032-3c72d8efe3ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blocks_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: blocks fetched for database]]></comment>
		</function>
		<function name="pg_stat_get_db_blocks_hit" id="1ccf59b3-213b-4bd2-be03-ffe552dd2e58" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blocks_hit$function$
;]]></string>
			<comment><![CDATA[statistics: blocks found in cache for database]]></comment>
		</function>
		<function name="pg_stat_get_db_checksum_failures" id="3f08d1f0-3ad1-49dc-8f3b-dacded4c85e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_checksum_failures(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_checksum_failures$function$
;]]></string>
			<comment><![CDATA[statistics: checksum failures detected in database]]></comment>
		</function>
		<function name="pg_stat_get_db_checksum_last_failure" id="ea2b3a60-d340-4d9d-8b11-833ba586f128" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_checksum_last_failure(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_checksum_last_failure$function$
;]]></string>
			<comment><![CDATA[statistics: when last checksum failure was detected in database]]></comment>
		</function>
		<function name="pg_stat_get_db_conflict_all" id="db5909b4-fd4f-4b1a-9cfd-fe0ca5eb0334" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_all(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_all$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database]]></comment>
		</function>
		<function name="pg_stat_get_db_conflict_bufferpin" id="2dc4997a-b402-43bf-86b4-24d14f9a74e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_bufferpin(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_bufferpin$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by shared buffer pin]]></comment>
		</function>
		<function name="pg_stat_get_db_conflict_lock" id="7ee38d1f-0888-48d8-9d8a-85c20d7bfade" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_lock(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_lock$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by relation lock]]></comment>
		</function>
		<function name="pg_stat_get_db_conflict_logicalslot" id="494209de-d970-4b37-baad-85121d484a1b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_logicalslot(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_logicalslot$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by logical replication slot]]></comment>
		</function>
		<function name="pg_stat_get_db_conflict_snapshot" id="df994c78-1913-4343-bc06-7f2e9797db76" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_snapshot(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_snapshot$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by snapshot expiry]]></comment>
		</function>
		<function name="pg_stat_get_db_conflict_startup_deadlock" id="61bbee4c-c7b2-4276-ad3f-a6324f87e408" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_startup_deadlock(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_startup_deadlock$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by buffer deadlock]]></comment>
		</function>
		<function name="pg_stat_get_db_conflict_tablespace" id="ab21503e-91c2-4761-a7cb-825ab358ae3c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_tablespace(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_tablespace$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by drop tablespace]]></comment>
		</function>
		<function name="pg_stat_get_db_deadlocks" id="a2de5ad0-d591-41b3-bf2c-63fd07bc34ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_deadlocks(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_deadlocks$function$
;]]></string>
			<comment><![CDATA[statistics: deadlocks detected in database]]></comment>
		</function>
		<function name="pg_stat_get_db_idle_in_transaction_time" id="67bc28ff-68c6-40ac-a657-44ab9a293141" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_idle_in_transaction_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_idle_in_transaction_time$function$
;]]></string>
			<comment><![CDATA[statistics: session idle in transaction time, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_db_numbackends" id="b090dd6c-92c7-418b-822c-cd1ee306e700" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_numbackends(oid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_numbackends$function$
;]]></string>
			<comment><![CDATA[statistics: number of backends in database]]></comment>
		</function>
		<function name="pg_stat_get_db_session_time" id="11bc86eb-2d3e-4601-99b4-a8fdfc2e4c6d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_session_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_session_time$function$
;]]></string>
			<comment><![CDATA[statistics: session time, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_db_sessions" id="474817fa-2f42-4d2c-aca6-e83a9c7a65ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_sessions(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_sessions$function$
;]]></string>
			<comment><![CDATA[statistics: total number of sessions]]></comment>
		</function>
		<function name="pg_stat_get_db_sessions_abandoned" id="6b2a768c-e03a-4530-a8fb-35aafcabcb92" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_sessions_abandoned(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_sessions_abandoned$function$
;]]></string>
			<comment><![CDATA[statistics: number of sessions disconnected by the client closing the network connection]]></comment>
		</function>
		<function name="pg_stat_get_db_sessions_fatal" id="120f75d4-8ade-47c2-8be5-baa30c1988c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_sessions_fatal(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_sessions_fatal$function$
;]]></string>
			<comment><![CDATA[statistics: number of sessions disconnected by fatal errors]]></comment>
		</function>
		<function name="pg_stat_get_db_sessions_killed" id="b18e306c-f3a7-4a9a-8806-0fabf68c5188" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_sessions_killed(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_sessions_killed$function$
;]]></string>
			<comment><![CDATA[statistics: number of sessions killed by administrative action]]></comment>
		</function>
		<function name="pg_stat_get_db_stat_reset_time" id="7438acee-64b4-4424-aed8-76205c957e45" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_stat_reset_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_stat_reset_time$function$
;]]></string>
			<comment><![CDATA[statistics: last reset for a database]]></comment>
		</function>
		<function name="pg_stat_get_db_temp_bytes" id="35240e22-07c9-40c0-9c62-c708af19cdeb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_temp_bytes(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_temp_bytes$function$
;]]></string>
			<comment><![CDATA[statistics: number of bytes in temporary files written]]></comment>
		</function>
		<function name="pg_stat_get_db_temp_files" id="f0f0b2c6-0e2a-4bdd-9e9f-c6643128f432" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_temp_files(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_temp_files$function$
;]]></string>
			<comment><![CDATA[statistics: number of temporary files written]]></comment>
		</function>
		<function name="pg_stat_get_db_tuples_deleted" id="f018315d-5db1-48ac-ab28-9aae41890758" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_deleted$function$
;]]></string>
			<comment><![CDATA[statistics: tuples deleted in database]]></comment>
		</function>
		<function name="pg_stat_get_db_tuples_fetched" id="74082a56-a111-4fe9-b806-4dea5c778b17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: tuples fetched for database]]></comment>
		</function>
		<function name="pg_stat_get_db_tuples_inserted" id="91fe4aa2-ed17-42e9-b148-c09c24ee0950" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_inserted$function$
;]]></string>
			<comment><![CDATA[statistics: tuples inserted in database]]></comment>
		</function>
		<function name="pg_stat_get_db_tuples_returned" id="3d681aba-6fcc-41f0-9a3b-4466569bdde4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_returned$function$
;]]></string>
			<comment><![CDATA[statistics: tuples returned for database]]></comment>
		</function>
		<function name="pg_stat_get_db_tuples_updated" id="cc543bcd-5746-406e-8e01-64de55e511a1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_updated$function$
;]]></string>
			<comment><![CDATA[statistics: tuples updated in database]]></comment>
		</function>
		<function name="pg_stat_get_db_xact_commit" id="a997aa02-814d-45ba-9d08-fb1ced61dc49" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_xact_commit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_xact_commit$function$
;]]></string>
			<comment><![CDATA[statistics: transactions committed]]></comment>
		</function>
		<function name="pg_stat_get_db_xact_rollback" id="7e3f8288-b930-4f9f-b1b6-d72a5f3e05c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_xact_rollback(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_xact_rollback$function$
;]]></string>
			<comment><![CDATA[statistics: transactions rolled back]]></comment>
		</function>
		<function name="pg_stat_get_dead_tuples" id="289a538a-c17e-44ba-bc3d-f12ea9cce2be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_dead_tuples(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_dead_tuples$function$
;]]></string>
			<comment><![CDATA[statistics: number of dead tuples]]></comment>
		</function>
		<function name="pg_stat_get_function_calls" id="34ff0261-b89a-4dc8-a116-60a9fd3860e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_calls(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_calls$function$
;]]></string>
			<comment><![CDATA[statistics: number of function calls]]></comment>
		</function>
		<function name="pg_stat_get_function_self_time" id="d8a1b6fc-b0e3-4806-b951-a26322c13db9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_self_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_self_time$function$
;]]></string>
			<comment><![CDATA[statistics: self execution time of function, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_function_total_time" id="8bcd0d17-7402-48db-acf7-e591bbdc11d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_total_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_total_time$function$
;]]></string>
			<comment><![CDATA[statistics: total execution time of function, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_ins_since_vacuum" id="5aaeb2ac-301d-4d7c-aeb2-4f69b9a346a6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_ins_since_vacuum(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_ins_since_vacuum$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples inserted since last vacuum]]></comment>
		</function>
		<function name="pg_stat_get_io" id="f45745ce-bfce-409e-85c5-0ebe698034ff" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_io(OUT backend_type text, OUT object text, OUT context text, OUT reads bigint, OUT read_time double precision, OUT writes bigint, OUT write_time double precision, OUT writebacks bigint, OUT writeback_time double precision, OUT extends bigint, OUT extend_time double precision, OUT op_bytes bigint, OUT hits bigint, OUT evictions bigint, OUT reuses bigint, OUT fsyncs bigint, OUT fsync_time double precision, OUT stats_reset timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT ROWS 30
AS $function$pg_stat_get_io$function$
;]]></string>
			<comment><![CDATA[statistics: per backend type IO statistics]]></comment>
		</function>
		<function name="pg_stat_get_last_analyze_time" id="55cae90b-9c7b-44e9-9b1f-0c4c3f463710" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_analyze_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_analyze_time$function$
;]]></string>
			<comment><![CDATA[statistics: last manual analyze time for a table]]></comment>
		</function>
		<function name="pg_stat_get_last_autoanalyze_time" id="4c32782b-6c01-4188-b2b5-630fdcec25f9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_autoanalyze_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_autoanalyze_time$function$
;]]></string>
			<comment><![CDATA[statistics: last auto analyze time for a table]]></comment>
		</function>
		<function name="pg_stat_get_last_autovacuum_time" id="b42093d7-1f39-4a77-9882-028ca1273a87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_autovacuum_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_autovacuum_time$function$
;]]></string>
			<comment><![CDATA[statistics: last auto vacuum time for a table]]></comment>
		</function>
		<function name="pg_stat_get_last_vacuum_time" id="7f8464d3-21b7-45a2-aea5-d7c1c5a28098" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_vacuum_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_vacuum_time$function$
;]]></string>
			<comment><![CDATA[statistics: last manual vacuum time for a table]]></comment>
		</function>
		<function name="pg_stat_get_lastscan" id="dfcb4303-0e90-4a3f-9570-c9bbeabd21e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_lastscan(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_lastscan$function$
;]]></string>
			<comment><![CDATA[statistics: time of the last scan for table/index]]></comment>
		</function>
		<function name="pg_stat_get_live_tuples" id="8a69e18e-b7e5-4721-b7ac-9bd93454f320" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_live_tuples(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_live_tuples$function$
;]]></string>
			<comment><![CDATA[statistics: number of live tuples]]></comment>
		</function>
		<function name="pg_stat_get_mod_since_analyze" id="cdcee6ee-c258-486f-a45f-fdd4db0a8d97" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_mod_since_analyze(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_mod_since_analyze$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples changed since last analyze]]></comment>
		</function>
		<function name="pg_stat_get_numscans" id="a33438fb-bad4-4371-8a03-6f5f11646f22" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_numscans(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_numscans$function$
;]]></string>
			<comment><![CDATA[statistics: number of scans done for table/index]]></comment>
		</function>
		<function name="pg_stat_get_progress_info" id="0ce58902-923f-494a-9db3-3ecbe88c37bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_progress_info(cmdtype text, OUT pid integer, OUT datid oid, OUT relid oid, OUT param1 bigint, OUT param2 bigint, OUT param3 bigint, OUT param4 bigint, OUT param5 bigint, OUT param6 bigint, OUT param7 bigint, OUT param8 bigint, OUT param9 bigint, OUT param10 bigint, OUT param11 bigint, OUT param12 bigint, OUT param13 bigint, OUT param14 bigint, OUT param15 bigint, OUT param16 bigint, OUT param17 bigint, OUT param18 bigint, OUT param19 bigint, OUT param20 bigint)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 100
AS $function$pg_stat_get_progress_info$function$
;]]></string>
			<comment><![CDATA[statistics: information about progress of backends running maintenance command]]></comment>
		</function>
		<function name="pg_stat_get_recovery_prefetch" id="95ad3d91-cb06-4a03-a544-2f73a0bfec4e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_recovery_prefetch(OUT stats_reset timestamp with time zone, OUT prefetch bigint, OUT hit bigint, OUT skip_init bigint, OUT skip_new bigint, OUT skip_fpw bigint, OUT skip_rep bigint, OUT wal_distance integer, OUT block_distance integer, OUT io_depth integer)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT ROWS 1
AS $function$pg_stat_get_recovery_prefetch$function$
;]]></string>
			<comment><![CDATA[statistics: information about WAL prefetching]]></comment>
		</function>
		<function name="pg_stat_get_replication_slot" id="a056fbfd-aa5d-45ba-af87-0202178c6f53" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_replication_slot(slot_name text, OUT slot_name text, OUT spill_txns bigint, OUT spill_count bigint, OUT spill_bytes bigint, OUT stream_txns bigint, OUT stream_count bigint, OUT stream_bytes bigint, OUT total_txns bigint, OUT total_bytes bigint, OUT stats_reset timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_replication_slot$function$
;]]></string>
			<comment><![CDATA[statistics: information about replication slot]]></comment>
		</function>
		<function name="pg_stat_get_slru" id="35acb532-9d20-4bc7-b488-c7ce8e821815" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_slru(OUT name text, OUT blks_zeroed bigint, OUT blks_hit bigint, OUT blks_read bigint, OUT blks_written bigint, OUT blks_exists bigint, OUT flushes bigint, OUT truncates bigint, OUT stats_reset timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 100
AS $function$pg_stat_get_slru$function$
;]]></string>
			<comment><![CDATA[statistics: information about SLRU caches]]></comment>
		</function>
		<function name="pg_stat_get_snapshot_timestamp" id="d0f37633-5206-4ff5-9aec-fc364e5b92c5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_snapshot_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_snapshot_timestamp$function$
;]]></string>
			<comment><![CDATA[statistics: timestamp of the current statistics snapshot]]></comment>
		</function>
		<function name="pg_stat_get_subscription" id="175f7bb3-fa61-421e-ae78-e2181c9e6cdb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_subscription(subid oid, OUT subid oid, OUT relid oid, OUT pid integer, OUT leader_pid integer, OUT received_lsn pg_lsn, OUT last_msg_send_time timestamp with time zone, OUT last_msg_receipt_time timestamp with time zone, OUT latest_end_lsn pg_lsn, OUT latest_end_time timestamp with time zone, OUT worker_type text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 10
AS $function$pg_stat_get_subscription$function$
;]]></string>
			<comment><![CDATA[statistics: information about subscription]]></comment>
		</function>
		<function name="pg_stat_get_subscription_stats" id="fad5abb8-d13a-4e45-a2d8-5202a94c8059" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_subscription_stats(subid oid, OUT subid oid, OUT apply_error_count bigint, OUT sync_error_count bigint, OUT stats_reset timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_subscription_stats$function$
;]]></string>
			<comment><![CDATA[statistics: information about subscription stats]]></comment>
		</function>
		<function name="pg_stat_get_tuples_deleted" id="40c54c02-66c6-4a17-83e5-8fc9e687ec2d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_deleted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples deleted]]></comment>
		</function>
		<function name="pg_stat_get_tuples_fetched" id="66933a8a-3a6e-4470-b444-c2c6ef8c998d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples fetched by idxscan]]></comment>
		</function>
		<function name="pg_stat_get_tuples_hot_updated" id="0819f46b-3e91-44eb-81bb-311cd819fbc0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_hot_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_hot_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples hot updated]]></comment>
		</function>
		<function name="pg_stat_get_tuples_inserted" id="8e96a5b1-5f83-4c19-ba72-4c48bafa8fbe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_inserted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples inserted]]></comment>
		</function>
		<function name="pg_stat_get_tuples_newpage_updated" id="666ea0cc-ddc3-4d1b-8f07-682e44f5d6f7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_newpage_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_newpage_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples updated onto a new page]]></comment>
		</function>
		<function name="pg_stat_get_tuples_returned" id="1ac53bba-0079-4b5b-b192-f1f3659c3759" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_returned$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples read by seqscan]]></comment>
		</function>
		<function name="pg_stat_get_tuples_updated" id="8e55b4a2-07c9-414a-83f1-b23f4d4a9e09" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples updated]]></comment>
		</function>
		<function name="pg_stat_get_vacuum_count" id="1adfce1c-860e-4a77-bb21-3506fd201044" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_vacuum_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_vacuum_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of manual vacuums for a table]]></comment>
		</function>
		<function name="pg_stat_get_wal" id="d459527a-e8cf-4d36-8cae-382a77190db2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_wal(OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT wal_buffers_full bigint, OUT wal_write bigint, OUT wal_sync bigint, OUT wal_write_time double precision, OUT wal_sync_time double precision, OUT stats_reset timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_wal$function$
;]]></string>
			<comment><![CDATA[statistics: information about WAL activity]]></comment>
		</function>
		<function name="pg_stat_get_wal_receiver" id="a91e14cf-3584-4706-849a-91577d85aa8c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_wal_receiver(OUT pid integer, OUT status text, OUT receive_start_lsn pg_lsn, OUT receive_start_tli integer, OUT written_lsn pg_lsn, OUT flushed_lsn pg_lsn, OUT received_tli integer, OUT last_msg_send_time timestamp with time zone, OUT last_msg_receipt_time timestamp with time zone, OUT latest_end_lsn pg_lsn, OUT latest_end_time timestamp with time zone, OUT slot_name text, OUT sender_host text, OUT sender_port integer, OUT conninfo text)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_wal_receiver$function$
;]]></string>
			<comment><![CDATA[statistics: information about WAL receiver]]></comment>
		</function>
		<function name="pg_stat_get_wal_senders" id="ac559ec9-38b7-4133-a12e-ac3b4ffefcc5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_wal_senders(OUT pid integer, OUT state text, OUT sent_lsn pg_lsn, OUT write_lsn pg_lsn, OUT flush_lsn pg_lsn, OUT replay_lsn pg_lsn, OUT write_lag interval, OUT flush_lag interval, OUT replay_lag interval, OUT sync_priority integer, OUT sync_state text, OUT reply_time timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 10
AS $function$pg_stat_get_wal_senders$function$
;]]></string>
			<comment><![CDATA[statistics: information about currently active replication]]></comment>
		</function>
		<function name="pg_stat_get_xact_blocks_fetched" id="97dfd609-669d-46b4-b822-e5a503fbdf43" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_blocks_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks fetched in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_blocks_hit" id="290debc4-40f0-4717-9b32-51096fee73b4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_blocks_hit$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks found in cache in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_function_calls" id="812c7ed1-a824-4cb6-b83c-0f0c3464e038" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_calls(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_calls$function$
;]]></string>
			<comment><![CDATA[statistics: number of function calls in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_function_self_time" id="df2376e6-b01a-46f1-964a-5898521e32d2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_self_time(oid)
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_self_time$function$
;]]></string>
			<comment><![CDATA[statistics: self execution time of function in current transaction, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_xact_function_total_time" id="da4df8dd-fdc2-451c-ae4b-eb377e7d7596" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_total_time(oid)
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_total_time$function$
;]]></string>
			<comment><![CDATA[statistics: total execution time of function in current transaction, in milliseconds]]></comment>
		</function>
		<function name="pg_stat_get_xact_numscans" id="e183cc95-83c0-4815-9ddc-f501403a4829" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_numscans(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_numscans$function$
;]]></string>
			<comment><![CDATA[statistics: number of scans done for table/index in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_tuples_deleted" id="9b0305a7-dedb-44e5-9100-454dab18d3a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_deleted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples deleted in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_tuples_fetched" id="7008463c-c4a5-4fbf-843f-99d2dea110c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples fetched by idxscan in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_tuples_hot_updated" id="ec609d7a-7a99-42c9-9ea9-f9b9210afcaf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_hot_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_hot_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples hot updated in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_tuples_inserted" id="3f7f0169-45a1-4a76-9852-9472e4193746" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_inserted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples inserted in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_tuples_newpage_updated" id="0a348cb3-3fad-45bd-8dc5-e68c8536f236" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_newpage_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_newpage_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples updated onto a new page in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_tuples_returned" id="80d75725-b080-4a85-bcec-758be0a7f0c5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_returned$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples read by seqscan in current transaction]]></comment>
		</function>
		<function name="pg_stat_get_xact_tuples_updated" id="b0876eb8-0d5f-48c1-b034-299c2b696f1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples updated in current transaction]]></comment>
		</function>
		<function name="pg_stat_have_stats" id="1e61f27a-b920-4d40-8b86-abe79453e756" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_have_stats(text, oid, oid)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_have_stats$function$
;]]></string>
			<comment><![CDATA[statistics: check if a stats object exists]]></comment>
		</function>
		<function name="pg_stat_reset" id="9605341b-7c1e-4c18-8ab8-0c15f8af5ddb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_stat_reset$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for current database]]></comment>
		</function>
		<function name="pg_stat_reset_replication_slot" id="06dd3b27-256d-48c3-9005-f1c1dfae6c23" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_replication_slot(text)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_stat_reset_replication_slot$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for a single replication slot]]></comment>
		</function>
		<function name="pg_stat_reset_shared" id="a47b498d-adab-411f-98b5-77a1bbcb448e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_shared(target text DEFAULT NULL::text)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_stat_reset_shared$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics shared across the cluster]]></comment>
		</function>
		<function name="pg_stat_reset_single_function_counters" id="8f0cbbc1-cde3-4c76-9ebe-b40f8fb7fa04" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_single_function_counters(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_single_function_counters$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for a single function in the current database]]></comment>
		</function>
		<function name="pg_stat_reset_single_table_counters" id="de34b610-dcdb-4faa-9647-2c748dde9f81" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_single_table_counters(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_single_table_counters$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for a single table or index in the current database or shared across all databases in the cluster]]></comment>
		</function>
		<function name="pg_stat_reset_slru" id="5829bee7-77b1-44ff-8ed2-bd9ed5b97179" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_slru(target text DEFAULT NULL::text)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_stat_reset_slru$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for a single SLRU]]></comment>
		</function>
		<function name="pg_stat_reset_subscription_stats" id="17ceefcc-100e-4c54-8b8a-b20fe979d5ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_subscription_stats(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_stat_reset_subscription_stats$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for a single subscription]]></comment>
		</function>
		<function name="pg_statistics_obj_is_visible" id="f2cc9f71-2bb0-4e4f-b50c-43e69156e204" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_statistics_obj_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_statistics_obj_is_visible$function$
;]]></string>
			<comment><![CDATA[is statistics object visible in search path?]]></comment>
		</function>
		<function name="pg_stop_making_pinned_objects" id="70bee3e9-bbbe-419d-969b-fc24ed349b25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stop_making_pinned_objects()
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_stop_making_pinned_objects$function$
;]]></string>
			<comment><![CDATA[stop making pinned objects during initdb]]></comment>
		</function>
		<function name="pg_switch_wal" id="578d54ab-167f-42ff-b9f7-5c89721ad330" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_switch_wal()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_switch_wal$function$
;]]></string>
			<comment><![CDATA[switch to new wal file]]></comment>
		</function>
		<function name="pg_sync_replication_slots" id="0d0deda2-03cc-4edc-85f1-8c9ff85cf445" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sync_replication_slots()
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_sync_replication_slots$function$
;]]></string>
			<comment><![CDATA[sync replication slots from the primary to the standby]]></comment>
		</function>
		<function name="pg_table_is_visible" id="3406f158-4130-45a8-83bf-eaeb57dbd8e6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_table_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_table_is_visible$function$
;]]></string>
			<comment><![CDATA[is table visible in search path?]]></comment>
		</function>
		<function name="pg_table_size" id="c1662828-4835-4c31-af78-4b8676fd17c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_table_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_table_size$function$
;]]></string>
			<comment><![CDATA[disk space usage for the specified table, including TOAST, free space and visibility map]]></comment>
		</function>
		<function name="pg_tablespace_databases" id="bd1d87aa-8326-4578-8496-74aa967758a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_databases(oid)
 RETURNS SETOF oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_tablespace_databases$function$
;]]></string>
			<comment><![CDATA[get OIDs of databases in a tablespace]]></comment>
		</function>
		<function name="pg_tablespace_location" id="3d18a400-169f-401e-8c68-c790657a3626" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_location(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_tablespace_location$function$
;]]></string>
			<comment><![CDATA[tablespace location]]></comment>
		</function>
		<function name="pg_tablespace_size" id="fee169db-1955-41b5-98ad-5ab4deb98f36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_size(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_tablespace_size_oid$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified tablespace]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="pg_tablespace_size" id="23aae3fc-3748-4db2-88c0-9c2772e4cbaa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_size(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_tablespace_size_oid$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified tablespace]]></comment>
		</function>
		<function name="pg_terminate_backend" id="bf118dfc-4cd3-488a-91ea-98368635cc93" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_terminate_backend(pid integer, timeout bigint DEFAULT 0)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_terminate_backend$function$
;]]></string>
			<comment><![CDATA[terminate a server process]]></comment>
		</function>
		<function name="pg_timezone_abbrevs" id="34732235-d9b2-4aa8-b6de-8e0f94bc3259" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_timezone_abbrevs(OUT abbrev text, OUT utc_offset interval, OUT is_dst boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_timezone_abbrevs$function$
;]]></string>
			<comment><![CDATA[get the available time zone abbreviations]]></comment>
		</function>
		<function name="pg_timezone_names" id="37786eb8-ff9f-4848-89cc-92ecfe1d7b52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_timezone_names(OUT name text, OUT abbrev text, OUT utc_offset interval, OUT is_dst boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_timezone_names$function$
;]]></string>
			<comment><![CDATA[get the available time zone names]]></comment>
		</function>
		<function name="pg_total_relation_size" id="aca0cb1d-683a-4025-bfdf-fca5e4c897c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_total_relation_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_total_relation_size$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified table and associated indexes]]></comment>
		</function>
		<function name="pg_trigger_depth" id="bfd0ce79-ef4e-4d09-93ff-6569015cb0ce" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_trigger_depth()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_trigger_depth$function$
;]]></string>
			<comment><![CDATA[current trigger depth]]></comment>
		</function>
		<function name="pg_try_advisory_lock" id="5656f102-41d0-4a55-ae8a-558955328fea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_lock" id="63f361a4-ade7-4ff1-9b38-07a91db03c5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
		</function>
		<function name="pg_try_advisory_lock_shared" id="444527b7-2807-438e-b773-bf80ecb771ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_lock_shared" id="9a7099d2-7d23-4e55-81af-9da249c8b643" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
		</function>
		<function name="pg_try_advisory_xact_lock" id="9d125278-49e2-48b3-81d9-4dba7c6735f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_xact_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_xact_lock" id="c504e0b3-10aa-4a28-bb4a-7de2e59d5a59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_xact_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
		</function>
		<function name="pg_try_advisory_xact_lock_shared" id="7a1efca3-3dcd-4031-8ab7-18126b905aae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_xact_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="pg_try_advisory_xact_lock_shared" id="5cd734b5-6a2a-4053-88d9-7c2d1643344d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_try_advisory_xact_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
		</function>
		<function name="pg_ts_config_is_visible" id="4a7c2876-65f2-405b-a271-deb27fe9dc0a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_config_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_config_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search configuration visible in search path?]]></comment>
		</function>
		<function name="pg_ts_dict_is_visible" id="662a603d-36ff-4304-9c42-2411bcb553dd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_dict_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_dict_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search dictionary visible in search path?]]></comment>
		</function>
		<function name="pg_ts_parser_is_visible" id="1dba14a3-778d-4ef4-91be-6d2d32a08b3a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_parser_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_parser_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search parser visible in search path?]]></comment>
		</function>
		<function name="pg_ts_template_is_visible" id="98ad7044-a771-40c6-adb9-5791135f23c5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_template_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_template_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search template visible in search path?]]></comment>
		</function>
		<function name="pg_type_is_visible" id="14a4a2f9-9483-41c4-a5ca-366d36e69b1b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_type_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_type_is_visible$function$
;]]></string>
			<comment><![CDATA[is type visible in search path?]]></comment>
		</function>
		<function name="pg_typeof" id="0051b108-763e-454f-8e27-6b35dbc5a826" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_typeof("any")
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$pg_typeof$function$
;]]></string>
			<comment><![CDATA[type of the argument]]></comment>
		</function>
		<function name="pg_visible_in_snapshot" id="19dae292-2166-4f84-8035-465e45589f5c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_visible_in_snapshot(xid8, pg_snapshot)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_visible_in_snapshot$function$
;]]></string>
			<comment><![CDATA[is xid8 visible in snapshot?]]></comment>
		</function>
		<function name="pg_wal_lsn_diff" id="f94c827f-57d0-4b92-bdce-d9e12cf7919c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_lsn_diff(pg_lsn, pg_lsn)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_wal_lsn_diff$function$
;]]></string>
			<comment><![CDATA[difference in bytes, given two wal locations]]></comment>
		</function>
		<function name="pg_wal_replay_pause" id="8c53fcac-30bd-4ec0-adde-f5fffc0ce14c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_replay_pause()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_wal_replay_pause$function$
;]]></string>
			<comment><![CDATA[pause wal replay]]></comment>
		</function>
		<function name="pg_wal_replay_resume" id="9910e02f-ab34-4051-8dc0-8c71155bb211" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_replay_resume()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_wal_replay_resume$function$
;]]></string>
			<comment><![CDATA[resume wal replay, if it was paused]]></comment>
		</function>
		<function name="pg_wal_summary_contents" id="3483012a-ffb1-4bb9-8faf-269171f73892" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_summary_contents(tli bigint, start_lsn pg_lsn, end_lsn pg_lsn, OUT relfilenode oid, OUT reltablespace oid, OUT reldatabase oid, OUT relforknumber smallint, OUT relblocknumber bigint, OUT is_limit_block boolean)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT ROWS 100
AS $function$pg_wal_summary_contents$function$
;]]></string>
			<comment><![CDATA[contents of a WAL summary file]]></comment>
		</function>
		<function name="pg_walfile_name" id="0f06def4-7cd4-4614-8bb8-c16f0aa0ab2b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_walfile_name(pg_lsn)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_walfile_name$function$
;]]></string>
			<comment><![CDATA[wal filename, given a wal location]]></comment>
		</function>
		<function name="pg_walfile_name_offset" id="cdc24855-3c46-4aee-a0b7-892de3986af0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_walfile_name_offset(lsn pg_lsn, OUT file_name text, OUT file_offset integer)
 RETURNS record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_walfile_name_offset$function$
;]]></string>
			<comment><![CDATA[wal filename and byte offset, given a wal location]]></comment>
		</function>
		<function name="pg_xact_commit_timestamp" id="3b5652a3-b3bc-4099-ae6d-6457ae0aa22c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_xact_commit_timestamp(xid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_xact_commit_timestamp$function$
;]]></string>
			<comment><![CDATA[get commit timestamp of a transaction]]></comment>
		</function>
		<function name="pg_xact_commit_timestamp_origin" id="3d357439-1ab7-47b5-921f-0607c2150d3d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_xact_commit_timestamp_origin(xid xid, OUT "timestamp" timestamp with time zone, OUT roident oid)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_xact_commit_timestamp_origin$function$
;]]></string>
			<comment><![CDATA[get commit timestamp and replication origin of a transaction]]></comment>
		</function>
		<function name="pg_xact_status" id="22ff687d-d7c0-4aa7-9af1-2253f5ece96c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_xact_status(xid8)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_xact_status$function$
;]]></string>
			<comment><![CDATA[commit status of transaction]]></comment>
		</function>
		<function name="phraseto_tsquery" id="81004908-91ec-48aa-b11f-23a4071ab63f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.phraseto_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$phraseto_tsquery$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="phraseto_tsquery" id="fdf7595d-f76d-4628-a165-3bc1ddb44c98" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.phraseto_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$phraseto_tsquery$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
		</function>
		<function name="pi" id="7ad354b5-5703-4904-b5e7-27decc0c93e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pi()
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpi$function$
;]]></string>
			<comment><![CDATA[PI]]></comment>
		</function>
		<function name="plainto_tsquery" id="b9e4b921-09f2-4246-944f-6e49bd686e2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plainto_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$plainto_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="plainto_tsquery" id="def345b1-2520-400c-b5eb-ae7762591260" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plainto_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$plainto_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
		</function>
		<function name="plpgsql_call_handler" id="6e6fd728-bec4-4ec2-901c-afb557906f42" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_call_handler()
 RETURNS language_handler
 LANGUAGE c
AS '$libdir/plpgsql', $function$plpgsql_call_handler$function$
;]]></string>
		</function>
		<function name="plpgsql_inline_handler" id="f9b11e49-1110-4c89-a9e1-31a838761095" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_inline_handler(internal)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/plpgsql', $function$plpgsql_inline_handler$function$
;]]></string>
		</function>
		<function name="plpgsql_validator" id="d69041a3-e703-4bb6-a6e3-298c2c84eb02" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_validator(oid)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/plpgsql', $function$plpgsql_validator$function$
;]]></string>
		</function>
		<function name="point" id="3b2b8bc0-6010-41d7-81ef-52e228035853" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="point" id="8a9f64cc-0c06-4e95-8b19-0f0ff8f8f0bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="point" id="d33019c9-8997-48ac-9c01-af64e4751917" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="point" id="bdb64ce1-daf9-4cb3-8b00-0894acd99f7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param jt="-1" type="circle" inOut="1" />
		</function>
		<function name="point" id="23537917-e4e9-4246-a693-236155ee5fbd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
		</function>
		<function name="point_above" id="cc6ebb27-56e4-415e-8204-abbf2bfa418f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_above(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_above$function$
;]]></string>
			<comment><![CDATA[implementation of |>> operator]]></comment>
		</function>
		<function name="point_add" id="98c0e7c2-25c3-45f9-abea-2ed8b140915c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_add(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="point_below" id="1341b9c9-6575-4083-8caa-e9145aaf6cd2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_below(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_below$function$
;]]></string>
			<comment><![CDATA[implementation of <<| operator]]></comment>
		</function>
		<function name="point_distance" id="ce680766-f19a-4f32-ae56-9bdb9ef3959f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_distance(point, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="point_div" id="ea414739-f954-47ee-89a6-9706d34bb34b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_div(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
		</function>
		<function name="point_eq" id="fe944539-bdc1-4ef3-8f81-d28ccea77052" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_eq(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_eq$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
		</function>
		<function name="point_horiz" id="68b4403d-06d6-424d-9cec-adfe403b549a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_horiz(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<comment><![CDATA[implementation of ?- operator]]></comment>
		</function>
		<function name="point_in" id="4b211958-a3b5-4a07-abf3-7fef9e87cfa6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_in(cstring)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="point_left" id="5c08227f-04f9-4862-b5e8-fbfa83dbe8d6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_left(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="point_mul" id="36121d99-6d71-41d2-bbc7-f81e8ee8f136" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_mul(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="point_ne" id="031f4e45-bfc1-49f4-8f28-3d0e6e7c694b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_ne(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="point_out" id="711bafd2-6bd6-4201-8e08-37fafcbc1107" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_out(point)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="point_recv" id="28cb2513-0e4b-45f3-bc44-163e52975319" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_recv(internal)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="point_right" id="59821088-77a3-4e59-b0d0-4648055d1c64" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_right(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="point_send" id="a6106735-d272-40da-a6c2-fd76cbc40c18" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_send(point)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="point_sub" id="71eeb9e9-be8a-41bb-b5f9-a630cc39eafc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_sub(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_sub$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="point_vert" id="9f41d553-a14b-4ed2-868b-2b494b143979" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_vert(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
		</function>
		<function name="poly_above" id="0d71ab25-2124-4dbb-944f-b1de601a4ecb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_above(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_above$function$
;]]></string>
			<comment><![CDATA[implementation of |>> operator]]></comment>
		</function>
		<function name="poly_below" id="a4d20fe0-c198-4804-94f1-582b496c2a09" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_below(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_below$function$
;]]></string>
			<comment><![CDATA[implementation of <<| operator]]></comment>
		</function>
		<function name="poly_center" id="5f9578b7-2839-45b3-a93d-787b43ab51f9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_center(polygon)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="poly_contain" id="4e7e6109-fa34-469b-921a-1c1a370aa324" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contain(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contain$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="poly_contain_pt" id="bb7e4bf4-347c-4d23-b62a-30b97b70bae8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contain_pt(polygon, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contain_pt$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="poly_contained" id="bcef90b3-efe3-4c28-b46a-4ac9c5e346b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contained(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="poly_distance" id="25a7bb99-865c-4d8f-a9b0-dfc6058fa8ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_distance(polygon, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="poly_in" id="d10eacf9-b475-49a2-a3bf-8a0e53f8145e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_in(cstring)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="poly_left" id="d650a43a-0756-4ef4-b320-eff447170049" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_left(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="poly_npoints" id="4a9e1a31-fbc4-44b8-8a4c-9957ca5490c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_npoints(polygon)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_npoints$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
		</function>
		<function name="poly_out" id="c90c33a9-3b1e-47bd-9370-870b57969a16" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_out(polygon)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="poly_overabove" id="ee1a6445-eeac-4bac-a576-6b79e6bdc5ef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overabove(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overabove$function$
;]]></string>
			<comment><![CDATA[implementation of |&> operator]]></comment>
		</function>
		<function name="poly_overbelow" id="0d81e08b-1ffb-4391-8f74-59d4e9bd168b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overbelow(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overbelow$function$
;]]></string>
			<comment><![CDATA[implementation of &<| operator]]></comment>
		</function>
		<function name="poly_overlap" id="a5d3d1e0-3608-47ae-b5e6-5bb5df75f010" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overlap(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="poly_overleft" id="1fcf8fd7-5abe-4824-b169-d46c319c8e5a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overleft(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
		</function>
		<function name="poly_overright" id="1544cb34-fcea-4099-96e1-9a5f256a04d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overright(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
		</function>
		<function name="poly_recv" id="e4af10f2-c396-4dc4-9c79-4c27068e0876" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_recv(internal)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="poly_right" id="f7d77884-6d8c-4a4a-b7de-55b2713054ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_right(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="poly_same" id="837aa3bc-14a5-4f99-8b45-702f761807f1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_same(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_same$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
		</function>
		<function name="poly_send" id="803525af-f3a8-4053-acb8-b1aee9d3502f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_send(polygon)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="polygon" id="e2673110-0356-46ac-97be-6a55acab68cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(box)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_poly$function$
;]]></string>
			<comment><![CDATA[convert box to polygon]]></comment>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="polygon" id="8a7c1bb9-5285-4f53-862c-96fabc271635" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(box)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_poly$function$
;]]></string>
			<comment><![CDATA[convert box to polygon]]></comment>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="polygon" id="bfcfc32b-d813-4459-bb15-a51aa4d89ec4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(box)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_poly$function$
;]]></string>
			<comment><![CDATA[convert box to polygon]]></comment>
			<input_param jt="-1" type="box" inOut="1" />
		</function>
		<function name="polygon" id="03a5db01-91a8-463d-bd14-eddb18c74053" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(box)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_poly$function$
;]]></string>
			<comment><![CDATA[convert box to polygon]]></comment>
		</function>
		<function name="popen" id="084f5531-526d-4999-95f0-8debce3ac6cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.popen(path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_open$function$
;]]></string>
			<comment><![CDATA[open path]]></comment>
		</function>
		<function name="position" id="745088e4-d72a-4e62-8cd3-71f6c0e8f7a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitposition$function$
;]]></string>
			<comment><![CDATA[position of sub-bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="position" id="87f4738c-61e9-4bd4-992b-3da3b78e903c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitposition$function$
;]]></string>
			<comment><![CDATA[position of sub-bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="bit" inOut="1" />
		</function>
		<function name="position" id="a6a525a6-d2b9-4f43-a0ed-769d5c540640" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitposition$function$
;]]></string>
			<comment><![CDATA[position of sub-bitstring]]></comment>
		</function>
		<function name="positionjoinsel" id="fd4c89fb-0556-4ed7-b5fa-5eb447ffb5c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.positionjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$positionjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for position-comparison operators]]></comment>
		</function>
		<function name="positionsel" id="6d8ce72d-2a7f-485e-9afa-b201fc2ca857" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.positionsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$positionsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for position-comparison operators]]></comment>
		</function>
		<function name="postgresql_fdw_validator" id="3f464206-eda7-4298-8383-d8329b2caf31" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.postgresql_fdw_validator(text[], oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$postgresql_fdw_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="pow" id="7835de20-3be6-4cd1-9dd1-9ea2eef50c37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pow(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="pow" id="ee6ca41b-47b7-44e8-a4bb-4fd15fd3424d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pow(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
		</function>
		<function name="power" id="a40fa87b-ddaf-461f-aabd-164b33d4af77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.power(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="power" id="050e015b-e1eb-4d97-9008-2389f3d4522d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.power(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
		</function>
		<function name="prefixjoinsel" id="9d08b8ca-442c-4ea8-a5b3-b7296f1ff4e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prefixjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$prefixjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of exact prefix]]></comment>
		</function>
		<function name="prefixsel" id="2fe87fbf-8234-4817-8bae-418e0825c660" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prefixsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$prefixsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of exact prefix]]></comment>
		</function>
		<function name="prsd_end" id="52c5b753-c8fa-45cb-b709-bf59ddf6a3eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_end(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_end$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="prsd_headline" id="18ccf990-7575-4142-92d4-af7e9bbc39ff" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_headline(internal, internal, tsquery)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_headline$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="prsd_lextype" id="a177859a-a33b-4186-a90f-d21137a44b4d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_lextype(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_lextype$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="prsd_nexttoken" id="1a37029c-c9ad-44ca-ba66-f808cdd9d9df" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_nexttoken(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_nexttoken$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="prsd_start" id="d98b6cc3-d0cc-489d-9a48-5cbcd1387464" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_start(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_start$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="pt_contained_circle" id="d11c1f03-5c7a-4479-bfb4-58396e2cfb17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pt_contained_circle(point, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pt_contained_circle$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="pt_contained_poly" id="9da70810-02eb-44b6-b6c8-1225097868e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pt_contained_poly(point, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pt_contained_poly$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="query_to_xml" id="1163a3f0-ae09-43ae-9ddc-005be667b012" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xml(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xml$function$
;]]></string>
			<comment><![CDATA[map query result to XML]]></comment>
		</function>
		<function name="query_to_xml_and_xmlschema" id="14ea5a74-c501-4b1d-ad71-24c2f2b00ffd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xml_and_xmlschema(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map query result and structure to XML and XML Schema]]></comment>
		</function>
		<function name="query_to_xmlschema" id="450fa2c8-0fd9-42f8-917f-dfcbb3315a00" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xmlschema(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map query result structure to XML Schema]]></comment>
		</function>
		<function name="querytree" id="9e6268d3-31d5-4479-928f-dd224bd84a86" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.querytree(tsquery)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquerytree$function$
;]]></string>
			<comment><![CDATA[show real useful query for GiST index]]></comment>
		</function>
		<function name="quote_ident" id="ce42b57b-cfcd-473d-8297-7aa15b007695" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_ident(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$quote_ident$function$
;]]></string>
			<comment><![CDATA[quote an identifier for usage in a querystring]]></comment>
		</function>
		<function name="quote_literal" id="435714c6-91f5-41fa-a467-313b07a56064" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_literal(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$quote_literal$function$
;]]></string>
			<comment><![CDATA[quote a literal for usage in a querystring]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="quote_literal" id="b48fb989-ac59-436e-a8dd-fc49e7e28c79" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_literal(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$quote_literal$function$
;]]></string>
			<comment><![CDATA[quote a literal for usage in a querystring]]></comment>
		</function>
		<function name="quote_nullable" id="2d3e578d-7ea4-45d2-90de-a3aa4c657427" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_nullable(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$quote_nullable$function$
;]]></string>
			<comment><![CDATA[quote a possibly-null literal for usage in a querystring]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="quote_nullable" id="7e2baa98-524d-4205-9ee5-5e0d07e71c08" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_nullable(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$quote_nullable$function$
;]]></string>
			<comment><![CDATA[quote a possibly-null literal for usage in a querystring]]></comment>
		</function>
		<function name="radians" id="3d1c3b3a-079c-4102-9163-8e0fa5aa04f2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.radians(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$radians$function$
;]]></string>
			<comment><![CDATA[degrees to radians]]></comment>
		</function>
		<function name="radius" id="5fa17fe7-1055-4ef2-a71f-4de64937509a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.radius(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_radius$function$
;]]></string>
			<comment><![CDATA[radius of circle]]></comment>
		</function>
		<function name="random" id="cae3b4e2-195d-49fc-973e-42dbda8b4850" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.random()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$drandom$function$
;]]></string>
			<comment><![CDATA[random value]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="random" id="946b1625-703b-45c9-b215-8c68f908ab1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.random()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$drandom$function$
;]]></string>
			<comment><![CDATA[random value]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="random" id="d9348381-0498-4857-86aa-5696a955ae4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.random()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$drandom$function$
;]]></string>
			<comment><![CDATA[random value]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="random" id="5d117529-f56a-49e5-a194-60d37acfe6e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.random()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$drandom$function$
;]]></string>
			<comment><![CDATA[random value]]></comment>
		</function>
		<function name="random_normal" id="6ef0bc18-2552-4014-8ef7-6c4e4302a7c1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.random_normal(mean double precision DEFAULT 0, stddev double precision DEFAULT 1)
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$drandom_normal$function$
;]]></string>
			<comment><![CDATA[random value from normal distribution]]></comment>
		</function>
		<function name="range_adjacent" id="6425753f-3064-437d-adef-d0960cbe2ab5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_adjacent(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_adjacent$function$
;]]></string>
			<comment><![CDATA[implementation of -|- operator]]></comment>
		</function>
		<function name="range_adjacent_multirange" id="c1f13f2a-28da-497e-b000-c39328194b3b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_adjacent_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_adjacent_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of -|- operator]]></comment>
		</function>
		<function name="range_after" id="46144da9-d2aa-4b64-8abd-eb0bccbab437" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_after(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_after$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="range_after_multirange" id="e5401390-e69d-47d8-8a18-31aac8520792" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_after_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_after_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
		</function>
		<function name="range_agg_finalfn" id="583c1609-b318-48d2-82e8-6fd121cff1e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_agg_finalfn(internal, anyrange)
 RETURNS anymultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="range_agg_transfn" id="f12ee4aa-4cb9-4112-bbd9-c6ca0b4db06c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_agg_transfn(internal, anyrange)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="range_before" id="32d35f61-5871-4175-b8c0-b3dac6e67a07" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_before(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_before$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="range_before_multirange" id="8d7ae99b-db8d-4089-bebd-74a7d60246ab" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_before_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_before_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
		</function>
		<function name="range_cmp" id="19f0d006-65a9-45db-86a5-3b9b6eebc1fe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_cmp(anyrange, anyrange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="range_contained_by" id="9e05f15c-a069-412e-99ff-9efff2267ca9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contained_by(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contained_by$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="range_contained_by_multirange" id="3605fd2e-59ef-454b-b0dd-6fc459317378" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contained_by_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contained_by_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="range_contains" id="3a82ed26-4bfa-4332-abdd-57cd28d41e8c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="range_contains_elem" id="0fa5dc74-6725-4dd1-980c-b98d14192395" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains_elem(anyrange, anyelement)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT range_contains_elem_support
AS $function$range_contains_elem$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="range_contains_elem_support" id="fe3e440e-d395-4973-b977-41af1e928c17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains_elem_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contains_elem_support$function$
;]]></string>
			<comment><![CDATA[planner support for range_contains_elem]]></comment>
		</function>
		<function name="range_contains_multirange" id="33ed5935-40f5-4071-b3b8-04223af38da4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contains_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="range_eq" id="e004129b-94ef-4378-88dc-0e622147d79b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_eq(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="range_ge" id="19aa9a9b-28fb-4ca2-b317-1160c13ebbc4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_ge(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="range_gist_consistent" id="c1fbbf85-5668-42f1-9754-65415317c24a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_consistent(internal, anyrange, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="range_gist_penalty" id="f54f09f2-0ff1-4b6e-95a9-3777aea32c36" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_penalty$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="range_gist_picksplit" id="b4021eeb-d4b8-42d2-aadc-4aff553193c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="range_gist_same" id="3bd09e0b-45bd-4689-9372-0de1b04a408e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_same(anyrange, anyrange, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_same$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="range_gist_union" id="b4ad1c93-ca2d-458d-9e0b-df6497db3c8d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_union(internal, internal)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_union$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
		</function>
		<function name="range_gt" id="4b9aa911-c145-4673-933e-a19677b3aa58" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gt(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="range_in" id="ecfd9da4-b959-4fe0-8224-4b08e6f9169b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_in(cstring, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="range_intersect" id="415e9900-5ec0-4ee0-8f74-6f911ce86361" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_intersect(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
		</function>
		<function name="range_intersect_agg_transfn" id="ceaf6229-7aca-445d-a33c-d4c6e5fd1b96" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_intersect_agg_transfn(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_intersect_agg_transfn$function$
;]]></string>
			<comment><![CDATA[range aggregate by intersecting]]></comment>
		</function>
		<function name="range_le" id="86ac4cc2-8d34-4d5b-9721-2320a2fe2d25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_le(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="range_lt" id="70d5206f-9ad9-4629-a122-672be14f2d12" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_lt(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="range_merge" id="4d0b30ca-493b-490a-8ef9-c86f14f624ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_merge(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_merge$function$
;]]></string>
			<comment><![CDATA[the smallest range which includes both of the given ranges]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="range_merge" id="cf8a13ee-68eb-47f4-a42f-4e2edfbfb19b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_merge(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_merge$function$
;]]></string>
			<comment><![CDATA[the smallest range which includes both of the given ranges]]></comment>
		</function>
		<function name="range_minus" id="cacec6ac-0826-47ca-b903-f9e9c8f3259a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_minus(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_minus$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="range_ne" id="f86083cb-c2ac-45a5-b9f9-e700a8d065a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_ne(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="range_out" id="7e5f199c-9d26-446e-8a82-df79ce37ab55" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_out(anyrange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="range_overlaps" id="762562b1-8c92-40a8-aff7-720ae90c756f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overlaps(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overlaps$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="range_overlaps_multirange" id="b522bba2-9c4c-4c22-b712-6855ad0eccee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overlaps_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overlaps_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="range_overleft" id="8ce3016a-d9b2-4898-a127-892fc27041b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overleft(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
		</function>
		<function name="range_overleft_multirange" id="43bd56c9-a9f2-4a4a-8c7d-3fc9ffd18b07" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overleft_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overleft_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
		</function>
		<function name="range_overright" id="d367b3ce-83e0-4e1c-b0f5-65550a908945" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overright(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
		</function>
		<function name="range_overright_multirange" id="d2f2031f-06b2-4410-984d-22397bc4f2d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overright_multirange(anyrange, anymultirange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overright_multirange$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
		</function>
		<function name="range_recv" id="6c6a2477-51c8-4729-8f9a-d09694144380" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_recv(internal, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="range_send" id="db732cf1-4748-40f3-878e-09b27c60d07f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_send(anyrange)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="range_typanalyze" id="73cf48ad-25a9-45a9-8ccb-6cc6346cc9bd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_typanalyze$function$
;]]></string>
			<comment><![CDATA[range typanalyze]]></comment>
		</function>
		<function name="range_union" id="d8509308-784a-44c9-abcf-20a7d2e1c9fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_union(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_union$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="rangesel" id="fdb6b3a4-e873-45de-9d32-13dbcbbd3266" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rangesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$rangesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for range operators]]></comment>
		</function>
		<function name="rank" id="08a40311-61b8-4a8c-93fd-3d18c931c817" isSystem="false" params_known="n" >
			<string><![CDATA[create function rank window_rank;]]></string>
		</function>
		<function name="rank_final" id="ec3e314a-5887-4768-b32f-5dfa18a55739" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rank_final(internal, VARIADIC "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_rank_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="raw_array_subscript_handler" id="be70a99b-d8d6-4388-a8aa-cc059fceaa04" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.raw_array_subscript_handler(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$raw_array_subscript_handler$function$
;]]></string>
			<comment><![CDATA[raw array subscripting support]]></comment>
		</function>
		<function name="record_eq" id="03d7fc59-f09b-4049-996f-1981a8084808" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_eq(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="record_ge" id="7d761600-b167-46fb-b0c4-dbe7d043a247" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_ge(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="record_gt" id="a6adff72-d862-4336-b8ba-1acd7237e010" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_gt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="record_image_eq" id="ca9d0dd7-7b8c-439b-94f0-5b823b89de2e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_eq(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_eq$function$
;]]></string>
			<comment><![CDATA[implementation of *= operator]]></comment>
		</function>
		<function name="record_image_ge" id="a0873a5a-5d0a-4bb3-863e-6a756e3e818f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_ge(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_ge$function$
;]]></string>
			<comment><![CDATA[implementation of *>= operator]]></comment>
		</function>
		<function name="record_image_gt" id="906f2257-49fe-4412-af59-0e5d8b611581" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_gt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_gt$function$
;]]></string>
			<comment><![CDATA[implementation of *> operator]]></comment>
		</function>
		<function name="record_image_le" id="14e35e56-f02b-4183-8dfe-e46280089c1d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_le(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_le$function$
;]]></string>
			<comment><![CDATA[implementation of *<= operator]]></comment>
		</function>
		<function name="record_image_lt" id="dd377c85-841a-4f50-a32f-712c3e0efedf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_lt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_lt$function$
;]]></string>
			<comment><![CDATA[implementation of *< operator]]></comment>
		</function>
		<function name="record_image_ne" id="e3deadd8-dd0f-4e03-ada6-00d3b79a4ca6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_ne(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_ne$function$
;]]></string>
			<comment><![CDATA[implementation of *<> operator]]></comment>
		</function>
		<function name="record_in" id="a0000ed6-8217-4586-8249-a53b21efbe2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_in(cstring, oid, integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="record_le" id="ac3a3e96-3ad3-4887-8226-7ff076497e8d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_le(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="record_lt" id="73664e79-1a38-4618-ab94-5269904291d2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_lt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="record_ne" id="11c18587-baa4-4d0d-935f-863a4f8c4801" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_ne(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="record_out" id="efd5fdd1-8d9b-4565-9313-5189d6337b6a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_out(record)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="record_recv" id="4b1a3ef1-cd6b-4887-ac9d-855947d8e3b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_recv(internal, oid, integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="record_send" id="790e7845-cb2e-4269-980a-5cfb0ef916fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_send(record)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regclass" id="ddfa916c-bf33-43b7-9a28-8c5eb67a5f3d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclass(text)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$text_regclass$function$
;]]></string>
			<comment><![CDATA[convert text to regclass]]></comment>
		</function>
		<function name="regclassin" id="72ca496f-c779-4c3d-8c58-706a49cc4937" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassin(cstring)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regclassin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regclassout" id="f4b9b2e1-5242-41e8-9ce3-19ea2fbfb0fe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassout(regclass)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regclassout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regclassrecv" id="0b1ad6d8-7e98-41a3-8a61-eb1b311b85a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassrecv(internal)
 RETURNS regclass
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regclassrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regclasssend" id="5dc15a49-4572-4ed4-a0df-1a3976689c23" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclasssend(regclass)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regclasssend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regcollationin" id="8c68082c-b808-4d6e-8bee-60d691f7ab69" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regcollationin(cstring)
 RETURNS regcollation
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regcollationin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regcollationout" id="b8f30a4b-761f-48e5-a944-e95e7af72a22" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regcollationout(regcollation)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regcollationout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regcollationrecv" id="533f7658-b168-4a25-b0d8-51b55ee550b3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regcollationrecv(internal)
 RETURNS regcollation
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regcollationrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regcollationsend" id="1e37987b-dd46-4761-b43e-8cb08ce523ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regcollationsend(regcollation)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regcollationsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regconfigin" id="3e86883e-7b76-4e8d-99b1-37e73698e6b5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigin(cstring)
 RETURNS regconfig
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regconfigin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regconfigout" id="0ada24e8-cf95-4880-984a-bc74b77bc1ea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigout(regconfig)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regconfigout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regconfigrecv" id="62c2fc83-91e4-42d0-8fce-5a296a85f4e7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigrecv(internal)
 RETURNS regconfig
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regconfigrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regconfigsend" id="2ff383fe-cc61-4e51-a133-829f38993535" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigsend(regconfig)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regconfigsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regdictionaryin" id="1f859a2c-ac75-4dc5-8185-933f4ab6d426" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryin(cstring)
 RETURNS regdictionary
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regdictionaryin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regdictionaryout" id="bb4d59c8-531c-43b6-b1d4-4f8b7d24918f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryout(regdictionary)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regdictionaryout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regdictionaryrecv" id="35b566c2-0725-47ca-b19e-68135dea5bd3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryrecv(internal)
 RETURNS regdictionary
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regdictionaryrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regdictionarysend" id="6a3b3e79-361a-4486-b5cb-1f6889a175f7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionarysend(regdictionary)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regdictionarysend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regexeqjoinsel" id="bb0a90a2-0e24-46f8-a14e-6bf4935d1b17" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexeqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexeqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of regex match]]></comment>
		</function>
		<function name="regexeqsel" id="c51f4ddf-fd87-44dd-9f0c-0697751ca90b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexeqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexeqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of regex match]]></comment>
		</function>
		<function name="regexnejoinsel" id="d275a228-74f0-4170-a251-cb717882e115" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexnejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexnejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of regex non-match]]></comment>
		</function>
		<function name="regexnesel" id="fe26e1c2-0f7b-4f1f-b08c-93139f86ff22" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexnesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexnesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of regex non-match]]></comment>
		</function>
		<function name="regexp_count" id="11aca95f-a526-42bf-9887-f5e3d8d8ff79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_count(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_count_no_start$function$
;]]></string>
			<comment><![CDATA[count regexp matches]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_count" id="cb6f808e-c800-42bf-99af-638b03c69f8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_count(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_count_no_start$function$
;]]></string>
			<comment><![CDATA[count regexp matches]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_count" id="559c2659-420a-4432-a4ec-6130c9c0f153" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_count(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_count_no_start$function$
;]]></string>
			<comment><![CDATA[count regexp matches]]></comment>
		</function>
		<function name="regexp_instr" id="7f436f8a-721a-420e-9223-c65feaac4289" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_instr(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_instr_no_start$function$
;]]></string>
			<comment><![CDATA[position of regexp match]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_instr" id="0887d28f-8aae-4e16-82bc-5e65addcbf07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_instr(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_instr_no_start$function$
;]]></string>
			<comment><![CDATA[position of regexp match]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_instr" id="c7dfbd30-4056-47d3-90e7-994d988f0664" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_instr(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_instr_no_start$function$
;]]></string>
			<comment><![CDATA[position of regexp match]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_instr" id="76cb2e4e-ab5c-45ec-ab2f-acd396ca7c19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_instr(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_instr_no_start$function$
;]]></string>
			<comment><![CDATA[position of regexp match]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_instr" id="38de6f1b-81e4-4e8f-95a1-54966d728381" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_instr(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_instr_no_start$function$
;]]></string>
			<comment><![CDATA[position of regexp match]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_instr" id="0f644474-0e6b-49da-9bae-ac7db2e46afa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_instr(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_instr_no_start$function$
;]]></string>
			<comment><![CDATA[position of regexp match]]></comment>
		</function>
		<function name="regexp_like" id="b6fba46e-3cc2-4fe1-b9c1-d85736d599b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_like(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_like_no_flags$function$
;]]></string>
			<comment><![CDATA[test for regexp match]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_like" id="6e8d814c-5c52-4318-9a30-25760c366052" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_like(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_like_no_flags$function$
;]]></string>
			<comment><![CDATA[test for regexp match]]></comment>
		</function>
		<function name="regexp_match" id="e3040171-42f9-4aff-adb2-03e82a0b0f86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_match(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_match_no_flags$function$
;]]></string>
			<comment><![CDATA[find first match for regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_match" id="1c9639e8-d490-497d-805f-d119e0490882" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_match(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_match_no_flags$function$
;]]></string>
			<comment><![CDATA[find first match for regexp]]></comment>
		</function>
		<function name="regexp_matches" id="a9f852f9-d4ae-4994-b61b-39f63ed9e28e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_matches(text, text)
 RETURNS SETOF text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 1
AS $function$regexp_matches_no_flags$function$
;]]></string>
			<comment><![CDATA[find match(es) for regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_matches" id="e39a792b-ddfa-45b9-9a89-e13228097fc2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_matches(text, text)
 RETURNS SETOF text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 1
AS $function$regexp_matches_no_flags$function$
;]]></string>
			<comment><![CDATA[find match(es) for regexp]]></comment>
		</function>
		<function name="regexp_replace" id="836a52e6-9d2e-481b-b4c0-02a788892ea0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace_noopt$function$
;]]></string>
			<comment><![CDATA[replace text using regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_replace" id="07b5560f-056f-4524-b1b5-5a8d7ed0225e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace_noopt$function$
;]]></string>
			<comment><![CDATA[replace text using regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_replace" id="a8676a6c-9f9a-4cf1-8448-abf871e56a26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace_noopt$function$
;]]></string>
			<comment><![CDATA[replace text using regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_replace" id="76dc1198-c220-443c-b5cf-a32e6abb1060" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace_noopt$function$
;]]></string>
			<comment><![CDATA[replace text using regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_replace" id="032314c7-9341-41df-a694-e5e2b80f5cae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace_noopt$function$
;]]></string>
			<comment><![CDATA[replace text using regexp]]></comment>
		</function>
		<function name="regexp_split_to_array" id="a3c3ef12-ee99-48d5-bd87-915a6ad4eb5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_array(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_array_no_flags$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_split_to_array" id="391557d5-9daf-45d8-aee5-504aad040514" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_array(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_array_no_flags$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
		</function>
		<function name="regexp_split_to_table" id="3b28ff64-d79a-408c-b142-4553e9a15b3f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_table(text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_table_no_flags$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_split_to_table" id="5c3a0a06-cec9-419c-82f9-75984d0bb4d0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_table(text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_table_no_flags$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
		</function>
		<function name="regexp_substr" id="baf0ea06-2413-4f7d-852f-a412e15ee4cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_substr(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_substr_no_start$function$
;]]></string>
			<comment><![CDATA[extract substring that matches regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_substr" id="b4784e60-f2dd-428b-892b-022d3a133574" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_substr(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_substr_no_start$function$
;]]></string>
			<comment><![CDATA[extract substring that matches regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_substr" id="ea496325-8c47-4d32-8afa-2ecef2329c7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_substr(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_substr_no_start$function$
;]]></string>
			<comment><![CDATA[extract substring that matches regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_substr" id="c883e622-fd0c-4e44-b1d0-9cd1e6c4c8cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_substr(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_substr_no_start$function$
;]]></string>
			<comment><![CDATA[extract substring that matches regexp]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="regexp_substr" id="bedea20f-f00b-48c9-916a-ecc7ddd5cd2d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_substr(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_substr_no_start$function$
;]]></string>
			<comment><![CDATA[extract substring that matches regexp]]></comment>
		</function>
		<function name="regnamespacein" id="fe6284c3-de30-4e90-8bbf-e2b72c5c1e83" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacein(cstring)
 RETURNS regnamespace
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regnamespacein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regnamespaceout" id="f28a4655-da7b-429b-9c8f-4fd4ff5d4698" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespaceout(regnamespace)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regnamespaceout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regnamespacerecv" id="09e90092-6acb-4797-973b-3235f18b61c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacerecv(internal)
 RETURNS regnamespace
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regnamespacerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regnamespacesend" id="39db52a7-db05-487c-98c6-309aa683eda3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacesend(regnamespace)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regnamespacesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regoperatorin" id="3032deff-8f77-40bb-b49d-072bd2bbd785" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorin(cstring)
 RETURNS regoperator
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperatorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regoperatorout" id="8a47b00a-b8ec-48c4-96e7-1faf2a8440c4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorout(regoperator)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperatorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regoperatorrecv" id="a76216fd-78ee-4f2c-a3a1-1e67854c2687" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorrecv(internal)
 RETURNS regoperator
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperatorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regoperatorsend" id="32bb1989-9ce1-46f9-8ce3-7d55991da2d1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorsend(regoperator)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperatorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regoperin" id="eb8607df-1aef-4773-a1e2-914eaf2cc3a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperin(cstring)
 RETURNS regoper
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regoperout" id="77978799-3560-4398-8ba0-611dffe50149" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperout(regoper)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regoperrecv" id="69541fbe-5e4e-4ad8-8c18-0e8dbfb74fc4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperrecv(internal)
 RETURNS regoper
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regopersend" id="da521c8e-f184-4bd6-8176-4b3120663bd0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regopersend(regoper)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regopersend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regprocedurein" id="2cac79ea-eaad-4d1b-af14-750ef77d9a4a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedurein(cstring)
 RETURNS regprocedure
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocedurein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regprocedureout" id="75dcd98f-0dcf-441b-9379-666df0284b28" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedureout(regprocedure)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocedureout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regprocedurerecv" id="62bc692c-f8c5-45ac-b4b1-ba98c1eefda2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedurerecv(internal)
 RETURNS regprocedure
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocedurerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regproceduresend" id="63ead490-c755-4d47-b9a7-aeec9ae42e79" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regproceduresend(regprocedure)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regproceduresend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regprocin" id="623343fa-3974-4617-9a3c-a487e21b2510" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocin(cstring)
 RETURNS regproc
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regprocout" id="f36ac4ce-b76f-4976-89f6-88550dcecde7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocout(regproc)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regprocrecv" id="cbfe3b28-1661-4768-8077-64f61ab4af87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocrecv(internal)
 RETURNS regproc
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regprocsend" id="6e635b84-c507-414b-adbc-ce204d2daac2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocsend(regproc)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regrolein" id="64a40e85-a9cb-4bc5-b405-ec6bc2c7819a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolein(cstring)
 RETURNS regrole
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regrolein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regroleout" id="acd3aed6-2e89-4642-a033-9e1dffdd24e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regroleout(regrole)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regroleout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regrolerecv" id="50177505-61fd-40b7-9829-e390015f6219" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolerecv(internal)
 RETURNS regrole
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regrolerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regrolesend" id="838014e5-d440-48ad-8d0e-87762a4d060b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolesend(regrole)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regrolesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regtypein" id="2dce41e3-1d4c-4a2d-9e17-25f2abbebf96" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypein(cstring)
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regtypein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regtypeout" id="03401c85-c674-4f9d-9fc6-be79e49a7ee8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypeout(regtype)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regtypeout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regtyperecv" id="a64f59fe-c37f-4583-b7b8-be4d664bd673" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtyperecv(internal)
 RETURNS regtype
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regtyperecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="regtypesend" id="5de571b6-af4e-4eab-bd88-d563770cf842" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypesend(regtype)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regtypesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="repeat" id="d8f8278c-bf35-4038-8ea3-89cdae65a479" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.repeat(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$repeat$function$
;]]></string>
			<comment><![CDATA[replicate string n times]]></comment>
		</function>
		<function name="replace" id="c58540ba-2521-456c-a987-e6f55d132d05" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$replace_text$function$
;]]></string>
			<comment><![CDATA[replace all occurrences in string of old_substr with new_substr]]></comment>
		</function>
		<function name="reverse" id="e62717a3-3685-4ee8-b011-1cca31fde110" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reverse(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_reverse$function$
;]]></string>
			<comment><![CDATA[reverse text]]></comment>
		</function>
		<function name="right" id="505aa981-492c-4d4e-a995-0154dab227c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."right"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_right$function$
;]]></string>
			<comment><![CDATA[extract the last n characters]]></comment>
		</function>
		<function name="round" id="3007b9d1-f8e1-4b3a-ab63-cc1d853b47bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<comment><![CDATA[round to nearest integer]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="round" id="fc5fb5f2-19e5-4b76-9c57-d33c6872cb11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<comment><![CDATA[round to nearest integer]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="round" id="94dca56d-beae-4c71-aa35-9795c208f003" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<comment><![CDATA[round to nearest integer]]></comment>
		</function>
		<function name="row_number" id="7c7853f3-6385-419c-bad3-ea78eda3abf8" isSystem="false" params_known="n" >
			<string><![CDATA[create function row_number window_row_number;]]></string>
		</function>
		<function name="row_security_active" id="f5c51177-e611-4128-97e2-b481e68599ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_security_active(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_security_active$function$
;]]></string>
			<comment><![CDATA[row security for current context active on table by table oid]]></comment>
			<input_param jt="-1" type="oid" inOut="1" />
		</function>
		<function name="row_security_active" id="5c059b9f-bbb8-4df6-96b0-3b6a4618adf5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_security_active(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_security_active$function$
;]]></string>
			<comment><![CDATA[row security for current context active on table by table oid]]></comment>
		</function>
		<function name="row_to_json" id="31758a87-4095-4b58-85c2-5b8c7e17c53b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_to_json(record)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_to_json$function$
;]]></string>
			<comment><![CDATA[map row to json]]></comment>
			<input_param jt="-1" type="record" inOut="1" />
		</function>
		<function name="row_to_json" id="98d65892-16df-4f2e-b2ac-afd423c2c5ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_to_json(record)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_to_json$function$
;]]></string>
			<comment><![CDATA[map row to json]]></comment>
		</function>
		<function name="rpad" id="17d429de-780e-43a5-81da-25ea855a92cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rpad$function$
;]]></string>
			<comment><![CDATA[right-pad string to length]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="rpad" id="7cc2876b-c815-4bb2-a07c-61c41d2a2814" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rpad$function$
;]]></string>
			<comment><![CDATA[right-pad string to length]]></comment>
		</function>
		<function name="rtrim" id="91d6bbf8-f97d-4367-b2d9-749ad5c07cab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rtrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteartrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from right end of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="rtrim" id="65be6b47-3949-4e2f-b644-cc5b6f136f22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rtrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteartrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from right end of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="bytea" inOut="1" />
		</function>
		<function name="rtrim" id="36f4492f-b8d8-4192-8d2d-e5fd07dbe8b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rtrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteartrim$function$
;]]></string>
			<comment><![CDATA[trim selected bytes from right end of string]]></comment>
		</function>
		<function name="satisfies_hash_partition" id="2f410d2f-e7f2-450e-966f-26d7e1861b3f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.satisfies_hash_partition(oid, integer, integer, VARIADIC "any")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$satisfies_hash_partition$function$
;]]></string>
			<comment><![CDATA[hash partition CHECK constraint]]></comment>
		</function>
		<function name="scalargejoinsel" id="6d8434b9-04fe-4382-b32d-5e408b74c4b3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of >= and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scalargesel" id="a18f0ac1-b512-492d-83fc-afacb32b9b4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of >= and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scalargtjoinsel" id="1e7e6dbb-a588-44b0-8ce2-cb4f3f671f7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargtjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargtjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of > and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scalargtsel" id="a9a51140-f8b5-46e7-8361-828d0418039d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargtsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargtsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of > and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scalarlejoinsel" id="eb9aa17f-dd9c-40d9-8a4c-22d9d00edceb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarlejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarlejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of <= and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scalarlesel" id="bf7a1ee0-75b5-4e28-9f37-9a503f20a6ff" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarlesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarlesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of <= and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scalarltjoinsel" id="a3eb20d2-ff04-4c35-b08e-e5dd64b1c509" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarltjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarltjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of < and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scalarltsel" id="e7b350e9-bae8-4c59-96fc-41511b1b5f4d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarltsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarltsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of < and related operators on scalar datatypes]]></comment>
		</function>
		<function name="scale" id="7404416a-2fde-4d27-93e7-d1be8ce10f5d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scale(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_scale$function$
;]]></string>
			<comment><![CDATA[number of decimal digits in the fractional part]]></comment>
		</function>
		<function name="schema_to_xml" id="1a16f463-7117-413b-a465-9f533adacc78" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xml(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xml$function$
;]]></string>
			<comment><![CDATA[map schema contents to XML]]></comment>
		</function>
		<function name="schema_to_xml_and_xmlschema" id="66782e4c-3b74-4e13-bd84-b550beb71ce9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xml_and_xmlschema(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map schema contents and structure to XML and XML Schema]]></comment>
		</function>
		<function name="schema_to_xmlschema" id="58a92169-9c55-490e-b7ad-f0e51651c45b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xmlschema(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map schema structure to XML Schema]]></comment>
		</function>
		<function name="session_user" id="5e658fe3-86de-403d-8373-7b66c8d99c32" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."session_user"()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$session_user$function$
;]]></string>
			<comment><![CDATA[session user name]]></comment>
		</function>
		<function name="set_bit" id="ee03280f-3bc8-4cc2-8118-b24ac3bcf94e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_bit(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsetbit$function$
;]]></string>
			<comment><![CDATA[set bit]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="set_bit" id="7e68c7ad-509c-4dd3-b2e1-9b08fac113c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_bit(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsetbit$function$
;]]></string>
			<comment><![CDATA[set bit]]></comment>
		</function>
		<function name="set_byte" id="417cb03e-45f3-43e6-9939-e7a6dbed4aef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_byte(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaSetByte$function$
;]]></string>
			<comment><![CDATA[set byte]]></comment>
		</function>
		<function name="set_config" id="9ea873ab-fcff-4eb7-9474-939b8772a6fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_config(text, text, boolean)
 RETURNS text
 LANGUAGE internal
AS $function$set_config_by_name$function$
;]]></string>
			<comment><![CDATA[SET X as a function]]></comment>
		</function>
		<function name="set_masklen" id="ee1c1b13-7b57-468c-a064-d9d5db87bb51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_masklen(inet, integer)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_set_masklen$function$
;]]></string>
			<comment><![CDATA[change netmask of inet]]></comment>
			<input_param jt="-1" type="inet" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="set_masklen" id="25e75aa9-0dff-421e-b501-24dcec002338" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_masklen(inet, integer)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_set_masklen$function$
;]]></string>
			<comment><![CDATA[change netmask of inet]]></comment>
		</function>
		<function name="setseed" id="c2943239-15d9-4c5b-881b-b65064b49f53" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setseed(double precision)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$setseed$function$
;]]></string>
			<comment><![CDATA[set random seed]]></comment>
		</function>
		<function name="setval" id="3faf0999-1631-41df-ad3e-292c189377e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setval(regclass, bigint)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$setval_oid$function$
;]]></string>
			<comment><![CDATA[set sequence value]]></comment>
			<input_param jt="-1" type="regclass" inOut="1" />
			<input_param jt="-1" type="bigint" inOut="1" />
		</function>
		<function name="setval" id="cf693375-1fe7-407d-8221-cef0b9297211" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setval(regclass, bigint)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$setval_oid$function$
;]]></string>
			<comment><![CDATA[set sequence value]]></comment>
		</function>
		<function name="setweight" id="9805bde1-7169-4c8e-ab31-925141c3bab6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setweight(tsvector, "char", text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_setweight_by_filter$function$
;]]></string>
			<comment><![CDATA[set given weight for given lexemes]]></comment>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="&quot;char&quot;" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="setweight" id="b8cff079-25cd-4ef1-8f4a-f9543bfb0982" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setweight(tsvector, "char", text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_setweight_by_filter$function$
;]]></string>
			<comment><![CDATA[set given weight for given lexemes]]></comment>
		</function>
		<function name="sha224" id="88b0de51-6a7f-4024-af92-8cc942657815" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha224(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha224_bytea$function$
;]]></string>
			<comment><![CDATA[SHA-224 hash]]></comment>
		</function>
		<function name="sha256" id="78e42d84-6268-41d6-be37-24ae98918f41" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha256(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha256_bytea$function$
;]]></string>
			<comment><![CDATA[SHA-256 hash]]></comment>
		</function>
		<function name="sha384" id="e425e6ef-aa53-488e-af36-ad01a329b023" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha384(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha384_bytea$function$
;]]></string>
			<comment><![CDATA[SHA-384 hash]]></comment>
		</function>
		<function name="sha512" id="c309291c-bbd3-435b-9566-be150e332d82" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sha512(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$sha512_bytea$function$
;]]></string>
			<comment><![CDATA[SHA-512 hash]]></comment>
		</function>
		<function name="shell_in" id="2c066aa8-1e4e-4566-8061-b5bc8db0d709" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shell_in(cstring)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$shell_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="shell_out" id="f3ee7c70-1e55-42a8-8f6a-5944dc9c7a39" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shell_out(void)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$shell_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="shift_jis_2004_to_euc_jis_2004" id="8ebfc193-0dfd-4c5b-8da2-81e78a66ba67" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shift_jis_2004_to_euc_jis_2004(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc2004_sjis2004', $function$shift_jis_2004_to_euc_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SHIFT_JIS_2004 to EUC_JIS_2004]]></comment>
		</function>
		<function name="shift_jis_2004_to_utf8" id="c2ee402d-e122-4f0d-8233-1987efbf4739" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shift_jis_2004_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis2004', $function$shift_jis_2004_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SHIFT_JIS_2004 to UTF8]]></comment>
		</function>
		<function name="shobj_description" id="3176bb36-afa4-48e7-b350-38f50a16d7d7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shobj_description(oid, name)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
BEGIN ATOMIC
 SELECT pg_shdescription.description
    FROM pg_shdescription
   WHERE ((pg_shdescription.objoid = $1) AND (pg_shdescription.classoid = ( SELECT pg_class.oid
            FROM pg_class
           WHERE ((pg_class.relname = $2) AND (pg_class.relnamespace = ('pg_catalog'::regnamespace)::oid)))));
END
;]]></string>
			<comment><![CDATA[get description for object id and shared catalog name]]></comment>
		</function>
		<function name="sign" id="ea01bf5c-0296-4ed3-9e9b-ed50b2da99af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sign(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sign$function$
;]]></string>
			<comment><![CDATA[sign of value]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
		</function>
		<function name="sign" id="8b7f03cd-849d-4e07-95ad-e2badf89f183" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sign(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sign$function$
;]]></string>
			<comment><![CDATA[sign of value]]></comment>
		</function>
		<function name="similar_escape" id="64160f62-3526-419d-9e07-ffaaea0d96b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.similar_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$similar_escape$function$
;]]></string>
			<comment><![CDATA[convert SQL regexp pattern to POSIX style]]></comment>
		</function>
		<function name="similar_to_escape" id="8f2ac136-9883-4dfe-a8be-4467ac50b3dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.similar_to_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$similar_to_escape_2$function$
;]]></string>
			<comment><![CDATA[convert SQL regexp pattern to POSIX style]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="similar_to_escape" id="f9ac29fc-8d6d-442c-9f14-c2088bb24fd8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.similar_to_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$similar_to_escape_2$function$
;]]></string>
			<comment><![CDATA[convert SQL regexp pattern to POSIX style]]></comment>
		</function>
		<function name="sin" id="91270735-829d-4e11-924a-ea9133ffb0d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sin(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsin$function$
;]]></string>
			<comment><![CDATA[sine]]></comment>
		</function>
		<function name="sind" id="a475c49d-b853-4bc3-8b4c-502e07730733" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sind(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsind$function$
;]]></string>
			<comment><![CDATA[sine, degrees]]></comment>
		</function>
		<function name="sinh" id="fc5ca4b0-ebe0-4b73-909e-0ff88871bb2b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sinh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsinh$function$
;]]></string>
			<comment><![CDATA[hyperbolic sine]]></comment>
		</function>
		<function name="sjis_to_euc_jp" id="24bceef3-56af-4396-9b1c-65c928c04271" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_euc_jp(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$sjis_to_euc_jp$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SJIS to EUC_JP]]></comment>
		</function>
		<function name="sjis_to_mic" id="9fa8c270-d89d-4466-8248-de17f7d5c2f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$sjis_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SJIS to MULE_INTERNAL]]></comment>
		</function>
		<function name="sjis_to_utf8" id="8ae683bf-2468-4dcd-87d3-f4bb803e6825" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis', $function$sjis_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SJIS to UTF8]]></comment>
		</function>
		<function name="slope" id="0f73bf53-25d6-430c-935f-207a169b450a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.slope(point, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_slope$function$
;]]></string>
			<comment><![CDATA[slope between points]]></comment>
		</function>
		<function name="spg_bbox_quad_config" id="14ad0280-849f-49c3-8f8c-ccbabe80b777" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_bbox_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_bbox_quad_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over 2-D types represented by their bounding boxes]]></comment>
		</function>
		<function name="spg_box_quad_choose" id="62718f52-8233-4745-8933-ad42d7cda575" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
		</function>
		<function name="spg_box_quad_config" id="9da7d643-ac7a-4029-86af-c757155b680d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
		</function>
		<function name="spg_box_quad_inner_consistent" id="951af11c-0dfe-4a5c-bd3e-0bf9924f290d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
		</function>
		<function name="spg_box_quad_leaf_consistent" id="9fac8b4e-02ae-4375-bdeb-7805f9f9ed4e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
		</function>
		<function name="spg_box_quad_picksplit" id="cb591966-37fc-4ed8-929d-2c1c36d1b073" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
		</function>
		<function name="spg_kd_choose" id="6c5600af-b42a-46e3-bca7-c644f5e3a3c3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
		</function>
		<function name="spg_kd_config" id="5e37c34c-0052-420d-bb23-c26886d0f04a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
		</function>
		<function name="spg_kd_inner_consistent" id="2b886b19-97fb-43db-bebc-a4c4e5dd6c99" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
		</function>
		<function name="spg_kd_picksplit" id="9135858f-d1ac-4e24-9bc5-c7b329bc11fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
		</function>
		<function name="spg_poly_quad_compress" id="6c4aced7-75d5-4a77-adc2-5f136be96fc2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_poly_quad_compress(polygon)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_poly_quad_compress$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over polygons]]></comment>
		</function>
		<function name="spg_quad_choose" id="d54ba916-1448-4cb1-b9d2-dd7083fe4562" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
		</function>
		<function name="spg_quad_config" id="38056422-5199-45f8-ac6b-078565d65071" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
		</function>
		<function name="spg_quad_inner_consistent" id="d5103d2f-fd53-449d-8b0d-e99dcd0840b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
		</function>
		<function name="spg_quad_leaf_consistent" id="23d2965d-535e-4179-a410-2322b1e71c4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree and k-d tree over point]]></comment>
		</function>
		<function name="spg_quad_picksplit" id="49480579-9ca0-4b05-b04f-db95dd8f0dbd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
		</function>
		<function name="spg_range_quad_choose" id="035cd10c-c447-4f9c-b84c-f56a84f1b75d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
		</function>
		<function name="spg_range_quad_config" id="543868bf-97b2-4a63-9376-eda9f9a391d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
		</function>
		<function name="spg_range_quad_inner_consistent" id="05497a45-0a88-4cb7-8c00-96d1da02a1f9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
		</function>
		<function name="spg_range_quad_leaf_consistent" id="6256c81c-43e0-4207-b5f3-1ebfbdeac542" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
		</function>
		<function name="spg_range_quad_picksplit" id="85f48659-bcc7-47c1-94fd-eb7752dd4c5e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
		</function>
		<function name="spg_text_choose" id="9c746d01-e380-4108-9e10-285e692a750c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
		</function>
		<function name="spg_text_config" id="826ebae6-50c7-4936-930b-26f475884bea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
		</function>
		<function name="spg_text_inner_consistent" id="48db0bbf-0e26-4485-9552-2c789e1c0958" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
		</function>
		<function name="spg_text_leaf_consistent" id="50857304-b2f2-40a8-b9f4-d466014433a0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
		</function>
		<function name="spg_text_picksplit" id="f43d0ce7-3e92-47ea-8807-3f15ee64b4a7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
		</function>
		<function name="spghandler" id="5eae8ccf-f5e3-4c90-9804-a0bf643077da" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spghandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$spghandler$function$
;]]></string>
			<comment><![CDATA[spgist index access method handler]]></comment>
		</function>
		<function name="split_part" id="f7b37410-47d4-4594-ac52-1e8f01227576" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.split_part(text, text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$split_part$function$
;]]></string>
			<comment><![CDATA[split string by field_sep and return field_num]]></comment>
		</function>
		<function name="sqrt" id="c39ebeb7-e962-49a4-8bc5-f543d2da15f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sqrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsqrt$function$
;]]></string>
			<comment><![CDATA[square root]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="sqrt" id="d856bb32-15dd-48d8-9685-baa632575f08" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sqrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsqrt$function$
;]]></string>
			<comment><![CDATA[square root]]></comment>
		</function>
		<function name="starts_with" id="c1e5adab-b356-40a6-b1ed-353a602f7d8a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.starts_with(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF SUPPORT text_starts_with_support
AS $function$text_starts_with$function$
;]]></string>
			<comment><![CDATA[implementation of ^@ operator]]></comment>
		</function>
		<function name="statement_timestamp" id="3b68b1b8-1f7e-41b0-a1cc-ef2966bb46dd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.statement_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$statement_timestamp$function$
;]]></string>
			<comment><![CDATA[current statement time]]></comment>
		</function>
		<function name="string_agg_combine" id="c38546d2-3aa3-494b-a240-0df94e79ce89" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$string_agg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
		</function>
		<function name="string_agg_deserialize" id="a2c7da05-0819-4a6a-af0b-afc6e47a0d6c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$string_agg_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
		</function>
		<function name="string_agg_finalfn" id="dca23a5f-ed7b-4dc7-a0f8-3cd616f1d4b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_finalfn(internal)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$string_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
		</function>
		<function name="string_agg_serialize" id="98aa6935-1cba-4af9-b4bc-292d2df2a476" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$string_agg_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
		</function>
		<function name="string_agg_transfn" id="a931c6d0-67f5-4670-a6ed-798056c5917a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_transfn(internal, text, text)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$string_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="string_to_array" id="b3cef25b-4cbd-4134-9122-a59871f68752" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_array(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_array_null$function$
;]]></string>
			<comment><![CDATA[split delimited text, with null string]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="string_to_array" id="fc632a43-1290-41f5-99d4-2bfff5ac24ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_array(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_array_null$function$
;]]></string>
			<comment><![CDATA[split delimited text, with null string]]></comment>
		</function>
		<function name="string_to_table" id="e045add3-0173-4b28-a372-bacc26f507d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_table(text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_table$function$
;]]></string>
			<comment><![CDATA[split delimited text]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="string_to_table" id="e1efbad9-7f52-42a3-909c-95eb692c6f54" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_table(text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_table$function$
;]]></string>
			<comment><![CDATA[split delimited text]]></comment>
		</function>
		<function name="strip" id="70b6021c-16e5-446c-9301-52285495eaa2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.strip(tsvector)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_strip$function$
;]]></string>
			<comment><![CDATA[strip position information]]></comment>
		</function>
		<function name="strpos" id="866429cd-80da-41d5-8c12-b204bf3d4b73" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.strpos(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textpos$function$
;]]></string>
			<comment><![CDATA[position of substring]]></comment>
		</function>
		<function name="substr" id="3156b38f-5f45-41e9-b1bc-287900308a66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substr" id="1f4aa6cd-c4a0-4a65-9cee-7f9a6b01e6c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substr" id="751eae96-c63d-4f3b-b372-d9553b83421e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param jt="-1" type="bytea" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substr" id="6faa618a-6bf0-4d09-817b-27aa0ddab81e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
		</function>
		<function name="substring" id="fc927443-91df-48f3-99ea-e9a52753058b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="dc053aa8-3a4e-4c61-81d4-53f57c73361d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="d4892d5d-ec01-4779-ba5c-e041f756b137" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="e6fadd29-0b11-445c-858a-1f07a589ab59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="3efcd637-b4c0-4f36-b66f-7c716a944929" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="f339d3a2-22e1-47fe-a979-9996f41b4e9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="9edbcaf8-c352-4913-9896-4ac81e9c8934" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param jt="-1" type="bit" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="substring" id="b87f488f-7c11-4129-9bf4-9b7db9b08f4f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
		</function>
		<function name="suppress_redundant_updates_trigger" id="03dcb057-b7c8-4c46-9c64-e3921a88ba16" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.suppress_redundant_updates_trigger()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$suppress_redundant_updates_trigger$function$
;]]></string>
			<comment><![CDATA[trigger to suppress updates when new and old records match]]></comment>
		</function>
		<function name="system" id="a2d8e354-b2f2-4b1a-9d2b-a18ae9e13190" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.system(internal)
 RETURNS tsm_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$tsm_system_handler$function$
;]]></string>
			<comment><![CDATA[SYSTEM tablesample method handler]]></comment>
		</function>
		<function name="system_user" id="715ee9b8-141b-46a4-a810-42d297114a3b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."system_user"()
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$system_user$function$
;]]></string>
			<comment><![CDATA[system user name]]></comment>
		</function>
		<function name="table_am_handler_in" id="9e6d98e1-2740-4d1f-b4df-f55129f061fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_am_handler_in(cstring)
 RETURNS table_am_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$table_am_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="table_am_handler_out" id="5cc2f1bd-55c5-4de6-8840-cb97dcdea5e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_am_handler_out(table_am_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$table_am_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="table_to_xml" id="362e18a0-8205-4eb0-9712-5cd1f35466b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xml(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xml$function$
;]]></string>
			<comment><![CDATA[map table contents to XML]]></comment>
		</function>
		<function name="table_to_xml_and_xmlschema" id="5db55481-964e-446b-810e-60f1b9c48f42" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xml_and_xmlschema(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map table contents and structure to XML and XML Schema]]></comment>
		</function>
		<function name="table_to_xmlschema" id="44a7ba81-eef0-44a2-8ddb-6de6a151a3c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xmlschema(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map table structure to XML Schema]]></comment>
		</function>
		<function name="tan" id="b3fa8b17-f7fa-4091-bd21-21d405efee6a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tan(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtan$function$
;]]></string>
			<comment><![CDATA[tangent]]></comment>
		</function>
		<function name="tand" id="4a3c3fa0-bdc9-4cd7-84f2-c5d5bdd163b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tand(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtand$function$
;]]></string>
			<comment><![CDATA[tangent, degrees]]></comment>
		</function>
		<function name="tanh" id="82e733a4-5070-4c93-84b5-da2c6cda354d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tanh(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtanh$function$
;]]></string>
			<comment><![CDATA[hyperbolic tangent]]></comment>
		</function>
		<function name="text" id="106064c0-4e81-4210-9a3b-dcafb2f10a69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<comment><![CDATA[serialize an XML value to a character string]]></comment>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="text" id="73ac2f05-2e04-4df0-bb40-39e2fb661907" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<comment><![CDATA[serialize an XML value to a character string]]></comment>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="text" id="03277e21-1b5b-4ec8-9e86-9052250db4d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<comment><![CDATA[serialize an XML value to a character string]]></comment>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="text" id="c1494b47-ebdf-4596-9b32-a894b6eb85af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<comment><![CDATA[serialize an XML value to a character string]]></comment>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="text" id="91147f67-2a18-4295-b841-9f28f8edb244" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<comment><![CDATA[serialize an XML value to a character string]]></comment>
			<input_param jt="-1" type="xml" inOut="1" />
		</function>
		<function name="text" id="748eef29-3716-4bb3-918d-1faacfa316e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<comment><![CDATA[serialize an XML value to a character string]]></comment>
		</function>
		<function name="text_ge" id="eecae6e4-ffff-48bf-b2a8-2d3b83a976b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_ge(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="text_gt" id="e1bba97f-49c2-4d9b-af89-4f6b78a5a0c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_gt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="text_larger" id="56a4e306-5e75-4097-9131-5555e742810d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_larger(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="text_le" id="0d87d347-f614-4311-9730-8a0d1bd947ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_le(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="text_lt" id="eee10cc9-1e73-4867-9077-7c9247ca317e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_lt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="text_pattern_ge" id="223d3b60-391a-4f3f-905e-159b8dab01d5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_ge(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_ge$function$
;]]></string>
			<comment><![CDATA[implementation of ~>=~ operator]]></comment>
		</function>
		<function name="text_pattern_gt" id="983e9466-d59d-452a-9e42-2274eede61a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_gt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_gt$function$
;]]></string>
			<comment><![CDATA[implementation of ~>~ operator]]></comment>
		</function>
		<function name="text_pattern_le" id="1bf5ded1-fcbd-45ed-bb79-6c356dbee55e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_le(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_le$function$
;]]></string>
			<comment><![CDATA[implementation of ~<=~ operator]]></comment>
		</function>
		<function name="text_pattern_lt" id="8f2857e9-feda-420e-bacc-fd1ce1e8bace" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_lt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_pattern_lt$function$
;]]></string>
			<comment><![CDATA[implementation of ~<~ operator]]></comment>
		</function>
		<function name="text_smaller" id="f351f2e1-9d25-4bd8-8895-ae2364286127" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_smaller(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$text_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="text_starts_with_support" id="1bb48d6c-f348-4c05-9dad-363d45661c24" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_starts_with_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_starts_with_support$function$
;]]></string>
			<comment><![CDATA[planner support for text_starts_with]]></comment>
		</function>
		<function name="textanycat" id="401adaa1-63c6-4b74-a1f5-cc49ebd93c5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textanycat(text, anynonarray)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $1 operator(pg_catalog.||) $2::pg_catalog.text$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="textcat" id="5661dca3-d64c-4e59-bfb5-ccb53c21f464" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textcat(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textcat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="texteq" id="9c27e0fe-1730-48e8-a2fe-103c64623d36" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texteq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$texteq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="texteqname" id="0eaf7df3-5e7c-4e0a-8b17-7964b0920d36" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texteqname(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$texteqname$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="textgename" id="12e2f5b1-be94-4f8b-9941-d3de2320206b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textgename(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textgename$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="textgtname" id="d0db5beb-fb50-4b97-bcb6-5544854e1d99" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textgtname(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textgtname$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="texticlike" id="cd48f0de-3198-4674-92c3-1a86134bbe4d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticlike_support
AS $function$texticlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~* operator]]></comment>
		</function>
		<function name="texticlike_support" id="e996cb9d-cfaf-4225-b200-7fde4a1f3e64" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticlike_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticlike_support$function$
;]]></string>
			<comment><![CDATA[planner support for texticlike]]></comment>
		</function>
		<function name="texticnlike" id="67831ff8-73da-4918-b3d9-86ab35264bb3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticnlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~* operator]]></comment>
		</function>
		<function name="texticregexeq" id="f6f3b401-75c9-453d-a9d5-3f89ad33a08c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexeq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT texticregexeq_support
AS $function$texticregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~* operator]]></comment>
		</function>
		<function name="texticregexeq_support" id="9c7432ea-e063-484a-996c-f761a4903044" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexeq_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexeq_support$function$
;]]></string>
			<comment><![CDATA[planner support for texticregexeq]]></comment>
		</function>
		<function name="texticregexne" id="7553ffb1-5b2e-4343-bfac-df40516f6c06" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~* operator]]></comment>
		</function>
		<function name="textin" id="2ed55e57-8acf-48b5-b13d-c2800b6197ad" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textin(cstring)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="textlen" id="e703806f-75f0-4a6f-8a55-742a67618b5e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlen(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
		</function>
		<function name="textlename" id="c713bdd7-bd16-4b50-b31d-83a59d987076" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlename(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textlename$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="textlike" id="e8513c60-3215-4bcd-a6e7-3ef45b22fa74" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textlike_support
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
		</function>
		<function name="textlike_support" id="6f5f6034-b7b6-41d0-9984-42303382a7fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlike_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlike_support$function$
;]]></string>
			<comment><![CDATA[planner support for textlike]]></comment>
		</function>
		<function name="textltname" id="a02ba5c6-67bd-45a2-a732-564e97c1fa52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textltname(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textltname$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="textne" id="d4136af7-4eff-4588-96e8-97ee8e45455a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="textnename" id="97d93b7a-26cc-484a-bf8b-d6c050b93e52" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textnename(text, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textnename$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="textnlike" id="7bf14c67-bf3f-4b42-b545-80efb126a245" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textnlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
		</function>
		<function name="textout" id="04682bc3-4a51-4924-bdb0-ecc6d9ce0a5f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textout(text)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="textrecv" id="553b21e2-1873-4255-bbdf-54a0066b3a59" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textrecv(internal)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$textrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="textregexeq" id="a9ffe95a-13cc-4884-a5cb-0b21698c9c2e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexeq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT textregexeq_support
AS $function$textregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
		</function>
		<function name="textregexeq_support" id="2019a002-16ce-4ce1-ac46-79bdd6d382b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexeq_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexeq_support$function$
;]]></string>
			<comment><![CDATA[planner support for textregexeq]]></comment>
		</function>
		<function name="textregexne" id="832c39a2-8483-496d-975b-666baf64856a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~ operator]]></comment>
		</function>
		<function name="textsend" id="43d9d983-fb81-44c9-87a1-42cac8b3fa73" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textsend(text)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$textsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="thesaurus_init" id="7fb56b55-685f-4dda-832d-f0db9f7737fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.thesaurus_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$thesaurus_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="thesaurus_lexize" id="4170e3f8-1bb5-4180-83ac-cbaae23a95aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.thesaurus_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$thesaurus_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
		</function>
		<function name="tideq" id="3338d2ab-5acd-4a4e-8cd9-3141b8c79b92" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tideq(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="tidge" id="1fececa6-0660-4893-b9b4-165fbf2f6fbc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidge(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="tidgt" id="b173aad0-e4e9-42f4-9307-39a102771512" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidgt(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="tidin" id="98d2ad40-eae0-4c57-8c00-55c35c9c10da" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidin(cstring)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tidlarger" id="1dd641f0-f80b-4e9b-831b-b11b19370132" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidlarger(tid, tid)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidlarger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="tidle" id="db6e8617-bcd8-454d-8eaa-8379f178409d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidle(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="tidlt" id="ecfbb884-e8bc-4bb0-802b-53faca17193b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidlt(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="tidne" id="0d410ea0-fa04-45b9-a071-b66e17064236" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidne(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="tidout" id="f020bb0b-7504-487c-86ba-5b266ead9496" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidout(tid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tidrecv" id="f2c4b517-b520-43e8-af56-80a3355fb90f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidrecv(internal)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tidsend" id="4d88a63c-2768-48cc-9122-5d0075c216df" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidsend(tid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tidsmaller" id="fbac4b4b-e003-4a8b-9c00-e3126376908e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidsmaller(tid, tid)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidsmaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="time" id="f2969e47-09de-441f-85ca-b3e2b234f6d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_time$function$
;]]></string>
			<comment><![CDATA[convert timestamp to time]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="time" id="49041201-3c5d-48b4-8356-7643c188bac2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_time$function$
;]]></string>
			<comment><![CDATA[convert timestamp to time]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="time" id="9e5f1f6e-991d-4002-8b9b-58df58799f57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_time$function$
;]]></string>
			<comment><![CDATA[convert timestamp to time]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="time" id="23de323f-a29d-4102-a606-202153272939" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_time$function$
;]]></string>
			<comment><![CDATA[convert timestamp to time]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="time" id="fc52a25a-3b55-4563-acc8-9dacbe6bb813" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_time$function$
;]]></string>
			<comment><![CDATA[convert timestamp to time]]></comment>
		</function>
		<function name="time_cmp" id="d881dd23-227d-4994-b7df-3205d09cbfd7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_cmp(time without time zone, time without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="time_eq" id="514d6a9e-b39f-49f3-9b3c-69e197035170" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_eq(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="time_ge" id="a9d84284-0b68-4593-843a-63ebb24ca27c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_ge(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="time_gt" id="35055abb-e7e2-4ed6-810f-08cd37e3fbfc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_gt(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="time_hash" id="8a2531fe-a54e-4df1-b887-659f7e22aed0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_hash(time without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="time_hash_extended" id="236c141b-04b5-461d-a9fb-63fcf6c26078" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_hash_extended(time without time zone, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_hash_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="time_in" id="a46dd409-3198-4ff8-b8ca-3adef1ec16fd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_in(cstring, oid, integer)
 RETURNS time without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$time_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="time_larger" id="a9a4e297-1d8b-47be-87aa-37998d90452f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_larger(time without time zone, time without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="time_le" id="6f779c70-a69c-481d-8fc5-00eb3c75dcac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_le(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="time_lt" id="c757e53c-8497-43db-8712-6fe1ed89eacb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_lt(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="time_mi_interval" id="169b843f-3b3a-4bcc-9275-6678b0b351dc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_mi_interval(time without time zone, interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="time_mi_time" id="ed374b9f-0cd5-4a9a-b0c4-639c02ed94fb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_mi_time(time without time zone, time without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_mi_time$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="time_ne" id="7c184375-d7bc-484c-a1d4-25f79512b6e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_ne(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="time_out" id="769956f8-3831-440b-a64d-d33d519793e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_out(time without time zone)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="time_pl_interval" id="470b5796-8ad0-4a14-92a5-047305161c41" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_pl_interval(time without time zone, interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="time_recv" id="97da8e5e-aa97-4e85-923e-6357e348a129" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_recv(internal, oid, integer)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="time_send" id="96cad1d4-85ac-43ce-8022-588690394cf7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_send(time without time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="time_smaller" id="866d2817-7ba4-4588-b828-72d27e9c6dca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_smaller(time without time zone, time without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="time_support" id="d5660843-1da8-4d46-acda-cc5c3d446fec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_support$function$
;]]></string>
			<comment><![CDATA[planner support for time length coercion]]></comment>
		</function>
		<function name="timedate_pl" id="d1a1d825-d2c0-4b67-8e47-a9881ef7d2f1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timedate_pl(time without time zone, date)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="timeofday" id="56f05184-9674-4d50-be69-17e93d55f75b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timeofday()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$timeofday$function$
;]]></string>
			<comment><![CDATA[current date and time - increments during transactions]]></comment>
		</function>
		<function name="timestamp" id="e276bcb7-232a-4c07-9496-b4ee0cf7b98a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp without time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT timestamp_support
AS $function$timestamp_scale$function$
;]]></string>
			<comment><![CDATA[adjust timestamp precision]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamp" id="d5edfa18-1846-4707-b967-6fc8acc4646a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp without time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT timestamp_support
AS $function$timestamp_scale$function$
;]]></string>
			<comment><![CDATA[adjust timestamp precision]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamp" id="ca18d458-5bc6-4bdc-85db-888b6a01e9b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp without time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT timestamp_support
AS $function$timestamp_scale$function$
;]]></string>
			<comment><![CDATA[adjust timestamp precision]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="timestamp" id="05749974-e86f-4d50-91bd-1d326cd8892c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp without time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT timestamp_support
AS $function$timestamp_scale$function$
;]]></string>
			<comment><![CDATA[adjust timestamp precision]]></comment>
		</function>
		<function name="timestamp_cmp" id="57485e37-23c0-4bb9-95bd-ba0927890644" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp(timestamp without time zone, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="timestamp_cmp_date" id="e06accb6-bfb0-47dc-8dda-d5fd5a4527ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp_date(timestamp without time zone, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp_date$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="timestamp_cmp_timestamptz" id="2a219c5e-94d3-4c9b-b98a-ead052a4378a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp_timestamptz$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="timestamp_eq" id="2d852f43-94c7-4bf0-9498-633aa7e2d142" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="timestamp_eq_date" id="accb4b43-0562-44ab-85dd-b246329f4a25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_eq_date$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="timestamp_eq_timestamptz" id="e17a80f8-3b9b-45ff-82bd-b1f82129b2e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_eq_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="timestamp_ge" id="29770cf1-f5b5-44c0-80b4-907c55c54903" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="timestamp_ge_date" id="72a3ed98-5c29-4c31-8565-cd678b8ee99d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_ge_date$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="timestamp_ge_timestamptz" id="af294936-39d4-41b7-8a20-68a6e0688ed2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_ge_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="timestamp_gt" id="6ae5002a-d468-4b18-af5d-a47268b922f6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="timestamp_gt_date" id="0a51186d-5123-487c-90db-f1e4c516795d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_gt_date$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="timestamp_gt_timestamptz" id="0dc258de-2522-475c-a1da-436f0ab158ff" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_gt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="timestamp_hash" id="2a95de2b-6d2a-4ef5-bdc4-1e5cce5e076a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_hash(timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="timestamp_hash_extended" id="40a20b3c-af77-48e9-8435-12781a3123b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_hash_extended(timestamp without time zone, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_hash_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="timestamp_in" id="098c5181-3139-48b6-8fac-d438809bc0fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_in(cstring, oid, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamp_larger" id="e239962d-5b34-4c0c-8cd5-5d475b7973ef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_larger(timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="timestamp_le" id="81d9a2c1-3c17-4d23-8bd2-d1a452b980ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="timestamp_le_date" id="52db7dfa-882b-4c90-acae-f2a827f55a81" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_le_date$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="timestamp_le_timestamptz" id="0f6a180a-b8f8-4bb1-926b-04381b53d3ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_le_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="timestamp_lt" id="d2189d18-3077-4990-bd59-b81072af756a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="timestamp_lt_date" id="d5327524-ef3f-48e8-ba7d-5e8bca79215e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_lt_date$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="timestamp_lt_timestamptz" id="237ee2b8-3621-4150-88a2-3d4967f4a5d0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_lt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="timestamp_mi" id="8481c1dd-be3a-4edb-ba2c-801adb3068ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_mi(timestamp without time zone, timestamp without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="timestamp_mi_interval" id="609afaaf-fa79-4a72-b4c9-bf59826406ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_mi_interval(timestamp without time zone, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="timestamp_ne" id="1a7a0afc-6e98-4091-bfe2-cd760c3edacb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="timestamp_ne_date" id="1c5b6ec0-47d7-4a88-b7d5-0c5a036c142a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_ne_date$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="timestamp_ne_timestamptz" id="0532a10a-da33-490a-83c2-7fccca9cb144" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_ne_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="timestamp_out" id="78d9c534-4f68-42f5-994a-1e20ece0b7a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_out(timestamp without time zone)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamp_pl_interval" id="cd4ab717-6425-419b-b179-766e6fe058fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_pl_interval(timestamp without time zone, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="timestamp_recv" id="09e8a1a3-8bdc-46d0-a9a3-cd37211f8a0b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_recv(internal, oid, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamp_send" id="0fd5e347-177a-4d62-b2ef-7f1f29174419" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_send(timestamp without time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamp_smaller" id="fc6e8ae6-ab2d-433e-a6b7-d20136d5e281" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_smaller(timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="timestamp_sortsupport" id="4fda863d-749b-4e7f-b49a-a3a20106be32" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="timestamp_support" id="3ddb3db6-b564-4842-bbcb-7befceb3d5a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_support$function$
;]]></string>
			<comment><![CDATA[planner support for timestamp length coercion]]></comment>
		</function>
		<function name="timestamptypmodin" id="9ab49cb4-e10f-4903-910e-0b2dac905983" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timestamptypmodout" id="e8d764f2-19cb-4541-b55f-fbcdbeba42e9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timestamptz" id="d9301791-b20a-4a88-be1b-597d11293cb4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert date to timestamp with time zone]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz" id="fd079756-398f-42ea-ba1c-d4ea1f2b120b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert date to timestamp with time zone]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz" id="b967ed01-5c12-4118-86e5-7471a6dac761" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert date to timestamp with time zone]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz" id="0e0f802a-9089-41d7-9e19-04d59cf61d68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert date to timestamp with time zone]]></comment>
			<input_param jt="-1" type="date" inOut="1" />
		</function>
		<function name="timestamptz" id="1178848c-bb35-4ecf-a6bd-70344cbe6bb7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert date to timestamp with time zone]]></comment>
		</function>
		<function name="timestamptz_cmp" id="1d372883-6fe7-44d2-9ac5-2a55f0bb395f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp(timestamp with time zone, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="timestamptz_cmp_date" id="8d5d5bf9-27fc-4d3b-97c1-ab4b1de96c35" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp_date(timestamp with time zone, date)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_cmp_date$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="timestamptz_cmp_timestamp" id="5f35bb81-f38f-4aed-b835-efb667d18fd8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_cmp_timestamp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="timestamptz_eq" id="75ebf813-64f1-46f3-97f9-7ca1c987c5d6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="timestamptz_eq_date" id="cafa0f51-6097-49d9-bba0-54642e1c58fc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_eq_date$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="timestamptz_eq_timestamp" id="aa6dc682-9cd2-40c9-b4c4-56255b7f0082" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_eq_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="timestamptz_ge" id="ac8799c2-81c6-47c0-9309-196baf6b1b4b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="timestamptz_ge_date" id="984a3672-cb29-4a09-9804-e673fa8a8701" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ge_date$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="timestamptz_ge_timestamp" id="65d98789-b282-4c6e-96fc-7b4b452a9db1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ge_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="timestamptz_gt" id="8a9b7188-b542-4660-b0bc-1fe17d635d8e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="timestamptz_gt_date" id="60ba32b6-e786-4a09-9e3b-c4937bda7be9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_gt_date$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="timestamptz_gt_timestamp" id="7b7933d1-a608-4eb0-a932-10d862c4a553" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_gt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="timestamptz_in" id="2823aab0-c68d-435d-972c-5ec2ee9270c0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_in(cstring, oid, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamptz_larger" id="0e26271f-9fa7-46b4-b81c-cddda63f07ac" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_larger(timestamp with time zone, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="timestamptz_le" id="89ef2161-2645-4250-a66c-9942d970b9a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="timestamptz_le_date" id="7cec4881-0415-4cee-ac49-352c03319eb5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_le_date$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="timestamptz_le_timestamp" id="bffe9fd5-aa01-4bd0-bd4d-5b280cbb9c9a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_le_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="timestamptz_lt" id="bce509f0-606f-4a23-9cb9-2ffa3e92d9cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="timestamptz_lt_date" id="cf8603ad-8f92-43ea-b75c-10c3b17cd6b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_lt_date$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="timestamptz_lt_timestamp" id="bcdf4cdc-e27c-4cc6-9bd8-d0d7ad2970f8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_lt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="timestamptz_mi" id="09f6d896-c336-461f-a7c1-31f2d34e1836" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_mi(timestamp with time zone, timestamp with time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="timestamptz_mi_interval" id="80bcdae5-8841-42df-ae23-da1369764749" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_mi_interval(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="timestamptz_ne" id="f55aa59b-df54-4c7f-b0f1-f010078147de" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="timestamptz_ne_date" id="b6db3ddd-d8e2-4b84-9e9d-843350003f37" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ne_date$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="timestamptz_ne_timestamp" id="63459bcf-4abf-4111-8ead-89f2e098e3b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ne_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="timestamptz_out" id="369e02d8-ef92-439b-8595-75ddc9b3d5dd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_out(timestamp with time zone)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamptz_pl_interval" id="1781439d-356b-4c35-aa1a-03d3a67f3447" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_pl_interval(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="timestamptz_recv" id="07c17043-223d-428a-ac66-3f01535678f0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_recv(internal, oid, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamptz_send" id="0fc1ee7e-a386-4646-971d-5d5bcf3dfd2f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_send(timestamp with time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timestamptz_smaller" id="daf71865-806a-46b6-9bd0-cd1480a8c51a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_smaller(timestamp with time zone, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="timestamptztypmodin" id="7be219a1-c525-4ca6-ae63-262d126e07e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptztypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptztypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timestamptztypmodout" id="dbd302c7-bcc7-449b-9574-1f718da1b65d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptztypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptztypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timetypmodin" id="79be2b48-bd00-4a2d-8444-bdeafb813ab9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timetypmodout" id="ee5733a1-85a0-4d55-a7b1-794b71e61f22" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timetz" id="c97d7e65-2ebb-4fec-96e8-861f12766146" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(timestamp with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_timetz$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to time with time zone]]></comment>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timetz" id="b99618db-4d38-4099-a281-ec80fb9d6a30" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(timestamp with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_timetz$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to time with time zone]]></comment>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timetz" id="4bd81521-7254-4a9f-8b6d-0d8b5111c7c4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(timestamp with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_timetz$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to time with time zone]]></comment>
		</function>
		<function name="timetz_cmp" id="7944b046-cd80-44b8-83d4-836f235046e9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_cmp(time with time zone, time with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="timetz_eq" id="7f1e12f4-c6cd-4afb-8f5e-1be5c2a1c645" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_eq(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="timetz_ge" id="430f9dfd-a4bf-4420-951f-29d26ea3fad1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_ge(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="timetz_gt" id="4974d593-7e6b-4fbc-99e6-e209dc8de53d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_gt(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="timetz_hash" id="2716a0aa-60da-4fe5-a355-134636d65fc0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_hash(time with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="timetz_hash_extended" id="94fbf1a1-83f9-4a16-bb60-401dd865b3e6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_hash_extended(time with time zone, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_hash_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="timetz_in" id="b23db5e2-0f8f-4c76-ae2d-214afa6c0da5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_in(cstring, oid, integer)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timetz_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timetz_larger" id="a196f9a2-200a-4101-83bc-282d99b2eab6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_larger(time with time zone, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="timetz_le" id="aa23e0be-b003-4f9c-ae47-7d571b04b781" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_le(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="timetz_lt" id="b189c20f-e9ad-4360-9db7-c1e8da9ec206" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_lt(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="timetz_mi_interval" id="d5d1a20a-5343-417e-be76-6f81f948d1c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_mi_interval(time with time zone, interval)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
		</function>
		<function name="timetz_ne" id="3495834d-b0e0-4657-8104-3042e214852e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_ne(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="timetz_out" id="c9a04958-bb2a-47cc-9b8f-3d1f0388c902" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_out(time with time zone)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timetz_pl_interval" id="f259ef8b-d05f-43ab-988c-4606ce0f32a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_pl_interval(time with time zone, interval)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="timetz_recv" id="52af231f-69d8-48aa-ac01-f6228078025a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_recv(internal, oid, integer)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timetz_send" id="5f3274ab-1d87-4dc3-8a7f-a32e4cc7dad8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_send(time with time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="timetz_smaller" id="bf4aa8e6-019d-4954-8584-9852dd84195e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_smaller(time with time zone, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="timetzdate_pl" id="5072f483-4aa1-4016-afd2-5c960601b3c7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetzdate_pl(time with time zone, date)
 RETURNS timestamp with time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
RETURN ($2 + $1)
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
		</function>
		<function name="timetztypmodin" id="c880e7ea-a4c6-43de-9227-1888107c6049" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetztypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetztypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timetztypmodout" id="1ce8c58a-6552-4645-836b-c1f7328acd5c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetztypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetztypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="timezone" id="b62de4e8-4d2d-4d29-946d-892b1759b319" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="ade1ca86-22e9-49d9-9865-af0c164332fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="7c86b993-7838-48f8-92f8-916a48a72ac3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="7625cb89-e28e-4f38-beba-efc5cf942198" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="d41e37db-92dd-49b2-ba1c-5ad78cfa1781" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="f4af75e1-7aa5-42cf-ae7b-7525a1609af9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="80a10a71-d07f-497c-a3cd-5bfc81901b2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="7758c7c1-a62a-4b53-a311-d1811f919d57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="timezone" id="450bf8c2-e4d6-4878-947b-ea028619ec62" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
		</function>
		<function name="to_ascii" id="12863b65-0c98-4dc0-8380-8ba2b0ef286f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_default$function$
;]]></string>
			<comment><![CDATA[encode text from DB encoding to ASCII text]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_ascii" id="4c077f84-a78b-4195-95e6-331b1c4e5261" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_default$function$
;]]></string>
			<comment><![CDATA[encode text from DB encoding to ASCII text]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_ascii" id="cdaaea13-d77f-4d68-9ab4-17a754182b4e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_default$function$
;]]></string>
			<comment><![CDATA[encode text from DB encoding to ASCII text]]></comment>
		</function>
		<function name="to_bin" id="832168e2-4c4c-4dda-8cc7-ea34b67b03da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_bin(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_bin32$function$
;]]></string>
			<comment><![CDATA[convert int4 number to binary]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="to_bin" id="10dd1c80-b64c-459d-b536-24912536d28f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_bin(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_bin32$function$
;]]></string>
			<comment><![CDATA[convert int4 number to binary]]></comment>
		</function>
		<function name="to_char" id="23695aa9-2442-41ca-bd36-5a089ec3c3e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="b5eadd15-f47c-4d0d-a336-d143da157586" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="a3957abc-2471-4982-95aa-4703b4768ef5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="e408d5b4-d80b-41a9-b181-840f137c0291" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="b7df8782-5feb-451d-940f-c71fe1828632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="5068f821-6d5b-4265-a4aa-09a40b8b8a6c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="aa212746-1d45-415a-b588-d34b93ebe9a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param jt="-1" type="interval" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_char" id="f28c64a2-95b9-41a7-bebb-6da3ce163bb0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
		</function>
		<function name="to_date" id="bdce4239-3c35-4603-871e-147064a01b98" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_date(text, text)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_date$function$
;]]></string>
			<comment><![CDATA[convert text to date]]></comment>
		</function>
		<function name="to_hex" id="6d7a43c6-23b5-42e2-83f6-abb8ca2e16d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_hex(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_hex32$function$
;]]></string>
			<comment><![CDATA[convert int4 number to hex]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="to_hex" id="b864a19d-e40b-4c3f-8517-7e48416a6540" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_hex(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_hex32$function$
;]]></string>
			<comment><![CDATA[convert int4 number to hex]]></comment>
		</function>
		<function name="to_json" id="e332e1a9-f0df-4aaa-beee-8cf8b6537282" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_json(anyelement)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_json$function$
;]]></string>
			<comment><![CDATA[map input to json]]></comment>
		</function>
		<function name="to_jsonb" id="02797624-b28f-4b02-9df5-f2904e4411b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_jsonb(anyelement)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_jsonb$function$
;]]></string>
			<comment><![CDATA[map input to jsonb]]></comment>
		</function>
		<function name="to_number" id="5f25205b-9ebb-4d65-a797-01a9b20e9204" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_number(text, text)
 RETURNS numeric
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$numeric_to_number$function$
;]]></string>
			<comment><![CDATA[convert text to numeric]]></comment>
		</function>
		<function name="to_oct" id="9ed52f5b-185c-4e6e-9fa8-dab41c7aae03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_oct(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_oct32$function$
;]]></string>
			<comment><![CDATA[convert int4 number to oct]]></comment>
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="to_oct" id="f4767231-2f10-4fce-9423-f58cbbfc4265" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_oct(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_oct32$function$
;]]></string>
			<comment><![CDATA[convert int4 number to oct]]></comment>
		</function>
		<function name="to_regclass" id="90e2bdeb-abd2-4cd9-a25e-ec365300678c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regclass(text)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regclass$function$
;]]></string>
			<comment><![CDATA[convert classname to regclass]]></comment>
		</function>
		<function name="to_regcollation" id="d213a455-8ac4-43e6-bf7a-ca185ff3f087" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regcollation(text)
 RETURNS regcollation
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regcollation$function$
;]]></string>
			<comment><![CDATA[convert classname to regcollation]]></comment>
		</function>
		<function name="to_regnamespace" id="a99a4afd-409a-42c8-84eb-1d5f4a121b7d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regnamespace(text)
 RETURNS regnamespace
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regnamespace$function$
;]]></string>
			<comment><![CDATA[convert namespace name to regnamespace]]></comment>
		</function>
		<function name="to_regoper" id="b08271ce-9fbd-4614-a909-84004cdd10dc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regoper(text)
 RETURNS regoper
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regoper$function$
;]]></string>
			<comment><![CDATA[convert operator name to regoper]]></comment>
		</function>
		<function name="to_regoperator" id="cde67cc0-6f52-4e27-ad8c-be2826d73e07" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regoperator(text)
 RETURNS regoperator
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regoperator$function$
;]]></string>
			<comment><![CDATA[convert operator name to regoperator]]></comment>
		</function>
		<function name="to_regproc" id="5d4914e8-4e4a-4177-90b9-05af8ef7a34a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regproc(text)
 RETURNS regproc
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regproc$function$
;]]></string>
			<comment><![CDATA[convert proname to regproc]]></comment>
		</function>
		<function name="to_regprocedure" id="e4459a70-233d-4990-913b-abe7cc1d630c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regprocedure(text)
 RETURNS regprocedure
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regprocedure$function$
;]]></string>
			<comment><![CDATA[convert proname to regprocedure]]></comment>
		</function>
		<function name="to_regrole" id="06d478aa-dc21-4185-9356-f9a5ee52b606" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regrole(text)
 RETURNS regrole
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regrole$function$
;]]></string>
			<comment><![CDATA[convert role name to regrole]]></comment>
		</function>
		<function name="to_regtype" id="05ea4fc5-be43-4f55-9b61-5dde25ab58a2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regtype(text)
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regtype$function$
;]]></string>
			<comment><![CDATA[convert type name to regtype]]></comment>
		</function>
		<function name="to_regtypemod" id="6232c78f-c53d-426d-8ff8-fdaeafc5e275" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regtypemod(text)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regtypemod$function$
;]]></string>
			<comment><![CDATA[convert type name to type modifier]]></comment>
		</function>
		<function name="to_timestamp" id="bd4f7d69-8a21-469c-ace3-83c28ad3f7c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_timestamp(double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert UNIX epoch to timestamptz]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="to_timestamp" id="8d2b44ec-6628-4e72-993c-b0f7278caf37" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_timestamp(double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert UNIX epoch to timestamptz]]></comment>
		</function>
		<function name="to_tsquery" id="5e3cec6d-9653-4240-b9f8-f75089172d6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[make tsquery]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsquery" id="e24596ca-7eff-4367-8a0c-ff21f2fb7690" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[make tsquery]]></comment>
		</function>
		<function name="to_tsvector" id="8ad5bfd1-2a31-45ec-a88b-badb7d6134f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="c9530f56-501f-4f8d-96e2-9c7abd6ca3f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="42e5d552-9177-492f-9c9a-0e799e293533" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="9b22c72e-7cfd-46ee-929e-e3e5160de0bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="657f5d77-5584-4589-98f0-2728b66fd106" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="to_tsvector" id="ab4590f8-8507-4dca-8d9f-bc9533f3592b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
		</function>
		<function name="transaction_timestamp" id="05c6f6d5-3131-4cdb-a919-d79c5a5230f0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.transaction_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$now$function$
;]]></string>
			<comment><![CDATA[current transaction time]]></comment>
		</function>
		<function name="translate" id="4d8c7b96-783a-49d9-a813-cbe77521d4b0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.translate(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$translate$function$
;]]></string>
			<comment><![CDATA[map a set of characters appearing in string]]></comment>
		</function>
		<function name="trigger_in" id="1e1b1801-f454-49ff-9fbf-94b4027ff5a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trigger_in(cstring)
 RETURNS trigger
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$trigger_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="trigger_out" id="f9b24cac-942c-433c-8573-d7769e05adb6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trigger_out(trigger)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$trigger_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="trim_array" id="6a24f684-95de-42e5-afda-7c105ea75b4e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trim_array(anyarray, integer)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$trim_array$function$
;]]></string>
			<comment><![CDATA[remove last N elements of array]]></comment>
		</function>
		<function name="trim_scale" id="c51d597a-d0f7-4758-8311-ac9410ba39a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trim_scale(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_trim_scale$function$
;]]></string>
			<comment><![CDATA[numeric with minimum scale needed to represent the value]]></comment>
		</function>
		<function name="trunc" id="ec786f55-a864-4a02-98f9-a219868d0d7a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="trunc" id="6cc7eb31-20e3-49e5-b597-c864e2e5e60e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="trunc" id="899aa431-99f1-4cef-8147-67f257c40080" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="trunc" id="5bea7f82-eaa5-4753-97bd-ab50e384e2f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
			<input_param jt="-1" type="double precision" inOut="1" />
		</function>
		<function name="trunc" id="e6850ebf-c338-45cc-982b-e61a51ea2a22" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
		</function>
		<function name="ts_debug" id="2e77738d-0f5e-4d7b-a215-a186d13cbf1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_debug(config regconfig, document text, OUT alias text, OUT description text, OUT token text, OUT dictionaries regdictionary[], OUT dictionary regdictionary, OUT lexemes text[])
 RETURNS SETOF record
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
BEGIN ATOMIC
 SELECT tt.alias,
     tt.description,
     parse.token,
     ARRAY( SELECT (m.mapdict)::regdictionary AS mapdict
            FROM pg_ts_config_map m
           WHERE ((m.mapcfg = (ts_debug.config)::oid) AND (m.maptokentype = parse.tokid))
           ORDER BY m.mapseqno) AS dictionaries,
     ( SELECT (m.mapdict)::regdictionary AS mapdict
            FROM pg_ts_config_map m
           WHERE ((m.mapcfg = (ts_debug.config)::oid) AND (m.maptokentype = parse.tokid))
           ORDER BY (ts_lexize((m.mapdict)::regdictionary, parse.token) IS NULL), m.mapseqno
          LIMIT 1) AS dictionary,
     ( SELECT ts_lexize((m.mapdict)::regdictionary, parse.token) AS ts_lexize
            FROM pg_ts_config_map m
           WHERE ((m.mapcfg = (ts_debug.config)::oid) AND (m.maptokentype = parse.tokid))
           ORDER BY (ts_lexize((m.mapdict)::regdictionary, parse.token) IS NULL), m.mapseqno
          LIMIT 1) AS lexemes
    FROM ts_parse(( SELECT pg_ts_config.cfgparser
            FROM pg_ts_config
           WHERE (pg_ts_config.oid = (ts_debug.config)::oid)), ts_debug.document) parse(tokid, token),
     ts_token_type(( SELECT pg_ts_config.cfgparser
            FROM pg_ts_config
           WHERE (pg_ts_config.oid = (ts_debug.config)::oid))) tt(tokid, alias, description)
   WHERE (tt.tokid = parse.tokid);
END
;]]></string>
			<comment><![CDATA[debug function for text search configuration]]></comment>
			<input_param name="config" jt="-1" type="regconfig" inOut="1" />
			<input_param name="document" jt="-1" type="text" inOut="1" />
			<input_param name="alias" jt="-1" type="text" inOut="3" />
			<input_param name="description" jt="-1" type="text" inOut="3" />
			<input_param name="token" jt="-1" type="text" inOut="3" />
			<input_param name="dictionaries" jt="-1" type="ARRAY" inOut="3" />
			<input_param name="dictionary" jt="-1" type="regdictionary" inOut="3" />
			<input_param name="lexemes" jt="-1" type="ARRAY" inOut="3" />
		</function>
		<function name="ts_debug" id="e4f24a40-3aee-493b-aa31-509b881330ea" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_debug(config regconfig, document text, OUT alias text, OUT description text, OUT token text, OUT dictionaries regdictionary[], OUT dictionary regdictionary, OUT lexemes text[])
 RETURNS SETOF record
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
BEGIN ATOMIC
 SELECT tt.alias,
     tt.description,
     parse.token,
     ARRAY( SELECT (m.mapdict)::regdictionary AS mapdict
            FROM pg_ts_config_map m
           WHERE ((m.mapcfg = (ts_debug.config)::oid) AND (m.maptokentype = parse.tokid))
           ORDER BY m.mapseqno) AS dictionaries,
     ( SELECT (m.mapdict)::regdictionary AS mapdict
            FROM pg_ts_config_map m
           WHERE ((m.mapcfg = (ts_debug.config)::oid) AND (m.maptokentype = parse.tokid))
           ORDER BY (ts_lexize((m.mapdict)::regdictionary, parse.token) IS NULL), m.mapseqno
          LIMIT 1) AS dictionary,
     ( SELECT ts_lexize((m.mapdict)::regdictionary, parse.token) AS ts_lexize
            FROM pg_ts_config_map m
           WHERE ((m.mapcfg = (ts_debug.config)::oid) AND (m.maptokentype = parse.tokid))
           ORDER BY (ts_lexize((m.mapdict)::regdictionary, parse.token) IS NULL), m.mapseqno
          LIMIT 1) AS lexemes
    FROM ts_parse(( SELECT pg_ts_config.cfgparser
            FROM pg_ts_config
           WHERE (pg_ts_config.oid = (ts_debug.config)::oid)), ts_debug.document) parse(tokid, token),
     ts_token_type(( SELECT pg_ts_config.cfgparser
            FROM pg_ts_config
           WHERE (pg_ts_config.oid = (ts_debug.config)::oid))) tt(tokid, alias, description)
   WHERE (tt.tokid = parse.tokid);
END
;]]></string>
			<comment><![CDATA[debug function for text search configuration]]></comment>
		</function>
		<function name="ts_delete" id="d497258b-b266-4215-a9a0-3a86c963bc35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_delete(tsvector, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_delete_str$function$
;]]></string>
			<comment><![CDATA[delete lexeme]]></comment>
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_delete" id="098e51fc-85cc-429c-aa64-fc3f3671323a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_delete(tsvector, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_delete_str$function$
;]]></string>
			<comment><![CDATA[delete lexeme]]></comment>
		</function>
		<function name="ts_filter" id="6ab04a5e-c4f9-478f-a002-8d661451c430" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_filter(tsvector, "char"[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_filter$function$
;]]></string>
			<comment><![CDATA[delete lexemes that do not have one of the given weights]]></comment>
		</function>
		<function name="ts_headline" id="03a5f82f-1060-4924-ad22-df8329df4d11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="66ea92ae-3c57-4ad9-806d-a7c3fcd6d6e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="dfc54bf5-fd6f-41b1-8cd9-07caa905428d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="0ac655a9-a23d-414c-9a79-3d3ed6ae5281" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="bc5747ff-7de3-4f53-8c42-9523a17b264f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="db20abbd-1c9e-4672-a9c2-1078998adc61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="67ad445a-c9ac-4df6-98b5-5e0258263422" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="3a62999c-82de-4f57-aa48-80cbdb72c94a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="395cdcbb-de79-49ec-b070-5a9adbc6150a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="c803e931-6f77-4bcf-8b96-0a4886bda9b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="932e3d07-0476-4561-bd69-222cdfd123e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="ts_headline" id="8db3e570-d537-42fc-b5c1-55ee34a463de" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
		</function>
		<function name="ts_lexize" id="f5662847-196c-4d8d-9017-ec2572e1193e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_lexize(regdictionary, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_lexize$function$
;]]></string>
			<comment><![CDATA[normalize one word by dictionary]]></comment>
		</function>
		<function name="ts_match_qv" id="2b998c66-c200-4906-ac55-35e8fbff7ca8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_qv(tsquery, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_match_qv$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="ts_match_tq" id="50fec525-29d5-4a40-b74c-24b2841843d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_tq(text, tsquery)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_match_tq$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="ts_match_tt" id="5f8d3231-189d-4dc7-b110-56798f95057e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_tt(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_match_tt$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="ts_match_vq" id="0789adc2-1261-4d48-b0e7-a1d9e36579b8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_vq(tsvector, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_match_vq$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
		</function>
		<function name="ts_parse" id="6a1d598b-e85f-4827-a5c3-4009fb3bc56d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_parse(parser_oid oid, txt text, OUT tokid integer, OUT token text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_parse_byid$function$
;]]></string>
			<comment><![CDATA[parse text to tokens]]></comment>
			<input_param name="parser_oid" jt="-1" type="oid" inOut="1" />
			<input_param name="txt" jt="-1" type="text" inOut="1" />
			<input_param name="tokid" jt="-1" type="integer" inOut="3" />
			<input_param name="token" jt="-1" type="text" inOut="3" />
		</function>
		<function name="ts_parse" id="4198fda9-ff88-4e55-b677-9f8ef8a38f06" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_parse(parser_oid oid, txt text, OUT tokid integer, OUT token text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_parse_byid$function$
;]]></string>
			<comment><![CDATA[parse text to tokens]]></comment>
		</function>
		<function name="ts_rank" id="c2862841-9420-4ff9-b2df-488e6cf05ef1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank" id="b2161c44-1b74-4b6b-a44e-e525dca73a4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank" id="f2eab4f3-e4e3-4eae-99ca-8ef4e40e7272" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank" id="0df2ad5c-365e-4187-80ec-735954c2f0f7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
		</function>
		<function name="ts_rank_cd" id="3d4050a9-7dd4-45e5-83b8-45e06643f5a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank_cd" id="a9c11c64-da1c-47f3-896e-0871f0f8f22b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank_cd" id="a0198181-234a-4371-b432-1960b8213f29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param jt="-1" type="ARRAY" inOut="1" />
			<input_param jt="-1" type="tsvector" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="ts_rank_cd" id="abe0c1ca-693a-4279-aa28-c63343b61934" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
		</function>
		<function name="ts_rewrite" id="f27d5c21-a1d0-47a3-84ad-4bc073e95474" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rewrite(tsquery, tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_rewrite$function$
;]]></string>
			<comment><![CDATA[rewrite tsquery]]></comment>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="ts_rewrite" id="07e25a32-ccb5-4d57-a7d0-9e364101be5d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rewrite(tsquery, tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_rewrite$function$
;]]></string>
			<comment><![CDATA[rewrite tsquery]]></comment>
		</function>
		<function name="ts_stat" id="97a26c58-9c31-4719-89b1-66fa1577a675" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_stat(query text, OUT word text, OUT ndoc integer, OUT nentry integer)
 RETURNS SETOF record
 LANGUAGE internal
 STRICT COST 10 ROWS 10000
AS $function$ts_stat1$function$
;]]></string>
			<comment><![CDATA[statistics of tsvector column]]></comment>
			<input_param name="query" jt="-1" type="text" inOut="1" />
			<input_param name="word" jt="-1" type="text" inOut="3" />
			<input_param name="ndoc" jt="-1" type="integer" inOut="3" />
			<input_param name="nentry" jt="-1" type="integer" inOut="3" />
		</function>
		<function name="ts_stat" id="8e1a8b63-b2d7-419b-a7f3-192510d4b6eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_stat(query text, OUT word text, OUT ndoc integer, OUT nentry integer)
 RETURNS SETOF record
 LANGUAGE internal
 STRICT COST 10 ROWS 10000
AS $function$ts_stat1$function$
;]]></string>
			<comment><![CDATA[statistics of tsvector column]]></comment>
		</function>
		<function name="ts_token_type" id="d700192b-eda8-4ac3-80db-7548ee07c108" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_token_type(parser_oid oid, OUT tokid integer, OUT alias text, OUT description text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 16
AS $function$ts_token_type_byid$function$
;]]></string>
			<comment><![CDATA[get parser's token types]]></comment>
			<input_param name="parser_oid" jt="-1" type="oid" inOut="1" />
			<input_param name="tokid" jt="-1" type="integer" inOut="3" />
			<input_param name="alias" jt="-1" type="text" inOut="3" />
			<input_param name="description" jt="-1" type="text" inOut="3" />
		</function>
		<function name="ts_token_type" id="51d38942-5cd4-43ea-91b2-2c59a337bd13" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_token_type(parser_oid oid, OUT tokid integer, OUT alias text, OUT description text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 16
AS $function$ts_token_type_byid$function$
;]]></string>
			<comment><![CDATA[get parser's token types]]></comment>
		</function>
		<function name="ts_typanalyze" id="d0ed8bd5-2d1a-4c89-817b-353e537b3e25" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$ts_typanalyze$function$
;]]></string>
			<comment><![CDATA[tsvector typanalyze]]></comment>
		</function>
		<function name="tsm_handler_in" id="72936a60-154c-4648-9886-218ec7d4b52f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsm_handler_in(cstring)
 RETURNS tsm_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$tsm_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsm_handler_out" id="7dfdd94b-7999-4ac4-bf73-113986962479" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsm_handler_out(tsm_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsm_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsmatchjoinsel" id="ace82e5a-0183-4eed-a15c-cce043128efb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmatchjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tsmatchjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of tsvector @@ tsquery]]></comment>
		</function>
		<function name="tsmatchsel" id="57d8d181-5639-4127-a542-5cc29b9fe0d0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmatchsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tsmatchsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of tsvector @@ tsquery]]></comment>
		</function>
		<function name="tsmultirange" id="8faed498-687d-4f30-bcc0-de0b66c0bdc2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmultirange()
 RETURNS tsmultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[tsmultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="tsmultirange" id="cb418138-9120-4ae8-844f-e4d5e313755d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmultirange()
 RETURNS tsmultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[tsmultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="tsmultirange" id="876da7ce-8be2-457d-8fc2-c3366b0c920f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmultirange()
 RETURNS tsmultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[tsmultirange constructor]]></comment>
		</function>
		<function name="tsq_mcontained" id="ef4fb217-b56b-433a-bd8a-0784a3252b83" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsq_mcontained(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsq_mcontained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
		</function>
		<function name="tsq_mcontains" id="6da4e797-ca3a-42cb-8e2f-6217c398b5e1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsq_mcontains(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsq_mcontains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
		</function>
		<function name="tsquery_and" id="5cbf58d9-131f-49a8-89cd-6cae4d9dd633" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_and(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_and$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
		</function>
		<function name="tsquery_cmp" id="940d0e59-d407-4dc7-ac36-cbb3106fd73b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_cmp(tsquery, tsquery)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="tsquery_eq" id="48e8eb3f-e8f6-43e4-9b91-e6a9f493f3a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_eq(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="tsquery_ge" id="c77f2189-cc23-40b4-8a3e-59551c0da378" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_ge(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="tsquery_gt" id="50d9656c-bd39-493d-b02e-a92b45b50819" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_gt(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="tsquery_le" id="86266968-d424-4d0a-b23c-46730936227d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_le(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="tsquery_lt" id="f734e4d6-9122-4272-af77-cfaa637ee1ba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_lt(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="tsquery_ne" id="b30afed6-1dd6-4f23-b877-0ed714d37309" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_ne(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="tsquery_not" id="60d7269e-a702-4235-8726-c7311e7db279" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_not(tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_not$function$
;]]></string>
			<comment><![CDATA[implementation of !! operator]]></comment>
		</function>
		<function name="tsquery_or" id="9303fdd3-07b6-40f6-a2db-46eb36466321" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_or(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_or$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="tsquery_phrase" id="b23082b7-1948-495a-8f30-9bc9481833ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_phrase(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_phrase$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param jt="-1" type="tsquery" inOut="1" />
			<input_param jt="-1" type="tsquery" inOut="1" />
		</function>
		<function name="tsquery_phrase" id="998bc4e3-0a5b-4c63-9b34-b5443cf6b248" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_phrase(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_phrase$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
		</function>
		<function name="tsqueryin" id="2f9d7894-f64d-4756-b819-cd41a8835aae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryin(cstring)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsqueryout" id="d0b9b791-4291-4834-aa21-ea48f2f9b2f5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryout(tsquery)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsqueryrecv" id="feb5d400-0f5f-4485-a573-4851df1d8be0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryrecv(internal)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsquerysend" id="65659445-f203-4fbf-b780-1c1be3d207fb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquerysend(tsquery)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquerysend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsrange" id="47f81b15-923e-4753-8ed1-5a8cec60fb4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange(timestamp without time zone, timestamp without time zone)
 RETURNS tsrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[tsrange constructor]]></comment>
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
			<input_param jt="-1" type="timestamp without time zone" inOut="1" />
		</function>
		<function name="tsrange" id="dd1789ec-87a0-488b-8f08-45f1ad0dd7d4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange(timestamp without time zone, timestamp without time zone)
 RETURNS tsrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[tsrange constructor]]></comment>
		</function>
		<function name="tsrange_subdiff" id="20e74923-2d7b-4bdb-bd9b-4a3ed3036079" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange_subdiff(timestamp without time zone, timestamp without time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsrange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two timestamp values]]></comment>
		</function>
		<function name="tstzmultirange" id="42ab45db-7999-4c19-97dd-11fc7687bd6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzmultirange()
 RETURNS tstzmultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[tstzmultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="tstzmultirange" id="c2d9716e-4293-4574-a051-aee2a5096ece" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzmultirange()
 RETURNS tstzmultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[tstzmultirange constructor]]></comment>
			<result_param jt="-1" />
		</function>
		<function name="tstzmultirange" id="72e825e6-944b-4b74-bce7-82efa0ce9ee3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzmultirange()
 RETURNS tstzmultirange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$multirange_constructor0$function$
;]]></string>
			<comment><![CDATA[tstzmultirange constructor]]></comment>
		</function>
		<function name="tstzrange" id="3b518ad2-ec42-4afc-88d6-07e11944b82c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange(timestamp with time zone, timestamp with time zone)
 RETURNS tstzrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[tstzrange constructor]]></comment>
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
			<input_param jt="-1" type="timestamp with time zone" inOut="1" />
		</function>
		<function name="tstzrange" id="07dfb8b6-9e14-4e66-ae8f-dcd7127862be" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange(timestamp with time zone, timestamp with time zone)
 RETURNS tstzrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[tstzrange constructor]]></comment>
		</function>
		<function name="tstzrange_subdiff" id="6fdd3a0b-4bc7-4c5e-b8ab-4a624fa2d4ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange_subdiff(timestamp with time zone, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tstzrange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two timestamp with time zone values]]></comment>
		</function>
		<function name="tsvector_cmp" id="7b94a491-847f-42e6-bfda-0a7462367bae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_cmp(tsvector, tsvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="tsvector_concat" id="074fe1f2-3134-4057-b845-ae7c929f83bf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_concat(tsvector, tsvector)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_concat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
		</function>
		<function name="tsvector_eq" id="77789ff6-d962-480d-a299-9ea66d5e6453" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_eq(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="tsvector_ge" id="8c40e239-ab36-4e4b-bf65-680bdf5916e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_ge(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="tsvector_gt" id="2edfa885-a381-49dc-9358-646065a2504e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_gt(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="tsvector_le" id="d2938094-5141-440b-8e74-4cbbd1be1318" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_le(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="tsvector_lt" id="cd413ee9-35bd-4967-a798-41462699c4c5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_lt(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="tsvector_ne" id="e4027f82-cfec-412f-91ab-f158d2b9e066" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_ne(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="tsvector_to_array" id="5b478171-f7ad-4d25-a477-da59f55d0613" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_to_array(tsvector)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_to_array$function$
;]]></string>
			<comment><![CDATA[convert tsvector to array of lexemes]]></comment>
		</function>
		<function name="tsvector_update_trigger" id="5bf9c9e1-daa5-4107-bdc7-1432c037225a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_update_trigger()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE
AS $function$tsvector_update_trigger_byid$function$
;]]></string>
			<comment><![CDATA[trigger for automatic update of tsvector column]]></comment>
		</function>
		<function name="tsvector_update_trigger_column" id="3028fdab-a198-418c-879f-e8280ecc98e3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_update_trigger_column()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE
AS $function$tsvector_update_trigger_bycolumn$function$
;]]></string>
			<comment><![CDATA[trigger for automatic update of tsvector column]]></comment>
		</function>
		<function name="tsvectorin" id="01c211f9-dd30-495e-818b-3b28390f3328" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorin(cstring)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsvectorout" id="60793826-b6c3-45d2-a268-56ac667857fe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorout(tsvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsvectorrecv" id="24369f1b-f507-4aae-952f-605f6e5ed03b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorrecv(internal)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="tsvectorsend" id="3bb1ae2c-6b15-443e-8f7f-d460c8f558e4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorsend(tsvector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="txid_current" id="e68e6f58-0256-46d3-87ed-c8f0991b2973" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current()
 RETURNS bigint
 LANGUAGE internal
 STABLE STRICT
AS $function$pg_current_xact_id$function$
;]]></string>
			<comment><![CDATA[get current transaction ID]]></comment>
		</function>
		<function name="txid_current_if_assigned" id="6937b8d1-b591-4a03-994f-5e6ba45b5df0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current_if_assigned()
 RETURNS bigint
 LANGUAGE internal
 STABLE STRICT
AS $function$pg_current_xact_id_if_assigned$function$
;]]></string>
			<comment><![CDATA[get current transaction ID]]></comment>
		</function>
		<function name="txid_current_snapshot" id="9d6d1594-af7d-4e11-8e16-c9f3f6ab3fe2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current_snapshot()
 RETURNS txid_snapshot
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_current_snapshot$function$
;]]></string>
			<comment><![CDATA[get current snapshot]]></comment>
		</function>
		<function name="txid_snapshot_in" id="0385c231-c9c5-4d41-a266-f9fe2342302d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_in(cstring)
 RETURNS txid_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="txid_snapshot_out" id="e5bbc313-e378-47e6-9b8c-159fc9014b07" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_out(txid_snapshot)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="txid_snapshot_recv" id="9cd83c66-96f5-4ee2-9808-71ee8e439959" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_recv(internal)
 RETURNS txid_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="txid_snapshot_send" id="93627bb2-a561-41b7-993b-f48c3ba3ba0f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_send(txid_snapshot)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="txid_snapshot_xip" id="ea4c090e-f9b7-45d1-9ac2-2c7e041bcd5d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xip(txid_snapshot)
 RETURNS SETOF bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 50
AS $function$pg_snapshot_xip$function$
;]]></string>
			<comment><![CDATA[get set of in-progress txids in snapshot]]></comment>
		</function>
		<function name="txid_snapshot_xmax" id="8a72fe09-b2ab-4ba6-93c4-7d05bc43eead" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xmax(txid_snapshot)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_xmax$function$
;]]></string>
			<comment><![CDATA[get xmax of snapshot]]></comment>
		</function>
		<function name="txid_snapshot_xmin" id="a743a2ab-a2b5-402a-ab42-98e944d3928b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xmin(txid_snapshot)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_snapshot_xmin$function$
;]]></string>
			<comment><![CDATA[get xmin of snapshot]]></comment>
		</function>
		<function name="txid_status" id="d89383d4-e341-4a4f-9e51-ccc7731e1149" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_status(bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_xact_status$function$
;]]></string>
			<comment><![CDATA[commit status of transaction]]></comment>
		</function>
		<function name="txid_visible_in_snapshot" id="80227471-ae02-45de-bb0c-43c2a4f9cc34" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_visible_in_snapshot(bigint, txid_snapshot)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_visible_in_snapshot$function$
;]]></string>
			<comment><![CDATA[is txid visible in snapshot?]]></comment>
		</function>
		<function name="uhc_to_utf8" id="171d4093-7c5c-41fb-92a3-430e819306ed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uhc_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_uhc', $function$uhc_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UHC to UTF8]]></comment>
		</function>
		<function name="unicode_assigned" id="4a09b5ed-3e14-49de-a53f-68c77f5ca7b7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unicode_assigned(text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unicode_assigned$function$
;]]></string>
			<comment><![CDATA[check valid Unicode]]></comment>
		</function>
		<function name="unicode_version" id="5fcb9402-994a-468c-b4ef-c6a7d004bf05" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unicode_version()
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unicode_version$function$
;]]></string>
			<comment><![CDATA[Unicode version used by Postgres]]></comment>
		</function>
		<function name="unique_key_recheck" id="45eb0994-f988-48a1-8e40-8e8d636b544f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unique_key_recheck()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$unique_key_recheck$function$
;]]></string>
			<comment><![CDATA[deferred UNIQUE constraint check]]></comment>
		</function>
		<function name="unistr" id="4957d9d4-c640-4e41-9fae-1af99d5856c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unistr(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unistr$function$
;]]></string>
			<comment><![CDATA[unescape Unicode characters]]></comment>
		</function>
		<function name="unknownin" id="619bfd43-978b-441c-956e-ab50af0afd14" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownin(cstring)
 RETURNS unknown
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="unknownout" id="9ee2a4be-a755-4f39-b7df-0f2fda9afe5c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownout(unknown)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="unknownrecv" id="70a20a73-180d-4fcb-a5f1-3eb77bf737d1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownrecv(internal)
 RETURNS unknown
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="unknownsend" id="4e561311-6894-4386-b26f-56dcc3e43a30" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownsend(unknown)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="unnest" id="5b82e365-d761-4b43-adbb-bb4809044de9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unnest(anymultirange)
 RETURNS SETOF anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$multirange_unnest$function$
;]]></string>
			<comment><![CDATA[expand multirange to set of ranges]]></comment>
			<input_param jt="-1" type="anymultirange" inOut="1" />
		</function>
		<function name="unnest" id="d446ebce-503d-498d-9cd1-04b844a4d56b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unnest(anymultirange)
 RETURNS SETOF anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$multirange_unnest$function$
;]]></string>
			<comment><![CDATA[expand multirange to set of ranges]]></comment>
			<input_param jt="-1" type="anymultirange" inOut="1" />
		</function>
		<function name="unnest" id="c0a6694a-529f-464f-a533-c34461974800" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unnest(anymultirange)
 RETURNS SETOF anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$multirange_unnest$function$
;]]></string>
			<comment><![CDATA[expand multirange to set of ranges]]></comment>
		</function>
		<function name="upper" id="8c7e61f8-bdde-4dce-b3c4-aa1d2bb52a37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper$function$
;]]></string>
			<comment><![CDATA[upper bound of range]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="upper" id="df171741-a59e-4960-b496-c4cbcd290bb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper$function$
;]]></string>
			<comment><![CDATA[upper bound of range]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="upper" id="9187adea-fd0b-4232-bbc2-355491810ab2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper$function$
;]]></string>
			<comment><![CDATA[upper bound of range]]></comment>
		</function>
		<function name="upper_inc" id="3b6db177-0672-4ae4-af8a-e9fea67b2eea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inc$function$
;]]></string>
			<comment><![CDATA[is the range's upper bound inclusive?]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="upper_inc" id="d68d6d1c-0dbf-4194-b737-b8e53b5297a3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inc$function$
;]]></string>
			<comment><![CDATA[is the range's upper bound inclusive?]]></comment>
		</function>
		<function name="upper_inf" id="2f3b9525-6bb7-40a0-b95d-ebc98107f62f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inf$function$
;]]></string>
			<comment><![CDATA[is the range's upper bound infinite?]]></comment>
			<input_param jt="-1" type="anyrange" inOut="1" />
		</function>
		<function name="upper_inf" id="ba23fb33-8aec-4566-b503-9b5b08f6c80b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inf$function$
;]]></string>
			<comment><![CDATA[is the range's upper bound infinite?]]></comment>
		</function>
		<function name="utf8_to_big5" id="8d44dde2-bda2-4acc-af60-43c2bddc9558" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_big5(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_big5', $function$utf8_to_big5$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to BIG5]]></comment>
		</function>
		<function name="utf8_to_euc_cn" id="8fcf7b77-0f67-4a60-8f8e-246ec26b2b5b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_cn(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_cn', $function$utf8_to_euc_cn$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_CN]]></comment>
		</function>
		<function name="utf8_to_euc_jis_2004" id="8543b833-e667-41f0-936c-eb8ac387de08" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_jis_2004(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc2004', $function$utf8_to_euc_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_JIS_2004]]></comment>
		</function>
		<function name="utf8_to_euc_jp" id="3fb3a7a2-2faf-48e4-9ba7-b7649afb674a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_jp(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_jp', $function$utf8_to_euc_jp$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_JP]]></comment>
		</function>
		<function name="utf8_to_euc_kr" id="45e1ab4f-8bf9-41b5-a2e8-b74ad8bd4f63" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_kr(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_kr', $function$utf8_to_euc_kr$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_KR]]></comment>
		</function>
		<function name="utf8_to_euc_tw" id="72bdaa39-59e6-49cc-8010-4704ed085b5f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_tw(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_tw', $function$utf8_to_euc_tw$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_TW]]></comment>
		</function>
		<function name="utf8_to_gb18030" id="2ce6a8ba-9793-4d88-9408-49d647bfb6fa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_gb18030(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gb18030', $function$utf8_to_gb18030$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to GB18030]]></comment>
		</function>
		<function name="utf8_to_gbk" id="c373b483-72bf-4a87-9754-b73d6a2d3776" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_gbk(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gbk', $function$utf8_to_gbk$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to GBK]]></comment>
		</function>
		<function name="utf8_to_iso8859" id="5a6693b6-29a1-436b-b303-c34d4d973734" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_iso8859(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859', $function$utf8_to_iso8859$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to ISO-8859 2-16]]></comment>
		</function>
		<function name="utf8_to_iso8859_1" id="11d4f966-c752-4245-a7eb-68491936c4a4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_iso8859_1(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859_1', $function$utf8_to_iso8859_1$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to LATIN1]]></comment>
		</function>
		<function name="utf8_to_johab" id="4a3e957d-f29b-4dc0-981d-ae0a8c9c7fdf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_johab(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_johab', $function$utf8_to_johab$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to JOHAB]]></comment>
		</function>
		<function name="utf8_to_koi8r" id="39206660-250f-43b7-955b-3c01929e11c4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_koi8r(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$utf8_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to KOI8R]]></comment>
		</function>
		<function name="utf8_to_koi8u" id="17a62aef-30bd-47d4-bc88-1e26d4a92ec2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_koi8u(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$utf8_to_koi8u$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to KOI8U]]></comment>
		</function>
		<function name="utf8_to_shift_jis_2004" id="6fb777d2-5326-40d9-967b-a947c82403bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_shift_jis_2004(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis2004', $function$utf8_to_shift_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to SHIFT_JIS_2004]]></comment>
		</function>
		<function name="utf8_to_sjis" id="396fcb9f-d4fe-47b2-87a9-352f5db2b95c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_sjis(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis', $function$utf8_to_sjis$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to SJIS]]></comment>
		</function>
		<function name="utf8_to_uhc" id="a7501928-07a5-43de-8bd4-4646923b6664" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_uhc(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_uhc', $function$utf8_to_uhc$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to UHC]]></comment>
		</function>
		<function name="utf8_to_win" id="0707822a-3098-4943-9f02-dc3513d1a202" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_win(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_win', $function$utf8_to_win$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to WIN]]></comment>
		</function>
		<function name="uuid_cmp" id="77ebffc2-dcd5-4fd8-9ccd-8a81962e8ea8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_cmp(uuid, uuid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="uuid_eq" id="d1d7dd9e-fbf6-4f47-92c1-bda7d42f840d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_eq(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="uuid_extract_timestamp" id="2736cd22-04d0-4f7e-8da4-783e8491ca95" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_extract_timestamp(uuid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_extract_timestamp$function$
;]]></string>
			<comment><![CDATA[extract timestamp from UUID]]></comment>
		</function>
		<function name="uuid_extract_version" id="60b86b43-ec89-415e-8504-29d70fb0b84f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_extract_version(uuid)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_extract_version$function$
;]]></string>
			<comment><![CDATA[extract version from RFC 4122 UUID]]></comment>
		</function>
		<function name="uuid_ge" id="67016528-1c61-46bc-8d23-0faa82809893" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_ge(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="uuid_gt" id="f7e75ab8-84f1-40fb-ab62-f266fadd3916" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_gt(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="uuid_hash" id="398c7f22-c72e-4f12-b679-eacc2f69ebed" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_hash(uuid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="uuid_hash_extended" id="771f2916-4d8c-4fd4-8048-007d9f4934af" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_hash_extended(uuid, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_hash_extended$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
		</function>
		<function name="uuid_in" id="4a7aee77-6f7e-4515-92cc-aaaad6794aa0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_in(cstring)
 RETURNS uuid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="uuid_le" id="f09e6141-6696-4e5c-90b4-de55071aef88" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_le(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="uuid_lt" id="dc881d39-e3c7-40eb-a010-cbc50757f54d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_lt(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="uuid_ne" id="58a7e546-02e4-4016-b8d8-90a6a82d24cc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_ne(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="uuid_out" id="3f187a49-0972-49f7-8397-542a61dafaa8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_out(uuid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="uuid_recv" id="2c7adf3d-8f00-4fa2-bb7a-4c18edddc88d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_recv(internal)
 RETURNS uuid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="uuid_send" id="46dc8b66-10b2-4ded-8f9b-0e4009bd3b92" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_send(uuid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="uuid_sortsupport" id="ffe19b07-ed2a-465d-83ca-1389f5b4e57d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
		</function>
		<function name="varbit" id="2911a9c1-84c4-4611-9c15-c84c145573e8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit(bit varying, integer, boolean)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT SUPPORT varbit_support
AS $function$varbit$function$
;]]></string>
			<comment><![CDATA[adjust varbit() to typmod length]]></comment>
		</function>
		<function name="varbit_in" id="0cfabef1-b50f-4049-ac63-1193dd63a079" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_in(cstring, oid, integer)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varbit_out" id="61aba9fa-b98e-47f6-a8c3-71149a46f408" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_out(bit varying)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varbit_recv" id="a1f755c5-b75a-4313-9e7c-903788ffd06d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_recv(internal, oid, integer)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varbit_send" id="3f80f139-d174-47e4-b4c5-eba4a4f4aaba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_send(bit varying)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varbit_support" id="68645433-cad5-4b04-ae9a-56c0af03da5f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_support$function$
;]]></string>
			<comment><![CDATA[planner support for varbit length coercion]]></comment>
		</function>
		<function name="varbitcmp" id="b6a432be-e354-45a4-aa33-d53730200b8c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitcmp(bit varying, bit varying)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="varbiteq" id="d0c83b02-ab27-4491-b794-4e68214a6ac8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbiteq(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$biteq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="varbitge" id="5610d56f-1c83-4f91-b0eb-8703838b94e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitge(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="varbitgt" id="bf95bf61-4f81-43d8-bfdd-9c2d9c63657b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitgt(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="varbitle" id="76980f95-ef38-48d8-a146-a0ab7b421622" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitle(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="varbitlt" id="9167f614-83fe-4412-add4-352bef37ed30" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitlt(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="varbitne" id="f745cb59-e9e4-4b26-a860-57b86df761d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitne(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="varbittypmodin" id="3fca9a79-6304-49a2-b62e-a16f087b23f7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbittypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbittypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="varbittypmodout" id="c81f04a9-6866-44fc-a6e3-c4dd8ded3c1f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbittypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbittypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="varchar" id="615599e5-1ece-451a-8760-df650844aace" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."varchar"(name)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$name_text$function$
;]]></string>
			<comment><![CDATA[convert name to varchar]]></comment>
			<input_param jt="-1" type="name" inOut="1" />
		</function>
		<function name="varchar" id="f673944e-204f-4a63-a5b1-640bded82e8c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."varchar"(name)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$name_text$function$
;]]></string>
			<comment><![CDATA[convert name to varchar]]></comment>
		</function>
		<function name="varchar_support" id="e3656c17-6bf6-4fb2-aa76-87b6410f92cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchar_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchar_support$function$
;]]></string>
			<comment><![CDATA[planner support for varchar length coercion]]></comment>
		</function>
		<function name="varcharin" id="84be644d-2908-435c-9008-0f7d3d1f3ade" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharin(cstring, oid, integer)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varcharin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varcharout" id="0c9e5688-a047-4b97-8031-d3b7e33ec99e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharout(character varying)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varcharout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varcharrecv" id="433598a4-b0f9-4c0a-a003-33510e3d7caa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharrecv(internal, oid, integer)
 RETURNS character varying
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$varcharrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varcharsend" id="c94dfd05-feac-4e8d-8b09-3e00c42ecdd8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharsend(character varying)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$varcharsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="varchartypmodin" id="b195bbcd-ec4f-405a-8d36-df69cd5a38ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchartypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchartypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="varchartypmodout" id="15e28535-af28-4204-b41e-3806b161c875" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchartypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchartypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
		</function>
		<function name="version" id="7a0d0f59-3c9a-4b75-b028-ceef3238f4c6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.version()
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pgsql_version$function$
;]]></string>
			<comment><![CDATA[PostgreSQL version string]]></comment>
		</function>
		<function name="void_in" id="b68aebdb-7294-412b-a870-09a235621427" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_in(cstring)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="void_out" id="9bc4e44e-dd06-4810-8891-c6918989e7cd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_out(void)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="void_recv" id="95d1f06d-7b30-4cd5-a6f0-f6d39ed2eea4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_recv(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="void_send" id="14443a14-3aec-4c32-b287-45748942c3ee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_send(void)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="websearch_to_tsquery" id="8b776242-edff-497b-8d95-4d36f28b7410" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.websearch_to_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$websearch_to_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
			<input_param jt="-1" type="regconfig" inOut="1" />
			<input_param jt="-1" type="text" inOut="1" />
		</function>
		<function name="websearch_to_tsquery" id="1926eda3-23ae-4526-9f4a-4676ff5f1007" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.websearch_to_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$websearch_to_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
		</function>
		<function name="width" id="155a7b3b-f547-47ca-badd-011c5c1140b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_width$function$
;]]></string>
			<comment><![CDATA[box width]]></comment>
		</function>
		<function name="width_bucket" id="ed42dd10-5ba8-49c4-9c74-dba9cb94b4a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(numeric, numeric, numeric, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_numeric$function$
;]]></string>
			<comment><![CDATA[bucket number of operand in equal-width histogram]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="width_bucket" id="6a390426-d8cc-48b5-b32a-19ab7cf15bf1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(numeric, numeric, numeric, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_numeric$function$
;]]></string>
			<comment><![CDATA[bucket number of operand in equal-width histogram]]></comment>
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="numeric" inOut="1" />
			<input_param jt="-1" type="integer" inOut="1" />
		</function>
		<function name="width_bucket" id="4b834deb-35be-49e3-95ee-48bc59e33ddb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(numeric, numeric, numeric, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_numeric$function$
;]]></string>
			<comment><![CDATA[bucket number of operand in equal-width histogram]]></comment>
		</function>
		<function name="win1250_to_latin2" id="ca6bc1f2-c8e0-4992-a55e-11b0d97290fe" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1250_to_latin2(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$win1250_to_latin2$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1250 to LATIN2]]></comment>
		</function>
		<function name="win1250_to_mic" id="75c37e17-f469-41b7-a768-f88739dc9374" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1250_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$win1250_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1250 to MULE_INTERNAL]]></comment>
		</function>
		<function name="win1251_to_iso" id="3b9530f6-cf16-4ddb-a489-d7d42c3feffd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_iso(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to ISO-8859-5]]></comment>
		</function>
		<function name="win1251_to_koi8r" id="1486a16f-a403-40a9-864b-99ce858f1ec7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_koi8r(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to KOI8R]]></comment>
		</function>
		<function name="win1251_to_mic" id="277fa8d2-c8b5-4eba-9440-a5d089e83bde" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to MULE_INTERNAL]]></comment>
		</function>
		<function name="win1251_to_win866" id="181fc07b-335b-4a3b-86b0-9601c5d3e012" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_win866(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to WIN866]]></comment>
		</function>
		<function name="win866_to_iso" id="c0d13784-c606-4b09-8f72-ef5d8ee1aad9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_iso(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to ISO-8859-5]]></comment>
		</function>
		<function name="win866_to_koi8r" id="63b1d55f-29de-42cc-8556-797a9c2668c8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_koi8r(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to KOI8R]]></comment>
		</function>
		<function name="win866_to_mic" id="4bac789f-96cd-416f-9e49-003080a3de7a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_mic(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to MULE_INTERNAL]]></comment>
		</function>
		<function name="win866_to_win1251" id="3b7e2e51-55dd-46c0-8e5b-ca84335e7a14" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_win1251(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to WIN1251]]></comment>
		</function>
		<function name="win_to_utf8" id="0bc374f3-a504-4074-b238-fa2e85f9fee5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win_to_utf8(integer, integer, cstring, internal, integer, boolean)
 RETURNS integer
 LANGUAGE c
 IMMUTABLE PARALLEL SAFE STRICT
AS '$libdir/utf8_and_win', $function$win_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN to UTF8]]></comment>
		</function>
		<function name="window_cume_dist_support" id="12173174-5988-4020-9ad1-8a82f439cdaa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.window_cume_dist_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_cume_dist_support$function$
;]]></string>
			<comment><![CDATA[planner support for cume_dist]]></comment>
		</function>
		<function name="window_dense_rank_support" id="52fd6995-ffdb-4a91-bc09-4aa006ac2d0c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.window_dense_rank_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_dense_rank_support$function$
;]]></string>
			<comment><![CDATA[planner support for dense_rank]]></comment>
		</function>
		<function name="window_ntile_support" id="07234dc6-557a-447d-8306-6d2aa25a69b9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.window_ntile_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_ntile_support$function$
;]]></string>
			<comment><![CDATA[planner support for ntile]]></comment>
		</function>
		<function name="window_percent_rank_support" id="a5df46b1-5761-486b-9c60-953708261414" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.window_percent_rank_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_percent_rank_support$function$
;]]></string>
			<comment><![CDATA[planner support for percent_rank]]></comment>
		</function>
		<function name="window_rank_support" id="534bb9e2-354e-4018-b83d-91400a373157" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.window_rank_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_rank_support$function$
;]]></string>
			<comment><![CDATA[planner support for rank]]></comment>
		</function>
		<function name="window_row_number_support" id="ca20199d-b3a2-4e73-aa83-a9bd08767753" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.window_row_number_support(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_row_number_support$function$
;]]></string>
			<comment><![CDATA[planner support for row_number]]></comment>
		</function>
		<function name="xid" id="0fa6be1d-dcb1-44a5-a6f2-9cda4e00e1cb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid(xid8)
 RETURNS xid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xid8toxid$function$
;]]></string>
			<comment><![CDATA[convert xid8 to xid]]></comment>
		</function>
		<function name="xid8_larger" id="527316d3-e810-4f14-8fab-bd10a26f54d9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8_larger(xid8, xid8)
 RETURNS xid8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xid8_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
		</function>
		<function name="xid8_smaller" id="2a859a7c-4380-43be-8e71-77b8103c66d3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8_smaller(xid8, xid8)
 RETURNS xid8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xid8_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
		</function>
		<function name="xid8cmp" id="7d6a2399-50df-4c92-a6da-8069c9a38d87" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8cmp(xid8, xid8)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xid8cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
		</function>
		<function name="xid8eq" id="9507c1c8-a838-40de-a931-8ccb682fd6a1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8eq(xid8, xid8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xid8eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="xid8ge" id="aff32392-849f-45d9-b673-6653ec7f975f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8ge(xid8, xid8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xid8ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
		</function>
		<function name="xid8gt" id="43cfaf89-ad65-4130-a44d-cb3c12e051e6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8gt(xid8, xid8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xid8gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
		</function>
		<function name="xid8in" id="a77b1c22-9460-4026-a1e6-e0edca38b130" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8in(cstring)
 RETURNS xid8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xid8in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xid8le" id="43b87e1e-6392-4f7f-b248-cff1c1df0217" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8le(xid8, xid8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xid8le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
		</function>
		<function name="xid8lt" id="d347fe19-1d69-4fdc-93f2-c329f67177ec" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8lt(xid8, xid8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xid8lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
		</function>
		<function name="xid8ne" id="ee40b145-d82f-4222-9100-549a0996c390" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8ne(xid8, xid8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xid8ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="xid8out" id="4076e8ed-27ba-4fda-9c13-f5f0d9992479" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8out(xid8)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xid8out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xid8recv" id="e10137cc-4745-4577-a918-784d7c4ab77c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8recv(internal)
 RETURNS xid8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xid8recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xid8send" id="1b5bf674-a5e1-4132-83a7-51630275382f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xid8send(xid8)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xid8send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xideq" id="04f5e0a9-37a1-4f84-9a57-9f00e6041c0c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xideq(xid, xid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="xideqint4" id="667daf72-8a6c-4d9a-9752-78dd535267d8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xideqint4(xid, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
		</function>
		<function name="xidin" id="71ebd61f-b5f8-471a-82d2-16084395f29a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidin(cstring)
 RETURNS xid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xidneq" id="0a1733b6-8a0b-4869-94f5-38299e147e75" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidneq(xid, xid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xidneq$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="xidneqint4" id="d9ecdf02-7cdd-45a0-a214-e0d503500b54" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidneqint4(xid, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xidneq$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
		</function>
		<function name="xidout" id="1cfab007-f5ce-4598-aeab-cff5323abcf6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidout(xid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xidrecv" id="297fef85-49b2-47f4-8398-d49e9d8304e5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidrecv(internal)
 RETURNS xid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xidsend" id="8587888e-7a6f-4917-918c-a2829b0c18b6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidsend(xid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xml" id="216c309d-1766-43e1-9165-3ab991cefc5d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml(text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$texttoxml$function$
;]]></string>
			<comment><![CDATA[perform a non-validating parse of a character string to produce an XML value]]></comment>
		</function>
		<function name="xml_in" id="ee9c1e9e-8a0c-4d3b-a98f-b9a639329a6d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_in(cstring)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xml_is_well_formed" id="5b30c194-aad6-4710-b3dd-d779c5a5e4cf" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed(text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed$function$
;]]></string>
			<comment><![CDATA[determine if a string is well formed XML]]></comment>
		</function>
		<function name="xml_is_well_formed_content" id="fa6bd6ad-4b9f-4101-a66c-5a33999b4335" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed_content(text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed_content$function$
;]]></string>
			<comment><![CDATA[determine if a string is well formed XML content]]></comment>
		</function>
		<function name="xml_is_well_formed_document" id="741eef7e-2065-49a3-9be4-ef4c180567e0" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed_document(text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed_document$function$
;]]></string>
			<comment><![CDATA[determine if a string is well formed XML document]]></comment>
		</function>
		<function name="xml_out" id="08d74d65-b902-4634-932f-21985fa0d9ef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_out(xml)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xml_recv" id="f8f0a6b0-909a-41dc-9b3a-f92f34b5bbe1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_recv(internal)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xml_send" id="6389254b-0967-4531-a853-55f44cd8b351" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_send(xml)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
		</function>
		<function name="xmlcomment" id="bbef9115-e763-4a04-b0d3-f30350fb4e9b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlcomment(text)
 RETURNS xml
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlcomment$function$
;]]></string>
			<comment><![CDATA[generate XML comment]]></comment>
		</function>
		<function name="xmlconcat2" id="3e6b6862-e351-4b71-8766-88c6530964ae" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlconcat2(xml, xml)
 RETURNS xml
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$xmlconcat2$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
		</function>
		<function name="xmlexists" id="2a75b732-e684-4d72-a5fa-3b299343613a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."xmlexists"(text, xml)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlexists$function$
;]]></string>
			<comment><![CDATA[test XML value against XPath expression]]></comment>
		</function>
		<function name="xmltext" id="ff8d307f-eda1-4ffd-b8c6-c79effe3772a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmltext(text)
 RETURNS xml
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltext$function$
;]]></string>
			<comment><![CDATA[generate XML text node]]></comment>
		</function>
		<function name="xmlvalidate" id="dff317ed-ec15-4edf-bda5-44ee24c3c2f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlvalidate(xml, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlvalidate$function$
;]]></string>
			<comment><![CDATA[validate an XML value]]></comment>
		</function>
		<function name="xpath" id="83123575-4831-4dc4-8923-b8e0f0b69819" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath(text, xml, text[])
 RETURNS xml[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath$function$
;]]></string>
			<comment><![CDATA[evaluate XPath expression, with namespaces support]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="xpath" id="f73d2015-9f6d-47a0-9289-9829be1f804e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath(text, xml, text[])
 RETURNS xml[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath$function$
;]]></string>
			<comment><![CDATA[evaluate XPath expression, with namespaces support]]></comment>
		</function>
		<function name="xpath_exists" id="cb991a4a-7bf3-4440-a94b-baaf28462ffe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath_exists(text, xml, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath_exists$function$
;]]></string>
			<comment><![CDATA[test XML value against XPath expression, with namespace support]]></comment>
			<input_param jt="-1" type="text" inOut="1" />
			<input_param jt="-1" type="xml" inOut="1" />
			<input_param jt="-1" type="ARRAY" inOut="1" />
		</function>
		<function name="xpath_exists" id="06b39e19-5626-4e3a-9f13-fda529caa779" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath_exists(text, xml, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath_exists$function$
;]]></string>
			<comment><![CDATA[test XML value against XPath expression, with namespace support]]></comment>
		</function>
		<rule name="pg_settings_n" id="b7aba9ac-7ff5-4f82-99e8-45eabf21744b" >
			<string><![CDATA[CREATE RULE ${nameWithSchemaName} AS
    ON UPDATE TO pg_catalog.pg_settings DO INSTEAD NOTHING]]></string>
		</rule>
		<rule name="pg_settings_u" id="361cd838-940a-4e9e-9d50-a0c5fa6aee8b" >
			<string><![CDATA[CREATE RULE ${nameWithSchemaName} AS
    ON UPDATE TO pg_catalog.pg_settings
   WHERE (new.name = old.name) DO  SELECT set_config(old.name, new.setting, false) AS set_config]]></string>
		</rule>
	</schema>
	<schema name="public" catalogname="postgrespractice" >
		<comment><![CDATA[standard public schema]]></comment>
		<table name="avg_coords" row_count="19618" spec="" >
			<column name="zip_code" type="integer" length="32" />
			<column name="city" type="varchar" length="100" />
			<column name="state" type="varchar" length="4" />
			<column name="avg_x_coord" type="real" />
			<column name="avg_y_coord" type="real" />
			<column name="locationid" type="integer" mandatory="y" />
			<index name="pk_avg_coords" unique="PRIMARY_KEY" >
				<column name="locationid" />
			</index>
		</table>
		<table name="customers" row_count="99441" spec="" >
			<column name="customer_id" type="varchar" length="100" mandatory="y" />
			<column name="customer_unique_id" type="varchar" length="100" />
			<column name="customer_zip_code_prefix" type="integer" length="32" />
			<column name="customer_city" type="varchar" length="50" />
			<column name="customer_state" type="varchar" length="5" />
			<column name="locationid" type="integer" length="32" />
			<column name="new_customer_id" type="integer" mandatory="y" />
			<index name="pk_customers" unique="PRIMARY_KEY" >
				<column name="new_customer_id" />
			</index>
			<fk name="fk_customers_state_pop_n_gdp_customers" to_schema="postgrespractice.public" to_table="state_pop_n_gdp_customers" >
				<fk_column name="customer_state" pk="state" />
			</fk>
		</table>
		<table name="order_items" row_count="112650" spec="" >
			<column name="order_id" type="text" />
			<column name="order_item_id" type="text" />
			<column name="product_id" type="text" />
			<column name="seller_id" type="text" />
			<column name="shipping_limit_date" type="text" />
			<column name="price" type="text" />
			<column name="freight_value" type="text" />
			<column name="new_order_id" type="integer" length="32" />
			<column name="new_product_id" type="integer" length="32" />
			<column name="new_seller_id" type="integer" length="32" />
			<column name="new_order_item_id" type="integer" length="32" />
			<fk name="fk_order_items_sellers" to_schema="postgrespractice.public" to_table="sellers" >
				<fk_column name="new_seller_id" pk="new_seller_id" />
			</fk>
			<fk name="fk_order_items_orders" to_schema="postgrespractice.public" to_table="orders" >
				<fk_column name="new_order_id" pk="new_order_id" />
			</fk>
			<fk name="fk_order_items_products" to_schema="postgrespractice.public" to_table="products" >
				<fk_column name="new_product_id" pk="new_product_id" />
			</fk>
		</table>
		<table name="orders" row_count="198882" spec="" >
			<column name="order_id" type="text" />
			<column name="customer_id" type="text" />
			<column name="order_status" type="text" />
			<column name="order_purchase_timestamp" type="text" />
			<column name="order_approved_at" type="text" />
			<column name="order_delivered_carrier_date" type="text" />
			<column name="order_delivered_customer_date" type="text" />
			<column name="order_estimated_delivery_date" type="text" />
			<column name="new_order_id" type="integer" mandatory="y" />
			<column name="new_customer_id" type="integer" length="32" />
			<index name="pk_orders" unique="PRIMARY_KEY" >
				<column name="new_order_id" />
			</index>
			<fk name="fk_orders_customers" to_schema="postgrespractice.public" to_table="customers" >
				<fk_column name="new_customer_id" pk="new_customer_id" />
			</fk>
		</table>
		<table name="payments" row_count="103886" spec="" >
			<column name="order_id" type="text" />
			<column name="payment_sequential" type="text" />
			<column name="payment_type" type="text" />
			<column name="payment_installments" type="text" />
			<column name="payment_value" type="text" />
			<column name="new_order_id" type="integer" length="32" />
			<fk name="fk_payments_orders" to_schema="postgrespractice.public" to_table="orders" >
				<fk_column name="new_order_id" pk="new_order_id" />
			</fk>
		</table>
		<table name="products" row_count="32951" spec="" >
			<column name="product_id" type="text" />
			<column name="product_category_name" type="text" />
			<column name="product_name_length" type="text" />
			<column name="product_description_length" type="text" />
			<column name="product_photos_qty" type="text" />
			<column name="product_weight_g" type="text" />
			<column name="product_length_cm" type="text" />
			<column name="product_height_cm" type="text" />
			<column name="product_width_cm" type="text" />
			<column name="new_product_id" type="integer" mandatory="y" />
			<index name="pk_products" unique="PRIMARY_KEY" >
				<column name="new_product_id" />
			</index>
		</table>
		<table name="reviews" row_count="99223" spec="" >
			<column name="review_id" type="text" />
			<column name="order_id" type="text" />
			<column name="review_score" type="text" />
			<column name="review_comment_title" type="text" />
			<column name="review_comment_message" type="text" />
			<column name="review_creation_date" type="text" />
			<column name="review_answer_timestamp" type="text" />
			<column name="new_review_id" type="integer" length="32" />
			<column name="new_order_id" type="integer" length="32" />
			<fk name="fk_reviews_orders" to_schema="postgrespractice.public" to_table="orders" >
				<fk_column name="new_order_id" pk="new_order_id" />
			</fk>
		</table>
		<table name="sellers" row_count="3095" spec="" >
			<column name="seller_id" type="varchar" length="100" />
			<column name="seller_zip_code" type="integer" length="32" />
			<column name="seller_city" type="varchar" length="50" />
			<column name="seller_state" type="varchar" length="5" />
			<column name="new_seller_id" type="integer" mandatory="y" />
			<column name="locationid" type="integer" length="32" />
			<index name="pk_sellers" unique="PRIMARY_KEY" >
				<column name="new_seller_id" />
			</index>
			<fk name="fk_sellers_state_pop_n_gdp_sellers" to_schema="postgrespractice.public" to_table="state_pop_n_gdp_sellers" >
				<fk_column name="seller_state" pk="state" />
			</fk>
		</table>
		<table name="state_pop_n_gdp_customers" prior="state_pop_n_gdp_0" >
			<column name="state" prior="initials" type="varchar" length="2" mandatory="y" />
			<column name="population_2015" type="integer" length="32" />
			<column name="gdp_2015_r" type="numeric" />
			<column name="gdp_per_capita_r" type="numeric" />
			<index name="state_pop_n_gdp_pkey_0" unique="PRIMARY_KEY" >
				<column name="state" />
			</index>
		</table>
		<table name="state_pop_n_gdp_sellers" prior="state_pop_n_gdp" spec="" >
			<column name="state" prior="initials" type="varchar" length="2" mandatory="y" />
			<column name="population_2015" type="integer" length="32" />
			<column name="gdp_2015_r" type="numeric" />
			<column name="gdp_per_capita_r" type="numeric" />
			<index name="state_pop_n_gdp_pkey" unique="PRIMARY_KEY" >
				<column name="state" />
			</index>
		</table>
	</schema>
	<layout name="Main Diagram" id="be470fcc-f448-4842-a86e-e8339d621976" show_relation="columns" >
		<entity schema="postgrespractice.public" name="customers" color="BED3F4" x="133" y="247" />
		<entity schema="postgrespractice.public" name="state_pop_n_gdp_customers" color="3986C1" x="57" y="513" />
		<entity schema="postgrespractice.public" name="order_items" color="BED3F4" x="893" y="475" />
		<entity schema="postgrespractice.public" name="reviews" color="BED3F4" x="551" y="817" />
		<entity schema="postgrespractice.public" name="avg_coords" color="BED3F4" x="2071" y="684" />
		<entity schema="postgrespractice.public" name="payments" color="BED3F4" x="304" y="703" />
		<entity schema="postgrespractice.public" name="products" color="BED3F4" x="1121" y="570" />
		<entity schema="postgrespractice.public" name="state_pop_n_gdp_sellers" color="3986C1" x="1311" y="95" />
		<entity schema="postgrespractice.public" name="sellers" color="BED3F4" x="912" y="190" />
		<entity schema="postgrespractice.public" name="orders" color="BED3F4" x="589" y="380" />
		<group name="avg_coords" color="ECF0F7" >
			<entity schema="postgrespractice.public" name="customers" />
			<entity schema="postgrespractice.public" name="order_items" />
			<entity schema="postgrespractice.public" name="reviews" />
			<entity schema="postgrespractice.public" name="avg_coords" />
			<entity schema="postgrespractice.public" name="payments" />
			<entity schema="postgrespractice.public" name="products" />
			<entity schema="postgrespractice.public" name="sellers" />
			<entity schema="postgrespractice.public" name="orders" />
		</group>
		<script name="SQL_Editor" id="b16177af-4f9a-4530-9517-8f1913bbea8d" language="SQL" >
			<string><![CDATA[ALTER TABLE payments ADD COLUMN new_order_id INTEGER;

UPDATE reviews a
SET new_order_id = b.new_order_id
FROM orders b
WHERE a.order_id = b.order_id;]]></string>
		</script>
		<script name="SQL_Editor_001" id="f701791f-47c2-4abd-b0ff-e467a7256a50" language="SQL" >
			<string><![CDATA[ALTER TABLE order_items ADD COLUMN new_order_item_id INTEGER;

WITH numbered AS (
    SELECT ctid, ROW_NUMBER() OVER (ORDER BY order_item_id) AS rn
    FROM order_items
)
UPDATE order_items
SET new_order_item_id = numbered.rn
FROM numbered
WHERE order_items.ctid = numbered.ctid;]]></string>
		</script>
		<script name="SQL_Editor_002" id="72cb396c-e692-4535-80f7-86903eb5bd91" language="SQL" >
			<string><![CDATA[ALTER TABLE sellers ADD COLUMN locationid INTEGER;

UPDATE sellers a
SET locationid = b.locationid
FROM avg_coords b
WHERE a.seller_zip_code = b.zip_code
AND a.seller_city = b.city
AND a.seller_state = b.state;]]></string>
		</script>
		<script name="SQL_Editor_003" id="02876b33-bd69-438e-afa7-003d22710e14" language="SQL" >
			<string><![CDATA[CREATE TABLE state_pop_n_gdp (
    initials VARCHAR(2) PRIMARY KEY,
    population_2015 INTEGER,
    gdp_2015_r NUMERIC,
    gdp_per_capita_r NUMERIC
);
]]></string>
		</script>
		<script name="SQL_Editor_004" id="a808d0d2-3ed6-4862-8896-6b86ede011e6" language="SQL" >
			<string><![CDATA[INSERT INTO state_pop_n_gdp_customers
SELECT * FROM state_pop_n_gdp_sellers]]></string>
		</script>
		<browser id="9b9b612a-c16c-4c42-96ea-fa175cbfd607" name="customers" confirm_updates="y" >
			<browse_table schema="postgrespractice.public" entity="customers" fk_out="n" x="20" y="20" width="290" height="280" />
		</browser>
		<browser id="f75d7340-04c6-45df-a5cc-65cf6db119ef" name="customers_001" confirm_updates="y" >
			<browse_table schema="postgrespractice.public" entity="customers" fk_out="n" x="20" y="20" width="290" height="280" />
		</browser>
		<browser id="6027cbee-9db7-4815-ace9-13e26976f7dc" name="products" confirm_updates="y" >
			<browse_table schema="postgrespractice.public" entity="products" fk_out="n" x="20" y="20" width="290" height="280" />
		</browser>
		<browser id="ce6ead30-ddbd-49b7-8486-76a91d02b8ae" name="sellers" confirm_updates="y" >
			<browse_table schema="postgrespractice.public" entity="sellers" fk_out="n" x="20" y="20" width="290" height="280" />
		</browser>
	</layout>
	<layout name="~Diagram with Sample Tools" id="e91ab5cb-3ff6-42ee-b183-268645e06dc3" show_column_type="y" show_relation="columns" >
		<entity schema="postgrespractice.public" name="avg_coords" color="BED3F4" x="399" y="361" />
		<entity schema="postgrespractice.public" name="customers" color="BED3F4" x="665" y="361" />
		<entity schema="postgrespractice.public" name="order_items" color="BED3F4" x="665" y="646" />
		<entity schema="postgrespractice.public" name="orders" color="BED3F4" x="1026" y="646" />
		<entity schema="postgrespractice.public" name="payments" color="BED3F4" x="342" y="646" />
		<entity schema="postgrespractice.public" name="products" color="BED3F4" x="57" y="304" />
		<entity schema="postgrespractice.public" name="reviews" color="BED3F4" x="399" y="57" />
		<entity schema="postgrespractice.public" name="sellers" color="BED3F4" x="1026" y="361" />
		<script name="SQL Editor" id="9d963dcd-27b7-4129-a089-12d6146ca7d7" language="SQL" >
			<string><![CDATA[SELECT
	zip_code, city, state, avg_x_coord, avg_y_coord, locationid
FROM
	public.avg_coords s;]]></string>
		</script>
		<browser id="1e9fae74-8495-4ba0-a5ec-2ad5dd039f23" name="Relational Data Editor" confirm_updates="y" >
			<browse_table schema="postgrespractice.public" entity="avg_coords" fk_out="n" x="20" y="20" width="270" height="-60" />
		</browser>
		<query id="2cbca5cb-4417-44c3-a309-d0a88d2f9d84" name="Query Builder" >
			<query_table schema="postgrespractice.public" name="avg_coords" alias="ac" x="57" y="57" >
				<column name="zip_code" />
				<column name="city" />
				<column name="state" />
				<column name="avg_x_coord" />
				<column name="avg_y_coord" />
				<column name="locationid" />
			</query_table>
		</query>
	</layout>
</project>